;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(minibuffer-history-search-history consult-org--history consult--keep-lines-history consult--theme-history magit-read-file-hist search-ring consult--crm-history embark--prompter-history bibtex-actions-history ssh-history tmm--history custom-variable-history read-from-kill-ring-history consult--mode-command-history xref--read-identifier-history yes-or-no-p-history counsel-outline-history grep-regexp-history consult-imenu--history goto-line-history input-method-history consult--apropos-history consult--find-history consult--grep-history consult--line-history consult--buffer-history mu4e-views--mu4e-select-view-msg-method-history synosaurus--history wordnut-completion-hist consult-imenu-history consult-error-history consult-command-history counsel-locate-history consult-minibuffer-history consult-kmacro-history regexp-history pdf-annot-color-history TeX-command-history imenu--history-list extended-command-history consult-theme-history consult-minor-mode-history consult-apropos-history consult-buffer-history consult-outline-history consult-line-history consult-mark-history read-expression-history flycheck-read-checker-history counsel-flycheck-errors-history buffer-name-history eww-prompt-history Info-search-history read-char-history swiper-history org-agenda-search-history counsel-imenu-history evil-ex-history charset-history magit-revision-history transient--history org-read-date-history org-refile-history bibtex-completion-cite-command-history org-link--history keymap-name-history org-capture--prompt-history read-number-history mu4e~headers-search-hist query-replace-history counsel-fonts-history bookmark-history shell-command-history selectrum-rg-history face-name-history ivy-history counsel-org-goto-history counsel-apropos-history helm-apropos-history helm-occur-history helm-M-x-input-history org-tags-history selectrum-swiper-history empty-history ivy-bibtex-history counsel-git-grep-history counsel-describe-symbol-history file-name-history minibuffer-history counsel-M-x-history))
(setq consult-org--history '("on acade" "life" "cart" "writin" "readin" "writin"))
(setq consult--keep-lines-history '("ss" "\"ss"))
(setq consult--theme-history '("atom-one-dark"))
(setq magit-read-file-hist '(".gitignore" "var/savehist.el" "var/keyfreq.el" "elisp/org-roam-other-rcp.el" "var/bookmark-default.el" "post.hbs" "assets/css/style.css" "assets/js/main.js" "var/org/org-roam.db"))
(setq search-ring '(#("iz" 0 2 (isearch-regexp-function nil isearch-case-fold-search t)) #("u" 0 1 (isearch-regexp-function nil isearch-case-fold-search t)) #("McPhee                           The Art of Omission                                                                                                         article               has:pdf   mcpheeArtOmission" 0 206 (isearch-regexp-function nil isearch-case-fold-search nil))))
(setq embark--prompter-history '(#("C-c b                                bibtex-actions-insert-citation" 0 5 (embark-command bibtex-actions-insert-citation face embark-keybinding) 5 67 (embark-command bibtex-actions-insert-citation))))
(setq bibtex-actions-history '("Yang                                       Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai                                             article               has:pdf   yangRevolutionTemporalityModern2018" "Yang                                       Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai                                             article               has:pdf   yangRevolutionTemporalityModern2018" "Huxley                                     Brave New World                                                                                                                         book                    huxleyBraveNewWorld2006" "Brown                                      Make It Stick: The Science of Successful Learning                                                                                       book                  has:note  brownMakeItStick2014" "Caminha                                    Letter of Pero Vaz de Caminha                                                                                                           misc                  has:pdf   caminhaLetterPeroVaz" "Machiavelli                                The Prince                                                                                                                              book                  has:pdf   machiavelliPrince2011" "Kenny                                      Descartes: A Study of His Philosophy                                                                                                    book                    kennyDescartesStudyHis2009" "Huxley                                     Brave New World                                                                                                                         book                    huxleyBraveNewWorld2006" "Huxley                                     Brave New World                                                                                                                         book                    huxleyBraveNewWorld2006" "Huxley                                     Brave New World                                                                                                                         book                    huxleyBraveNewWorld2006" "D'Agata, Fingal                            The Lifespan of a Fact                                                                                                                  book                    dagataLifespanFact2012" "Cottingham                                 Descartes                                                                                                                               book                    cottinghamDescartes1986" "Wikipedia                                  Taglish                                                                                                                                 article                 wikipediaTaglish2021" "Tevis                                      The Queen's Gambit                                                                                                                      book                  has:note  tevisQueenGambit2003" "Yao                                        An Introduction to Confucianism                                                                                                         book                  has:pdf has:note  yaoIntroductionConfucianism2000" "Yao                                        An Introduction to Confucianism                                                                                                         book                  has:pdf   yaoIntroductionConfucianism2000" "Yao                                        An Introduction to Confucianism                                                                                                         book                  has:pdf   yaoIntroductionConfucianism2000" "Yao                                        An Introduction to Confucianism                                                                                                         book                  has:pdf   yaoIntroductionConfucianism2000" "D'Agata, Fingal                            The Lifespan of a Fact                                                                                                                  book                    dagataLifespanFact2012" "Tevis                                      The Queen's Gambit                                                                                                                      book                    tevisQueenGambit2003" "Tevis                                      The Queen's Gambit                                                                                                                      book                    tevisQueenGambit2003" "Pregadio                                   The Way of the Golden Elixir: An Introduction to Taoist Alchemy (Occasional Papers Book 3)                                              book                  has:pdf   pregadioWayGoldenElixir2019" "Pregadio                                   The Way of the Golden Elixir: An Introduction to Taoist Alchemy (Occasional Papers Book 3)                                              book                  has:pdf   pregadioWayGoldenElixir2019" "Kohn                                       The Taoist Experience: An Anthology                                                                                                     book                    kohnTaoistExperienceAnthology1993" "Brown                                      Make It Stick: The Science of Successful Learning                                                                                       book                    brownMakeItStick2014" "Eco, Mongiat Farina, Farina                How to Write a Thesis                                                                                                                   book                  has:note  ecoHowWriteThesis2015" "Eco, Mongiat Farina, Farina                How to Write a Thesis                                                                                                                   book                  has:note  ecoHowWriteThesis2015" "McPhee                                     The Art of Omission                                                                                                                     article               has:pdf   mcpheeArtOmission" "Eco, Mongiat Farina, Farina                How to Write a Thesis                                                                                                                   book                    ecoHowWriteThesis2015" "McPhee                                     The Art of Omission                                                                                                                     article               has:pdf   mcpheeArtOmission" "D'Agata, Fingal                            The Lifespan of a Fact                                                                                                                  book                    dagataLifespanFact2012" "Eco, Mongiat Farina, Farina                How to Write a Thesis                                                                                                                   book                    ecoHowWriteThesis2015" "McPhee                                     The Art of Omission                                                                                                                     article               has:pdf   mcpheeArtOmission" "Wikipedia                                  Taglish                                                                                                                                 article                 wikipediaTaglish2021" "D'Agata, Fingal                            The Lifespan of a Fact                                                                                                                  book                    dagataLifespanFact2012" "Eco, Mongiat Farina, Farina                How to Write a Thesis                                                                                                                   book                    ecoHowWriteThesis2015" "Eco, Mongiat Farina, Farina                How to Write a Thesis                                                                                                                   book                    ecoHowWriteThesis2015" "Leger                                      Suite for Barbara Loden.                                                                                                                book                  has:pdf   legerSuiteBarbaraLoden2017" #("Luiselli                                   The Wild West Meets the Southern Border                                                                                                 misc                  has:pdf   luiselliWildWestMeets" 174 199 (face bibtex-actions-suffix) 200 232 (invisible t)) #("Kohn                                       The Taoist Experience: An Anthology                                                                                                     book                  has:note  kohnTaoistExperienceAnthology1993" 0 244 (face selectrum-current-candidate)) #("Littlejohn                                 Daoism: An Introduction                                                                                                                 book                  has:note  littlejohnDaoismIntroduction2014" 0 243 (face selectrum-current-candidate)) #("Davidson                         Incoherence and Irrationality                                                                                               article               has:pdf  has:link davidsonIncoherenceIrrationality1985" 154 177 (face bibtex-actions-suffix) 178 233 (invisible t)) "Locke, Phemister                 An Essay Concerning Human Understanding                                                                                     book                    lockeEssayConcerningHuman2008 & Yao                              An Introduction to Confucianism                                                                                             book                  has:pdf has:note  yaoIntroductionConfucianism2000 & Miller, Paola, Safari            Tell It Slant, Third Edition, 3rd Edition                                                                                   book                  has:pdf has:note  millerTellItSlant2019 & S\\'anchez, Limbrick, Thomson     That nothing is known =: Quod nihil scitur                                                                                  book                  has:pdf   sanchezThatNothingKnown1988 & Kenny                            Descartes: A Study of His Philosophy                                                                                        book                    kennyDescartesStudyHis2009 & " "May                              The Big Book of Exit Strategies                                                                                             book                  has:pdf   mayBigBookExit2016 & Locke, Phemister                 An Essay Concerning Human Understanding                                                                                     book                    lockeEssayConcerningHuman2008 & " #("Caminha                          Letter of Pero Vaz de Caminha                                                                                               misc                  has:pdf   caminhaLetterPeroVaz & Queen                            Inventories of the Past: Rethinking the School Affiliation of the Huainanzi                                                 article               has:pdf has:note  queenInventoriesRethinkingSchool2001 & Descartes                        The Philosophical Writings of Descartes                                                                                     book                    descartesPhilosophicalWritingsDescartes1984" 178 209 (invisible t) 366 389 (face bibtex-actions-suffix) 390 445 (invisible t) 602 625 (face bibtex-actions-suffix) 626 672 (invisible t)) "Brown                            Make It Stick: The Science of Successful Learning                                                                           book                  has:note  brownMakeItStick2014" "White                            The Lusiads, Canto V                                                                                                        book                  has:pdf   whiteLusiadsCanto" "White                                                                                                                                        The Lusiads, Canto V                                            book          has:pdf   whiteLusiadsCanto" "Kenny                                                                                                                                        Descartes: A Study of His Philosophy                            book            kennyDescartesStudyHis2009" #("Eco, Mongiat Farina,   How to Write a Thesis                                                                                                                        book                                                                                       ecoHowWriteThesis2015" 161 251 (face bibtex-actions-suffix) 252 276 (invisible t)) "has:note" #(" Descartes                                                                                                                                           cottinghamDesca    cottinghamDescartes1986" 139 164 (face bibtex-actions-suffix) 165 191 (invisible t)) #("Brown                  Make It Stick: The Science of Successful Learnin   2014           brownMakeItStic    book                                                                                      has:note  brownMakeItStick2014" 79 196 (face bibtex-actions-suffix) 197 228 (invisible t))))
(setq ssh-history '("root@143.244.175.221" "143.244.172.121"))
(setq tmm--history '("h==>Help" "y==>YASnippet" "p==>Projectile" "0==>Outshine" "O==>Outline" "E==>Emacs-Lisp" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq custom-variable-history '("org-use-tag-inheritance"))
(setq yes-or-no-p-history '("yes"))
(setq counsel-outline-history '(#("LoadRepos" 0 9 (fontified nil face "counsel-outline-1" idx 2 ivy-index 2)) #("Code: / Project management / Projectile" 0 5 (ivy-index 9 idx 9 face "counsel-outline-1" fontified nil) 5 8 (ivy-index 9 idx 9) 8 26 (ivy-index 9 idx 9 face "counsel-outline-2" fontified nil) 26 29 (ivy-index 9 idx 9) 29 39 (ivy-index 9 idx 9 face "counsel-outline-3" fontified nil)) #("Code: / Cousin packages / Consult-selectrum" 0 5 (fontified nil face "counsel-outline-1" idx 5 ivy-index 5) 5 8 (idx 5 ivy-index 5) 8 23 (fontified nil face "counsel-outline-2" idx 5 ivy-index 5) 23 26 (idx 5 ivy-index 5) 26 43 (fontified nil face "counsel-outline-3" idx 5 ivy-index 5)) #("project" 0 7 (ivy-index 0)) "Code: / Project management"))
(setq consult--apropos-history '("bookmark-delete"))
(setq consult--find-history '("#eshell#elisp" "#early-package" "#checking#" "#org-roam#general" "#faces" "#init" "#variable" "#theme#rcp" "#post" "#main" "#head" "#socials" "#head" "#author" "#post" "#style" "#page" "#index" "#header" "#post" "#main" "#post" "#main" "#sub" "#pack" "#sub" "#package" "#main" "#package" "#nav" "#main" "#about." "#main" "#about" "#post" "#style" "#loop" "#nde" "#style" "#index" "#default" "#package" "#subscribe" "#index" "#package" "#index" "#package" "#main" "#index" "#main" "#post" "#style" "#subscribe" "#test" "#main" "#subs" "#routes.yaml" "#nav" "#style" "#header" "#loop" "#sty" "#nav" "#navig" "#css" "#footer" "#tag" "#main" "#style" "#subscribe" "#locale" "#head" "#theme#header" "#post" "#author" "#head" "#style" "#early" "#oc.el" "#faces" "#theme_head" "#web" "#index" "#ro.json" "#en.json" "#head" "#evil#rcp" "#sub" "#subscr" "#post" "#amp" "#style" "#error." "#company#rcp" "#pair" "#package" "#doom-modeline-segments" "#qol" "#org-agenda-rcp" "#package"))
(setq consult--grep-history '("#kb/doom-modeline-font-setup" "#kb#noto" "#kb#scratch" "#kb/modeline-font" "#modeline-font#kb" "#fd-find" "#aspell" "#kb/doom-modeline#setup" "#magit#use-" "#shackle#use-packa" "#embark#use-pac" "#add#advice" "#kb#lit-categories" "#embark-consult" "#flycheck#lf" "#\"ss\"" "#flyspell#use-pack" "#flyspell-correct#use-pa" "#swiper-slide#slug" "#tag-template" "#read-later" "#authors" "#pagination" "#pagination-number" "#feature" "#\\{\\{lang" "#flycheck#use-package" "#search-field" "#socials#>" "#instagram" "#instagram#https" "#member" "#flycheck#use-package" "#counsel-bookmark" "#url#home" "#absolute#url" "#versio#v2" "#pagination-number" "#facebook" "#rchive" "#gh-canvas" "#reddit" "#author-meta" "#ubscribe" "#results" "#search" "##search" "#social#class" "#540px" "#Share on:" "#nstagram" "#@member#if" "#gh-main" "#home#subscribe-input" "#subscribe" "#subscribe#\\}\\}" "#href##" "#error.message" "#signup" "#gh-signin" "#Coming soon" "#portal" "#just click" "#bookmark a post," "#nstagram" "#social" "#blog-logo" "#reading-time" "#outshine-narrow" "#read-later" "#author-name" "#author" "#by this author" "#more posts#by this author" "#Inconsolata" "#good enough#system and b" "#good enough" "#The spotlight is regu" "#not necessary for " "#a Commonplace " "#unwise" "#I observe similar" "#I will address a potential concern, namely that to underappreciate the" "#unwise" "#10708" "#yas#use-" "#level#abstraction" "#default#background" "#face-setup" "#kb/#face-setup" "#kb/org-face-setup" "#flurry" "#ROAM_EXCLUDE" "#exclude" "#Met on" "#title#document" "#highlight-indent-guide#use" "#default-frame-alist" "#burly" "#codified"))
(setq consult--line-history '("map" "eshell :which" "evil firs" "mu" "docume" "kb/ setup" "doom mode" "reso" "unix " "crlf" "face text p" "modeline-inactive pr" "kb setup" "contex" "engag" "start" "construc" "hook embark" "week 13" "outline" "corre" "multi over" "flyspe" "actions org " "ui" "hook roa" "action at point" "org-cite bib" "org-cite" "roam" "btex" "default citat" "filter id" "book func" "post-template" "config api host" "api host config" "function book" "bookm" "config api" "index = curre" "tag-template" "deb" "if == max" "debug" "cloned" "post-template" "page-template" "pagin" "pagination" "for deb" "search-fiel" "read-later" ".read-later" "readLaterPosts bookmarks" "bookmarks()" "Data:" "debug" "bookmark " "-top: 50px" "height 100" "title" "180px" "post-title article" "post-cover" "50px padding" "author-name article" "author-name" "author" "post-content" "author-name artic" "  50px" "post-title" "article container author name" "author name article" "article container author name" "author" "tags" "tag" "authors" "socials" "author-conten" "social" "authors" "col lg 8" "50px margin" "50px margin bottom" "180px" "author name text" "/is" "socials" "paginat" "author{" "125px" "author has" "pagination" "30px margin-bottom" "subscribe" "author-image" "pagination"))
(setq consult--buffer-history '(#("init.el􀀁" 0 7 (face consult-buffer consult-multi (buffer . "init.el")) 7 8 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/.emacs.d/elisp/checking-spelling-rcp.el􀀂" 0 41 (face consult-file consult-multi (file . "~/.emacs.d/elisp/checking-spelling-rcp.el")) 41 42 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("themes-rcp.el􀀁" 0 13 (face consult-buffer consult-multi (buffer . "themes-rcp.el")) 13 14 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/.emacs.d/elisp/themes-rcp.el􀀂" 0 30 (face consult-file consult-multi (file . "~/.emacs.d/elisp/themes-rcp.el")) 30 31 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/.emacs.d/elisp/faces-rcp.el􀀂" 0 29 (face consult-file consult-multi (file . "~/.emacs.d/elisp/faces-rcp.el")) 29 30 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/.emacs.d/init.el􀀂" 0 18 (consult-multi (file . "~/.emacs.d/init.el") face consult-file) 18 19 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("init.el􀀁" 0 7 (face consult-buffer consult-multi (buffer . "init.el")) 7 8 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/.emacs.d/elisp/themes-rcp.el􀀂" 0 30 (face consult-file consult-multi (file . "~/.emacs.d/elisp/themes-rcp.el")) 30 31 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/.emacs.d/init.el􀀂" 0 18 (face consult-file consult-multi (file . "~/.emacs.d/init.el")) 18 19 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("init.el􀀁" 0 7 (consult-multi (buffer . "init.el") face consult-buffer) 7 8 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/themes-rcp.el􀀂" 0 32 (consult-multi (file . "~/main-emacs/elisp/themes-rcp.el") face consult-file) 32 33 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*scratch*􀀁" 0 9 (consult-multi (buffer . "*scratch*") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Scratch for emacs-lisp-mode*􀀁" 0 29 (face consult-buffer consult-multi (buffer . "*Scratch for emacs-lisp-mode*")) 29 30 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/init.el􀀂" 0 20 (face consult-file consult-multi (file . "~/main-emacs/init.el")) 20 21 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/themes-rcp.el􀀂" 0 32 (consult-multi (file . "~/main-emacs/elisp/themes-rcp.el") face consult-file) 32 33 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("engl0930_final_portfolio-Aug092021-083639.org􀀁" 0 45 (consult-multi (buffer . "engl0930_final_portfolio-Aug092021-083639.org") face consult-buffer) 45 46 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Messages*􀀁" 0 10 (consult-multi (buffer . "*Messages*") face consult-buffer) 10 11 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/themes-rcp.el􀀂" 0 32 (consult-multi (file . "~/main-emacs/elisp/themes-rcp.el") face consult-file) 32 33 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (face consult-file consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el")) 42 43 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("org-roam-general-rcp.el􀀁" 0 23 (consult-multi (buffer . "org-roam-general-rcp.el") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-other-rcp.el􀀁" 0 21 (consult-multi (buffer . "org-roam-other-rcp.el") face consult-buffer) 21 22 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("themes-rcp.el􀀁" 0 13 (consult-multi (buffer . "themes-rcp.el") face consult-buffer) 13 14 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-general-rcp.el􀀁" 0 23 (consult-multi (buffer . "org-roam-general-rcp.el") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("themes-rcp.el􀀁" 0 13 (consult-multi (buffer . "themes-rcp.el") face consult-buffer) 13 14 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-other-rcp.el􀀁" 0 21 (consult-multi (buffer . "org-roam-other-rcp.el") face consult-buffer) 21 22 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("init.el􀀁" 0 7 (consult-multi (buffer . "init.el") face consult-buffer) 7 8 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-other-rcp.el􀀂" 0 40 (consult-multi (file . "~/main-emacs/elisp/org-roam-other-rcp.el") face consult-file) 40 41 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-general-rcp.el􀀁" 0 23 (consult-multi (buffer . "org-roam-general-rcp.el") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("init.el􀀁" 0 7 (consult-multi (buffer . "init.el") face consult-buffer) 7 8 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/init.el􀀂" 0 20 (consult-multi (file . "~/main-emacs/init.el") face consult-file) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-other-rcp.el􀀂" 0 40 (face consult-file consult-multi (file . "~/main-emacs/elisp/org-roam-other-rcp.el")) 40 41 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("init.el􀀁" 0 7 (consult-multi (buffer . "init.el") face consult-buffer) 7 8 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-other-rcp.el􀀁" 0 21 (consult-multi (buffer . "org-roam-other-rcp.el") face consult-buffer) 21 22 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("master-lib.bib􀀁" 0 14 (consult-multi (buffer . "master-lib.bib") face consult-buffer) 14 15 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-other-rcp.el􀀁" 0 21 (consult-multi (buffer . "org-roam-other-rcp.el") face consult-buffer) 21 22 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/Documents/org-database/roam/bibliographic/master-lib.bib􀀂" 0 58 (consult-multi (file . "~/Documents/org-database/roam/bibliographic/master-lib.bib") face consult-file) 58 59 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-other-rcp.el􀀁" 0 21 (consult-multi (buffer . "org-roam-other-rcp.el") face consult-buffer) 21 22 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-general-rcp.el􀀁" 0 23 (consult-multi (buffer . "org-roam-general-rcp.el") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el") face consult-file) 42 43 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-other-rcp.el􀀂" 0 40 (consult-multi (file . "~/main-emacs/elisp/org-roam-other-rcp.el") face consult-file) 40 41 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/init.el􀀂" 0 20 (consult-multi (file . "~/main-emacs/init.el") face consult-file) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (face consult-file consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el")) 42 43 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("Burly: Index􀀃" 0 12 (face consult-bookmark consult-multi (bookmark . "Burly: Index")) 12 13 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/org-roam-other-rcp.el􀀂" 0 40 (consult-multi (file . "~/main-emacs/elisp/org-roam-other-rcp.el") face consult-file) 40 41 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-other-rcp.el􀀁" 0 21 (face consult-buffer consult-multi (buffer . "org-roam-other-rcp.el")) 21 22 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) "orgo" #("org-roam-other-rcp.el􀀁" 0 21 (face consult-buffer consult-multi (buffer . "org-roam-other-rcp.el")) 21 22 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/ghost-devel/content/themes/personal/about.hbs􀀂" 0 47 (face consult-file consult-multi (file . "~/ghost-devel/content/themes/personal/about.hbs")) 47 48 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Messages*􀀁" 0 10 (face consult-buffer consult-multi (buffer . "*Messages*")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/ghost-devel/content/themes/personal/assets/js/main.js􀀂" 0 55 (face consult-file consult-multi (file . "~/ghost-devel/content/themes/personal/assets/js/main.js")) 55 56 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("magit: main-emacs􀀁" 0 17 (face consult-buffer consult-multi (buffer . "magit: main-emacs")) 17 18 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/programming-web-rcp.el􀀂" 0 41 (face consult-file consult-multi (file . "~/main-emacs/elisp/programming-web-rcp.el")) 41 42 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/themes-rcp.el􀀂" 0 32 (face consult-file consult-multi (file . "~/main-emacs/elisp/themes-rcp.el")) 32 33 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/org-roam-other-rcp.el􀀂" 0 40 (face consult-file consult-multi (file . "~/main-emacs/elisp/org-roam-other-rcp.el")) 40 41 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("org-roam-general-rcp.el􀀁" 0 23 (consult-multi (buffer . "org-roam-general-rcp.el") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("programming-web-rcp.el􀀁" 0 22 (consult-multi (buffer . "programming-web-rcp.el") face consult-buffer) 22 23 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/init.el􀀂" 0 20 (consult-multi (file . "~/main-emacs/init.el") face consult-file) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("personal/main.js<4>􀀁" 0 19 (consult-multi (buffer . "personal/main.js<4>") face consult-buffer) 19 20 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("post.hbs􀀁" 0 8 (consult-multi (buffer . "post.hbs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("personal/loop.hbs􀀁" 0 17 (consult-multi (buffer . "personal/loop.hbs") face consult-buffer) 17 18 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("index.hbs􀀁" 0 9 (consult-multi (buffer . "index.hbs") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("personal/main.js􀀁" 0 16 (consult-multi (buffer . "personal/main.js") face consult-buffer) 16 17 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("post.hbs􀀁" 0 8 (consult-multi (buffer . "post.hbs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("personal/loop.hbs􀀁" 0 17 (consult-multi (buffer . "personal/loop.hbs") face consult-buffer) 17 18 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("index.hbs􀀁" 0 9 (consult-multi (buffer . "index.hbs") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("about.hbs􀀁" 0 9 (consult-multi (buffer . "about.hbs") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("ghost-devel/package.json􀀁" 0 24 (consult-multi (buffer . "ghost-devel/package.json") face consult-buffer) 24 25 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("post.hbs􀀁" 0 8 (consult-multi (buffer . "post.hbs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("theme_header.hbs􀀁" 0 16 (consult-multi (buffer . "theme_header.hbs") face consult-buffer) 16 17 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("zvikov-master/style.css􀀁" 0 23 (consult-multi (buffer . "zvikov-master/style.css") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("index.hbs􀀁" 0 9 (consult-multi (buffer . "index.hbs") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("post.hbs􀀁" 0 8 (consult-multi (buffer . "post.hbs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("loop.hbs􀀁" 0 8 (consult-multi (buffer . "loop.hbs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("personal/main.js􀀁" 0 16 (consult-multi (buffer . "personal/main.js") face consult-buffer) 16 17 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("about.hbs􀀁" 0 9 (consult-multi (buffer . "about.hbs") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("index.hbs􀀁" 0 9 (consult-multi (buffer . "index.hbs") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("index.hbs􀀄" 0 9 (consult-multi (buffer . "index.hbs") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("personal/style.css􀀁" 0 18 (consult-multi (buffer . "personal/style.css") face consult-buffer) 18 19 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-other-rcp.el􀀂" 0 40 (consult-multi (file . "~/main-emacs/elisp/org-roam-other-rcp.el") face consult-file) 40 41 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("zvikov/main.js􀀁" 0 14 (consult-multi (buffer . "zvikov/main.js") face consult-buffer) 14 15 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Scratch for js2-mode*<2>􀀁" 0 25 (consult-multi (buffer . "*Scratch for js2-mode*<2>") face consult-buffer) 25 26 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("zvikov/main.js􀀁" 0 14 (consult-multi (buffer . "zvikov/main.js") face consult-buffer) 14 15 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("personal/main.js􀀁" 0 16 (consult-multi (buffer . "personal/main.js") face consult-buffer) 16 17 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("programming-web-rcp.el􀀁" 0 22 (consult-multi (buffer . "programming-web-rcp.el") face consult-buffer) 22 23 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #(".eslintrc.json􀀁" 0 14 (consult-multi (buffer . ".eslintrc.json") face consult-buffer) 14 15 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("programming-web-rcp.el􀀁" 0 22 (consult-multi (buffer . "programming-web-rcp.el") face consult-buffer) 22 23 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) "pbr" #("style.css􀀁" 0 9 (consult-multi (buffer . "style.css") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("ghost-devel/routes.yaml􀀁" 0 23 (consult-multi (buffer . "ghost-devel/routes.yaml") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("programming-web-rcp.el􀀁" 0 22 (consult-multi (buffer . "programming-web-rcp.el") face consult-buffer) 22 23 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/themes-rcp.el􀀂" 0 32 (consult-multi (file . "~/main-emacs/elisp/themes-rcp.el") face consult-file) 32 33 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/programming-web-rcp.el􀀂" 0 41 (consult-multi (file . "~/main-emacs/elisp/programming-web-rcp.el") face consult-file) 41 42 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/ghost-devel/content/themes/personal/assets/css/style.css􀀂" 0 58 (consult-multi (file . "~/ghost-devel/content/themes/personal/assets/css/style.css") face consult-file) 58 59 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/ghost-devel/content/settings/routes.yaml􀀂" 0 42 (consult-multi (file . "~/ghost-devel/content/settings/routes.yaml") face consult-file) 42 43 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/themes-rcp.el􀀂" 0 32 (face consult-file consult-multi (file . "~/main-emacs/elisp/themes-rcp.el")) 32 33 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("main.js􀀁" 0 7 (face consult-buffer consult-multi (buffer . "main.js")) 7 8 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/ghost-devel/content/settings/routes.yaml􀀂" 0 42 (face consult-file consult-multi (file . "~/ghost-devel/content/settings/routes.yaml")) 42 43 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/init.el􀀂" 0 20 (face consult-file consult-multi (file . "~/main-emacs/init.el")) 20 21 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/configs/qol-packages.org􀀂" 0 37 (face consult-file consult-multi (file . "~/main-emacs/configs/qol-packages.org")) 37 38 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/ghost-devel/content/settings/routes.yaml􀀂" 0 42 (face consult-file consult-multi (file . "~/ghost-devel/content/settings/routes.yaml")) 42 43 (consult-strip t invisible t rear-nonsticky t cursor-intangible t))))
(setq mu4e-views--mu4e-select-view-msg-method-history '("html"))
(setq synosaurus--history '("Offline"))
(setq wordnut-completion-hist '("ensure" "test" "hello"))
(setq counsel-locate-history '(#("con" 0 3 (ivy-index 0))))
(setq regexp-history '("zettelkaste" ":straight"))
(setq TeX-command-history '("View" "LatexMk" "Clean All" "View" "LatexMk" "View" "Clean" "View" "LatexMk" "Clean All" "LatexMk" "View" "LatexMk" "Clean All" "LatexMk" "View" "Clean All" "View" "LatexMk" "View" "LatexMk" "View" "LatexMk" "Check" "LatexMk" "View" "LatexMk" "Clean All" "View" "LatexMk" "Clean All" "View" "LatexMk" "View" "LatexMk" "Clean All" "View" "LatexMk" "Clean All" "LatexMk" "View" "Clean All" "View" "Clean All" "View" "LatexMk" "View" "LatexMk" "View" "Clean All" "View" "LatexMk" "View" "LatexMk" "View" "Clean All" "Check" "View" "LaTeX" "View" "LatexMk" "View" "Clean All" "View" "Clean All" "View" "LatexMk" "View" "LatexMk" "View" "LatexMk" "View" "Clean All" "LatexMk" "Biber" "LatexMk" "View" "Clean All" "View" "Clean All" "Clean" "View" "Clean All" "View" "LatexMk" "View" "Biber" "LaTeX" "View" "LaTeX" "View" "LatexMk" "View" "Clean All" "Clean" "View" "LatexMk" "LaTeX" "View" "Clean All"))
(setq imenu--history-list '("article" "document" "*Rescan*"))
(setq extended-command-history '("pp-eval-last-sexp" "straight-check-all" "straight-pull-all" "magit-cherry-pick" "counsel-load-theme" "doom-modeline-mode" "kill-emacs" "kb/default-fonts-setup" "default-text-scale-mode" "doom-modeline-mode" "toggle-frame-maximized" "eval-last-sexp" "counsel-fonts" "toggle-frame-maximized" "flycheck-verify-checker" "save-buffers-kill-emacs" "all-the-icons-install-fonts" "magit-mode-bury-buffer" "shackle-mode" "flycheck-mode" "langtool-check-done" "langtool-correct-buffer" "langtool-check" "langtool-correct-buffer" "langtool-check" "edit-abbrevs" "typo-mode" "count-words-region" "count-words" "org-clone-subtree-with-time-shift" "edit-abbrevs" "counsel-load-theme" "consult-theme" "heaven-and-hell-load-default-theme" "org-mode-restart" "org-superstar-restart" "org-mode-restart" "org-lint" "straight-get-recipe" "straight-check-all" "straight-pull-all" "straight-rebuild-package" "straight-pull-package" "bibtex-actions-refresh" "straight-check-all" "straight-pull-package" "org-roam-extract-subtree" "org-roam-refile" "clone-indirect-buffer-other-window" "keyfreq-html" "keyfreq-html-v2" "keyfreq-show" "consult-imenu" "consult-goto-line" "consult-yank-from-kill-ring" "consult-recent-file" "consult-org-heading" "consult-focus-lines" "consult-flycheck" "consult-keep-lines" "consult-history" "consult-grep" "flyspell-mode" "straight-pull-package" "straight-normalize-package" "straight-pull-all" "straight-normalize-all" "straight-pull-all" "customize-group" "bibtex-actions-refresh" "bibtex-actions-open" "org-roam-bibtex-mode" "bibtex-entry-update" "straight-rebuild-package" "straight-pull-package" "org-roam-ui-mode" "straight-check-all" "straight-pull-package" "straight-rebuild-package" "straight-pull-package" "straight-rebuild-package" "straight-pull-package" "org-cite-insert" "straight-use-package" "org-roam-ui-mode" "straight-rebuild-package" "straight-pull-package" "org-roam-setup" "org-roam-teardown" "org-roam-setup" "org-roam-refile" "org-roam-extract-subtree" "kb/org-roam-update-link-desc" "org-roam-buffer" "straight-check-all" "straight-pull-all" "edit-abbrevs" "straight-rebuild-package" "straight-pull-package" "straight-rebuild-package"))
(setq consult-apropos-history '("selectrum-completion-annotation" "orb-insert-non-ref"))
(setq consult-buffer-history '(#("f​ ~/dotfiles/awesomewm/.config/awesome/rc.lua" 0 3 (display "") 3 46 (face consult-file)) #("b​ config.rasi" 0 3 (display "") 3 14 (face consult-buffer)) #("f​ ~/.config/rofi/config.rasi" 0 3 (display "") 3 29 (face consult-file)) #("m​ Zotero" 0 3 (display "") 3 9 (face consult-bookmark)) #("b​ .zotero" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ zotero" 0 3 (display "") 3 9 (face consult-buffer)) #("b​ Zotero" 0 3 (display "") 3 9 (face consult-buffer)) #("f​ ~/.config/rofi/config.rasi" 0 3 (display "") 3 29 (face consult-file)) #("f​ ~/main-emacs/elisp/mu4e-rcp.el" 0 3 (display "") 3 33 (face consult-file)) #("f​ ~/dotfiles/i3/.config/i3/config" 0 3 (display "") 3 34 (face consult-file)) #("f​ ~/.mbsyncrc" 0 3 (display "") 3 14 (face consult-file)) #("f​ ~/dotfiles/awesomewm/.config/awesome/rc.lua" 0 3 (display "") 3 46 (face consult-file)) #("f​ ~/main-emacs/elisp/mu4e-rcp.el" 0 3 (display "") 3 33 (face consult-file)) #("f​ ~/dotfiles/awesomewm/.config/awesome/rc.lua" 0 3 (display "") 3 46 (face consult-file)) #("b​ elisp" 0 3 (display "") 3 8 (face consult-buffer)) #("f​ ~/main-emacs/elisp/completion-selectrum-rcp.el" 0 3 (display "") 3 49 (face consult-file)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("f​ ~/Documents/org-database/roam/Oct242020-030215-pintogasparfrutuosoportuguese2003.org" 0 3 (display "") 3 87 (face consult-file)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("f​ ~/main-emacs/elisp/use-package-rcp.el" 0 3 (display "") 3 40 (face consult-file)) #("f​ ~/main-emacs/init.el" 0 3 (display "") 3 23 (face consult-file)) #("f​ ~/main-emacs/elisp/mu4e-rcp.el" 0 3 (display "") 3 33 (face consult-file)) #("b​ themes-rcp.el" 0 3 (display "") 3 16 (face consult-buffer)) #("b​ programming-general-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("f​ ~/main-emacs/elisp/early-packages-rcp.el" 0 3 (display "") 3 43 (face consult-file)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("f​ ~/main-emacs/elisp/themes-rcp.el" 0 3 (display "") 3 35 (face consult-file)) #("f​ ~/.mbsyncrc" 0 3 (display "") 3 14 (face consult-file)) #("b​ better-defaults-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("f​ ~/main-emacs/elisp/better-defaults-rcp.el" 0 3 (display "") 3 44 (face consult-file)) #("b​ shell-eshell-rcp.el" 0 3 (display "") 3 22 (face consult-buffer)) #("b​ programming-lua-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("b​ checking-spelling-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("b​ checking-words-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ checking-spelling-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("f​ ~/main-emacs/elisp/shell-vterm-rcp.el" 0 3 (display "") 3 40 (face consult-file)) #("b​ checking-spelling-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("b​ shell-eshell-rcp.el" 0 3 (display "") 3 22 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ checking-words-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ system-variables-rcp.el" 0 3 (display "") 3 26 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("f​ ~/main-emacs/elisp/system-variables-rcp.el" 0 3 (display "") 3 45 (face consult-file)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("f​ ~/main-emacs/elisp/early-packages-rcp.el" 0 3 (display "") 3 43 (face consult-file)) #("f​ ~/main-emacs/elisp/checking-words-rcp.el" 0 3 (display "") 3 43 (face consult-file)) #("f​ ~/main-emacs/elisp/checking-grammar-rcp.el" 0 3 (display "") 3 45 (face consult-file)) #("f​ ~/main-emacs/elisp/checking-spelling-rcp.el" 0 3 (display "") 3 46 (face consult-file)) #("f​ ~/main-emacs/elisp/shell-eshell-rcp.el" 0 3 (display "") 3 41 (face consult-file)) #("f​ ~/main-emacs/elisp/programming-lua-rcp.el" 0 3 (display "") 3 44 (face consult-file)) #("f​ ~/main-emacs/elisp/programming-elisp-rcp.el" 0 3 (display "") 3 46 (face consult-file)) #("f​ ~/Documents/org-database/roam/Oct292020-125345-caminhaletterperovaz.org" 0 3 (display "") 3 74 (face consult-file)) #("f​ ~/main-emacs/elisp/programming-general-rcp.el" 0 3 (display "") 3 48 (face consult-file)) #("f​ ~/main-emacs/elisp/programming-profiling-and-debug-rcp.el" 0 3 (display "") 3 60 (face consult-file)) #("f​ ~/main-emacs/init.el" 0 3 (display "") 3 23 (face consult-file)) #("f​ ~/.config/awesome/rc.lua" 0 3 (display "") 3 27 (face consult-file)) #("b​ programming-general-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("b​ buffer-and-window-management-rcp.el" 0 3 (display "") 3 38 (face consult-buffer)) #("b​ completion-helm-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("f​ ~/main-emacs/elisp/completion-selectrum-rcp.el" 0 3 (display "") 3 49 (face consult-file)) #("b​ checking-spelling-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("b​ completion-ivy-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ completion-company-rcp.el" 0 3 (display "") 3 28 (face consult-buffer)) #("b​ completion-general-rcp.el" 0 3 (display "") 3 28 (face consult-buffer)) #("b​ themes-rcp.el" 0 3 (display "") 3 16 (face consult-buffer)) #("b​ convenient-functions-rcp.el" 0 3 (display "") 3 30 (face consult-buffer)) #("b​ custom-directories-rcp.el" 0 3 (display "") 3 28 (face consult-buffer)) #("b​ keybinds-frameworks-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("b​ faces-rcp.el" 0 3 (display "") 3 15 (face consult-buffer)) #("b​ keybinds-frameworks-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("b​ better-defaults-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ undoing-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ auto-gc-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ undoing-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ straight-package-management-rcp.el" 0 3 (display "") 3 37 (face consult-buffer)) #("b​ auto-gc-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ buffer-management-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ straight-package-management-rcp.el" 0 3 (display "") 3 37 (face consult-buffer)) #("b​ better-defaults-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("b​ straight-package-management-rcp.el" 0 3 (display "") 3 37 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ etc-config.org" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ keybinds-frameworks-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("f​ ~/main-emacs/elisp/early-packages-rcp.el" 0 3 (display "") 3 43 (face consult-file)) #("b​ auto-gc-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("f​ ~/main-emacs/straight/repos/doom-modeline/doom-modeline-segments.el" 0 3 (display "") 3 70 (face consult-file)) #("b​ themes-rcp.el" 0 3 (display "") 3 16 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ undoing-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ system-variables-rcp.el" 0 3 (display "") 3 26 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("f​ ~/main-emacs/init.el" 0 3 (display "") 3 23 (face consult-file)) #("f​ ~/dotfiles/awesomewm/.config/awesome/rc.lua" 0 3 (display "") 3 46 (face consult-file)) #("f​ ~/main-emacs/configs/buffer-management.org" 0 3 (display "") 3 45 (face consult-file))))
(setq read-expression-history '("(current-local-map)" "(current-active-maps)" "current-local-map" "current-active-maps" "current-active-map" "current-active-maps" "active-current-maps" "(setq auto-mode-alist '((\"\\\\.\\\\(e?ya?\\\\|ra\\\\)ml\\\\'\" . yaml-mode) (\"\\\\.hbs$\" . web-mode) (\"\\\\.handlebars$\" . web-mode) (\"\\\\.lua\\\\'\" . lua-mode) (\"\\\\.hva\\\\'\" . latex-mode) (\"\\\\.[pP][dD][fF]\\\\'\" . pdf-view-mode) (\"\\\\.odc\\\\'\" . archive-mode) (\"\\\\.odf\\\\'\" . archive-mode) (\"\\\\.odi\\\\'\" . archive-mode) (\"\\\\.otp\\\\'\" . archive-mode) (\"\\\\.odp\\\\'\" . archive-mode) (\"\\\\.otg\\\\'\" . archive-mode) (\"\\\\.odg\\\\'\" . archive-mode) (\"\\\\.ots\\\\'\" . archive-mode) (\"\\\\.ods\\\\'\" . archive-mode) (\"\\\\.odm\\\\'\" . archive-mode) (\"\\\\.ott\\\\'\" . archive-mode) (\"\\\\.odt\\\\'\" . archive-mode) (\"README\\\\'\" . markdown-mode) (\"LICENSE\\\\'\" . markdown-mode) (\"CONTRIBUTORS\\\\'\" . markdown-mode) (\"INSTALL\\\\'\" . markdown-mode) (\"\\\\.\\\\(?:md\\\\|markdown\\\\|mkd\\\\|mdown\\\\|mkdn\\\\|mdwn\\\\)\\\\'\" . markdown-mode) (\"/git-rebase-todo\\\\'\" . git-rebase-mode) (\"\\\\.gpg\\\\(~\\\\|\\\\.~[0-9]+~\\\\)?\\\\'\" nil epa-file) (\"\\\\.elc\\\\'\" . elisp-byte-code-mode) (\"\\\\.zst\\\\'\" nil jka-compr) (\"\\\\.dz\\\\'\" nil jka-compr) (\"\\\\.xz\\\\'\" nil jka-compr) (\"\\\\.lzma\\\\'\" nil jka-compr) (\"\\\\.lz\\\\'\" nil jka-compr) (\"\\\\.g?z\\\\'\" nil jka-compr) (\"\\\\.bz2\\\\'\" nil jka-compr) (\"\\\\.Z\\\\'\" nil jka-compr) (\"\\\\.vr[hi]?\\\\'\" . vera-mode) (\"\\\\(?:\\\\.\\\\(?:rbw?\\\\|ru\\\\|rake\\\\|thor\\\\|jbuilder\\\\|rabl\\\\|gemspec\\\\|podspec\\\\)\\\\|/\\\\(?:Gem\\\\|Rake\\\\|Cap\\\\|Thor\\\\|Puppet\\\\|Berks\\\\|Brew\\\\|Vagrant\\\\|Guard\\\\|Pod\\\\)file\\\\)\\\\'\" . ruby-mode) (\"\\\\.re?st\\\\'\" . rst-mode) (\"\\\\.py[iw]?\\\\'\" . python-mode) (\"\\\\.m\\\\'\" . octave-maybe-mode) (\"\\\\.less\\\\'\" . less-css-mode) (\"\\\\.scss\\\\'\" . scss-mode) (\"\\\\.awk\\\\'\" . awk-mode) (\"\\\\.\\\\(u?lpc\\\\|pike\\\\|pmod\\\\(\\\\.in\\\\)?\\\\)\\\\'\" . pike-mode) (\"\\\\.idl\\\\'\" . idl-mode) (\"\\\\.java\\\\'\" . java-mode) (\"\\\\.m\\\\'\" . objc-mode) (\"\\\\.ii\\\\'\" . c++-mode) (\"\\\\.i\\\\'\" . c-mode) (\"\\\\.lex\\\\'\" . c-mode) (\"\\\\.y\\\\(acc\\\\)?\\\\'\" . c-mode) (\"\\\\.h\\\\'\" . c-or-c++-mode) (\"\\\\.c\\\\'\" . c-mode) (\"\\\\.\\\\(CC?\\\\|HH?\\\\)\\\\'\" . c++-mode) (\"\\\\.[ch]\\\\(pp\\\\|xx\\\\|\\\\+\\\\+\\\\)\\\\'\" . c++-mode) (\"\\\\.\\\\(cc\\\\|hh\\\\)\\\\'\" . c++-mode) (\"\\\\.\\\\(bat\\\\|cmd\\\\)\\\\'\" . bat-mode) (\"\\\\.[sx]?html?\\\\(\\\\.[a-zA-Z_]+\\\\)?\\\\'\" . mhtml-mode) (\"\\\\.svgz?\\\\'\" . image-mode) (\"\\\\.svgz?\\\\'\" . xml-mode) (\"\\\\.x[bp]m\\\\'\" . image-mode) (\"\\\\.x[bp]m\\\\'\" . c-mode) (\"\\\\.p[bpgn]m\\\\'\" . image-mode) (\"\\\\.tiff?\\\\'\" . image-mode) (\"\\\\.gif\\\\'\" . image-mode) (\"\\\\.png\\\\'\" . image-mode) (\"\\\\.jpe?g\\\\'\" . image-mode) (\"\\\\.te?xt\\\\'\" . text-mode) (\"\\\\.[tT]e[xX]\\\\'\" . tex-mode) (\"\\\\.ins\\\\'\" . tex-mode) (\"\\\\.ltx\\\\'\" . latex-mode) (\"\\\\.dtx\\\\'\" . doctex-mode) (\"\\\\.org\\\\'\" . org-mode) (\"\\\\.dir-locals\\\\(?:-2\\\\)?\\\\.el\\\\'\" . lisp-data-mode) (\"eww-bookmarks\\\\'\" . lisp-data-mode) (\"tramp\\\\'\" . lisp-data-mode) (\"/archive-contents\\\\'\" . lisp-data-mode) (\"places\\\\'\" . lisp-data-mode) (\"\\\\.emacs-places\\\\'\" . lisp-data-mode) (\"\\\\.el\\\\'\" . emacs-lisp-mode) (\"Project\\\\.ede\\\\'\" . emacs-lisp-mode) (\"\\\\.\\\\(scm\\\\|stk\\\\|ss\\\\|sch\\\\)\\\\'\" . scheme-mode) (\"\\\\.l\\\\'\" . lisp-mode) (\"\\\\.li?sp\\\\'\" . lisp-mode) (\"\\\\.[fF]\\\\'\" . fortran-mode) (\"\\\\.for\\\\'\" . fortran-mode) (\"\\\\.p\\\\'\" . pascal-mode) (\"\\\\.pas\\\\'\" . pascal-mode) (\"\\\\.\\\\(dpr\\\\|DPR\\\\)\\\\'\" . delphi-mode) (\"\\\\.\\\\([pP]\\\\([Llm]\\\\|erl\\\\|od\\\\)\\\\|al\\\\)\\\\'\" . perl-mode) (\"Imakefile\\\\'\" . makefile-imake-mode) (\"Makeppfile\\\\(?:\\\\.mk\\\\)?\\\\'\" . makefile-makepp-mode) (\"\\\\.makepp\\\\'\" . makefile-makepp-mode) (\"\\\\.mk\\\\'\" . makefile-gmake-mode) (\"\\\\.make\\\\'\" . makefile-gmake-mode) (\"[Mm]akefile\\\\'\" . makefile-gmake-mode) (\"\\\\.am\\\\'\" . makefile-automake-mode) (\"\\\\.texinfo\\\\'\" . texinfo-mode) (\"\\\\.te?xi\\\\'\" . texinfo-mode) (\"\\\\.[sS]\\\\'\" . asm-mode) (\"\\\\.asm\\\\'\" . asm-mode) (\"\\\\.css\\\\'\" . css-mode) (\"\\\\.mixal\\\\'\" . mixal-mode) (\"\\\\.gcov\\\\'\" . compilation-mode) (\"/\\\\.[a-z0-9-]*gdbinit\" . gdb-script-mode) (\"-gdb\\\\.gdb\" . gdb-script-mode) (\"[cC]hange\\\\.?[lL]og?\\\\'\" . change-log-mode) (\"[cC]hange[lL]og[-.][0-9]+\\\\'\" . change-log-mode) (\"\\\\$CHANGE_LOG\\\\$\\\\.TXT\" . change-log-mode) (\"\\\\.scm\\\\.[0-9]*\\\\'\" . scheme-mode) (\"\\\\.[ckz]?sh\\\\'\\\\|\\\\.shar\\\\'\\\\|/\\\\.z?profile\\\\'\" . sh-mode) (\"\\\\.bash\\\\'\" . sh-mode) (\"/PKGBUILD\\\\'\" . sh-mode) (\"\\\\(/\\\\|\\\\`\\\\)\\\\.\\\\(bash_\\\\(profile\\\\|history\\\\|log\\\\(in\\\\|out\\\\)\\\\)\\\\|z?log\\\\(in\\\\|out\\\\)\\\\)\\\\'\" . sh-mode) (\"\\\\(/\\\\|\\\\`\\\\)\\\\.\\\\(shrc\\\\|zshrc\\\\|m?kshrc\\\\|bashrc\\\\|t?cshrc\\\\|esrc\\\\)\\\\'\" . sh-mode) (\"\\\\(/\\\\|\\\\`\\\\)\\\\.\\\\([kz]shenv\\\\|xinitrc\\\\|startxrc\\\\|xsession\\\\)\\\\'\" . sh-mode) (\"\\\\.m?spec\\\\'\" . sh-mode) (\"\\\\.m[mes]\\\\'\" . nroff-mode) (\"\\\\.man\\\\'\" . nroff-mode) (\"\\\\.sty\\\\'\" . latex-mode) (\"\\\\.cl[so]\\\\'\" . latex-mode) (\"\\\\.bbl\\\\'\" . latex-mode) (\"\\\\.bib\\\\'\" . bibtex-mode) (\"\\\\.bst\\\\'\" . bibtex-style-mode) (\"\\\\.sql\\\\'\" . sql-mode) (\"\\\\(acinclude\\\\|aclocal\\\\|acsite\\\\)\\\\.m4\\\\'\" . autoconf-mode) (\"\\\\.m[4c]\\\\'\" . m4-mode) (\"\\\\.mf\\\\'\" . metafont-mode) (\"\\\\.mp\\\\'\" . metapost-mode) (\"\\\\.vhdl?\\\\'\" . vhdl-mode) (\"\\\\.article\\\\'\" . text-mode) (\"\\\\.letter\\\\'\" . text-mode) (\"\\\\.i?tcl\\\\'\" . tcl-mode) (\"\\\\.exp\\\\'\" . tcl-mode) (\"\\\\.itk\\\\'\" . tcl-mode) (\"\\\\.icn\\\\'\" . icon-mode) (\"\\\\.sim\\\\'\" . simula-mode) (\"\\\\.mss\\\\'\" . scribe-mode) (\"\\\\.f9[05]\\\\'\" . f90-mode) (\"\\\\.f0[38]\\\\'\" . f90-mode) (\"\\\\.indent\\\\.pro\\\\'\" . fundamental-mode) (\"\\\\.\\\\(pro\\\\|PRO\\\\)\\\\'\" . idlwave-mode) (\"\\\\.srt\\\\'\" . srecode-template-mode) (\"\\\\.prolog\\\\'\" . prolog-mode) (\"\\\\.tar\\\\'\" . tar-mode) (\"\\\\.\\\\(arc\\\\|zip\\\\|lzh\\\\|lha\\\\|zoo\\\\|[jew]ar\\\\|xpi\\\\|rar\\\\|cbr\\\\|7z\\\\|squashfs\\\\|ARC\\\\|ZIP\\\\|LZH\\\\|LHA\\\\|ZOO\\\\|[JEW]AR\\\\|XPI\\\\|RAR\\\\|CBR\\\\|7Z\\\\|SQUASHFS\\\\)\\\\'\" . archive-mode) (\"\\\\.oxt\\\\'\" . archive-mode) (\"\\\\.\\\\(deb\\\\|[oi]pk\\\\)\\\\'\" . archive-mode) (\"\\\\`/tmp/Re\" . text-mode) (\"/Message[0-9]*\\\\'\" . text-mode) (\"\\\\`/tmp/fol/\" . text-mode) (\"\\\\.oak\\\\'\" . scheme-mode) (\"\\\\.sgml?\\\\'\" . sgml-mode) (\"\\\\.x[ms]l\\\\'\" . xml-mode) (\"\\\\.dbk\\\\'\" . xml-mode) (\"\\\\.dtd\\\\'\" . sgml-mode) (\"\\\\.ds\\\\(ss\\\\)?l\\\\'\" . dsssl-mode) (\"\\\\.js[mx]?\\\\'\" . javascript-mode) (\"\\\\.har\\\\'\" . javascript-mode) (\"\\\\.json\\\\'\" . javascript-mode) (\"\\\\.[ds]?va?h?\\\\'\" . verilog-mode) (\"\\\\.by\\\\'\" . bovine-grammar-mode) (\"\\\\.wy\\\\'\" . wisent-grammar-mode) (\"[:/\\\\]\\\\..*\\\\(emacs\\\\|gnus\\\\|viper\\\\)\\\\'\" . emacs-lisp-mode) (\"\\\\`\\\\..*emacs\\\\'\" . emacs-lisp-mode) (\"[:/]_emacs\\\\'\" . emacs-lisp-mode) (\"/crontab\\\\.X*[0-9]+\\\\'\" . shell-script-mode) (\"\\\\.ml\\\\'\" . lisp-mode) (\"\\\\.ld[si]?\\\\'\" . ld-script-mode) (\"ld\\\\.?script\\\\'\" . ld-script-mode) (\"\\\\.xs\\\\'\" . c-mode) (\"\\\\.x[abdsru]?[cnw]?\\\\'\" . ld-script-mode) (\"\\\\.zone\\\\'\" . dns-mode) (\"\\\\.soa\\\\'\" . dns-mode) (\"\\\\.asd\\\\'\" . lisp-mode) (\"\\\\.\\\\(asn\\\\|mib\\\\|smi\\\\)\\\\'\" . snmp-mode) (\"\\\\.\\\\(as\\\\|mi\\\\|sm\\\\)2\\\\'\" . snmpv2-mode) (\"\\\\.\\\\(diffs?\\\\|patch\\\\|rej\\\\)\\\\'\" . diff-mode) (\"\\\\.\\\\(dif\\\\|pat\\\\)\\\\'\" . diff-mode) (\"\\\\.[eE]?[pP][sS]\\\\'\" . ps-mode) (\"\\\\.\\\\(?:PDF\\\\|DVI\\\\|OD[FGPST]\\\\|DOCX\\\\|XLSX?\\\\|PPTX?\\\\|pdf\\\\|djvu\\\\|dvi\\\\|od[fgpst]\\\\|docx\\\\|xlsx?\\\\|pptx?\\\\)\\\\'\" . doc-view-mode-maybe) (\"configure\\\\.\\\\(ac\\\\|in\\\\)\\\\'\" . autoconf-mode) (\"\\\\.s\\\\(v\\\\|iv\\\\|ieve\\\\)\\\\'\" . sieve-mode) (\"BROWSE\\\\'\" . ebrowse-tree-mode) (\"\\\\.ebrowse\\\\'\" . ebrowse-tree-mode) (\"#\\\\*mail\\\\*\" . mail-mode) (\"\\\\.g\\\\'\" . antlr-mode) (\"\\\\.mod\\\\'\" . m2-mode) (\"\\\\.ses\\\\'\" . ses-mode) (\"\\\\.docbook\\\\'\" . sgml-mode) (\"\\\\.com\\\\'\" . dcl-mode) (\"/config\\\\.\\\\(?:bat\\\\|log\\\\)\\\\'\" . fundamental-mode) (\"/\\\\.\\\\(authinfo\\\\|netrc\\\\)\\\\'\" . authinfo-mode) (\"\\\\.\\\\(?:[iI][nN][iI]\\\\|[lL][sS][tT]\\\\|[rR][eE][gG]\\\\|[sS][yY][sS]\\\\)\\\\'\" . conf-mode) (\"\\\\.la\\\\'\" . conf-unix-mode) (\"\\\\.ppd\\\\'\" . conf-ppd-mode) (\"java.+\\\\.conf\\\\'\" . conf-javaprop-mode) (\"\\\\.properties\\\\(?:\\\\.[a-zA-Z0-9._-]+\\\\)?\\\\'\" . conf-javaprop-mode) (\"\\\\.toml\\\\'\" . conf-toml-mode) (\"\\\\.desktop\\\\'\" . conf-desktop-mode) (\"/\\\\.redshift\\\\.conf\\\\'\" . conf-windows-mode) (\"\\\\`/etc/\\\\(?:DIR_COLORS\\\\|ethers\\\\|.?fstab\\\\|.*hosts\\\\|lesskey\\\\|login\\\\.?de\\\\(?:fs\\\\|vperm\\\\)\\\\|magic\\\\|mtab\\\\|pam\\\\.d/.*\\\\|permissions\\\\(?:\\\\.d/.+\\\\)?\\\\|protocols\\\\|rpc\\\\|services\\\\)\\\\'\" . conf-space-mode) (\"\\\\`/etc/\\\\(?:acpid?/.+\\\\|aliases\\\\(?:\\\\.d/.+\\\\)?\\\\|default/.+\\\\|group-?\\\\|hosts\\\\..+\\\\|inittab\\\\|ksysguarddrc\\\\|opera6rc\\\\|passwd-?\\\\|shadow-?\\\\|sysconfig/.+\\\\)\\\\'\" . conf-mode) (\"[cC]hange[lL]og[-.][-0-9a-z]+\\\\'\" . change-log-mode) (\"/\\\\.?\\\\(?:gitconfig\\\\|gnokiirc\\\\|hgrc\\\\|kde.*rc\\\\|mime\\\\.types\\\\|wgetrc\\\\)\\\\'\" . conf-mode) (\"/\\\\.\\\\(?:asound\\\\|enigma\\\\|fetchmail\\\\|gltron\\\\|gtk\\\\|hxplayer\\\\|mairix\\\\|mbsync\\\\|msmtp\\\\|net\\\\|neverball\\\\|nvidia-settings-\\\\|offlineimap\\\\|qt/.+\\\\|realplayer\\\\|reportbug\\\\|rtorrent\\\\.\\\\|screen\\\\|scummvm\\\\|sversion\\\\|sylpheed/.+\\\\|xmp\\\\)rc\\\\'\" . conf-mode) (\"/\\\\.\\\\(?:gdbtkinit\\\\|grip\\\\|mpdconf\\\\|notmuch-config\\\\|orbital/.+txt\\\\|rhosts\\\\|tuxracer/options\\\\)\\\\'\" . conf-mode) (\"/\\\\.?X\\\\(?:default\\\\|resource\\\\|re\\\\)s\\\\>\" . conf-xdefaults-mode) (\"/X11.+app-defaults/\\\\|\\\\.ad\\\\'\" . conf-xdefaults-mode) (\"/X11.+locale/.+/Compose\\\\'\" . conf-colon-mode) (\"/X11.+locale/compose\\\\.dir\\\\'\" . conf-javaprop-mode) (\"\\\\.~?[0-9]+\\\\.[0-9][-.0-9]*~?\\\\'\" nil t) (\"\\\\.\\\\(?:orig\\\\|in\\\\|[bB][aA][kK]\\\\)\\\\'\" nil t) (\"[/.]c\\\\(?:on\\\\)?f\\\\(?:i?g\\\\)?\\\\(?:\\\\.[a-zA-Z0-9._-]+\\\\)?\\\\'\" . conf-mode-maybe) (\"\\\\.[1-9]\\\\'\" . nroff-mode) (\"\\\\.art\\\\'\" . image-mode) (\"\\\\.avs\\\\'\" . image-mode) (\"\\\\.bmp\\\\'\" . image-mode) (\"\\\\.cmyk\\\\'\" . image-mode) (\"\\\\.cmyka\\\\'\" . image-mode) (\"\\\\.crw\\\\'\" . image-mode) (\"\\\\.dcr\\\\'\" . image-mode) (\"\\\\.dcx\\\\'\" . image-mode) (\"\\\\.dng\\\\'\" . image-mode) (\"\\\\.dpx\\\\'\" . image-mode) (\"\\\\.fax\\\\'\" . image-mode) (\"\\\\.hrz\\\\'\" . image-mode) (\"\\\\.icb\\\\'\" . image-mode) (\"\\\\.icc\\\\'\" . image-mode) (\"\\\\.icm\\\\'\" . image-mode) (\"\\\\.ico\\\\'\" . image-mode) (\"\\\\.icon\\\\'\" . image-mode) (\"\\\\.jbg\\\\'\" . image-mode) (\"\\\\.jbig\\\\'\" . image-mode) (\"\\\\.jng\\\\'\" . image-mode) (\"\\\\.jnx\\\\'\" . image-mode) (\"\\\\.miff\\\\'\" . image-mode) (\"\\\\.mng\\\\'\" . image-mode) (\"\\\\.mvg\\\\'\" . image-mode) (\"\\\\.otb\\\\'\" . image-mode) (\"\\\\.p7\\\\'\" . image-mode) (\"\\\\.pcx\\\\'\" . image-mode) (\"\\\\.pdb\\\\'\" . image-mode) (\"\\\\.pfa\\\\'\" . image-mode) (\"\\\\.pfb\\\\'\" . image-mode) (\"\\\\.picon\\\\'\" . image-mode) (\"\\\\.pict\\\\'\" . image-mode) (\"\\\\.rgb\\\\'\" . image-mode) (\"\\\\.rgba\\\\'\" . image-mode) (\"\\\\.tga\\\\'\" . image-mode) (\"\\\\.wbmp\\\\'\" . image-mode) (\"\\\\.webp\\\\'\" . image-mode) (\"\\\\.wmf\\\\'\" . image-mode) (\"\\\\.wpg\\\\'\" . image-mode) (\"\\\\.xcf\\\\'\" . image-mode) (\"\\\\.xmp\\\\'\" . image-mode) (\"\\\\.xwd\\\\'\" . image-mode) (\"\\\\.yuv\\\\'\" . image-mode) (\"\\\\.tgz\\\\'\" . tar-mode) (\"\\\\.tbz2?\\\\'\" . tar-mode) (\"\\\\.txz\\\\'\" . tar-mode) (\"\\\\.tzst\\\\'\" . tar-mode) (\"\\\\.drv\\\\'\" . latex-mode)))" "(setq magit-section-initial-visibility-alist '((org-roam-backlinks . show) (org-roam-node-section . hide) (modules . show) (stashes . show) (unpulled . show) (unpushed . show)))" "(setq default-frame-alist '((font . \"Iosevka Term SS04\") (vertical-scroll-bars) (tool-bar-lines . 0) (menu-bar-lines . 0) (left-fringe . 5) (right-fringe . 5)))" "(setq atom-one-dark-colors-alist '((\"atom-one-dark-accent\" . \"#528BFF\") (\"atom-one-dark-fg\" if nil \"color-248\" \"#ABB2BF\") (\"atom-one-dark-bg\" if nil \"color-235\" \"#282C34\") (\"atom-one-dark-bg-1\" if nil \"color-234\" \"#121417\") (\"atom-one-dark-bg-hl\" if nil \"color-236\" \"#2C323C\") (\"atom-one-dark-gutter\" if nil \"color-239\" \"#4B5363\") (\"atom-one-dark-mono-1\" if nil \"color-248\" \"#ABB2BF\") (\"atom-one-dark-mono-2\" if nil \"color-244\" \"#828997\") (\"atom-one-dark-mono-3\" if nil \"color-240\" \"#5C6370\") (\"atom-one-dark-cyan\" . \"#56B6C2\") (\"atom-one-dark-blue\" . \"#61AFEF\") (\"atom-one-dark-purple\" . \"#C678DD\") (\"atom-one-dark-green\" . \"#98C379\") (\"atom-one-dark-red-1\" . \"#E06C75\") (\"atom-one-dark-red-2\" . \"#BE5046\") (\"atom-one-dark-orange-1\" . \"#D19A66\") (\"atom-one-dark-orange-2\" . \"#E5C07B\") (\"atom-one-dark-gray\" if nil \"color-237\" \"#3E4451\") (\"atom-one-dark-silver\" if nil \"color-247\" \"#9DA5B4\") (\"atom-one-dark-black\" if nil \"color-233\" \"#21252B\") (\"atom-one-dark-border\" if nil \"color-232\" \"#181A1F\")))" "(setq default-frame-alist '((font . \"Iosevka Term SS04\") (alpha 98 . 85) (vertical-scroll-bars) (tool-bar-lines . 0) (menu-bar-lines . 0) (left-fringe . 5) (right-fringe . 5)))" "(setq org-latex-logfiles-extensions '(\"synctex.gz\" \"bbl\" \"aux\" \"bcf\" \"blg\" \"fdb_latexmk\" \"fls\" \"figlist\" \"idx\" \"log\" \"nav\" \"out\" \"ptc\" \"run.xml\" \"snm\" \"toc\" \"vrb\" \"xdv\"))" "(setq org-latex-logfiles-extensions '(\"synctex.gz\" \"bbl\" \"tex\" \"aux\" \"bcf\" \"blg\" \"fdb_latexmk\" \"fls\" \"figlist\" \"idx\" \"log\" \"nav\" \"out\" \"ptc\" \"run.xml\" \"snm\" \"toc\" \"vrb\" \"xdv\"))" "(setq css-indent-offset 4)" "(setq org-mode-hook '(org-ref-org-menu org-tempo-setup org-download-enable visual-fill-column-mode org-fancy-priorities-mode (lambda nil (org-superstar-mode t)) kb/org-visual-setup evil-collection-mu4e-org-set-header-to-normal-mode evil-org-mode #[0 \"\\301\\211\\207\" [imenu-create-index-function org-imenu-get-tree] 2] typo-mode (lambda nil (set-face-attribute 'ace-jump-face-foreground nil :font kb/variable-pitch-font)) er/add-org-mode-expansions (lambda nil (display-line-numbers-mode 0)) #[0 \"\\300\\301\\302\\303\\304$\\207\" [add-hook change-major-mode-hook org-show-all append local] 5] #[0 \"\\300\\301\\302\\303\\304$\\207\" [add-hook change-major-mode-hook org-babel-show-result-all append local] 5] org-babel-result-hide-spec org-babel-hide-all-hashes org-ref-setup-label-finders))" "(setq tab-width 4)" "(setq yas-snippet-dirs '(doom-snippets-dir \"/home/krisbalintona/main-emacs/etc/yasnippet/snippets/\"))" "(setq kb/variable-pitch-font \"Iosevka Etoile\")" "(re-search-forward (symbol-value 'org-link-bracket-re) nil t)" "(buffer-substring-no-properties ; Limit to only links with ids
                        (+ (match-beginning 0) 3)
                        (+ (match-beginning 0) 5))" "(buffer-substring-no-properties ; Limit to only links with ids
                        (+ (match-beginning 0) 2)
                        (+ (match-beginning 0) 4))" "(equal (buffer-substring-no-properties ; Limit to only links with ids
                        (+ (match-beginning 0) 2)
                        (+ (match-beginning 0) 4))
                       \"id\")" "(kb/org-roam-update-link-desc--action (current-buffer))" "(current-prefix-arg)" "(kb/org-roam-update-link-desc--action (current-buffer))" "(with-current-buffer)" "(find-file-noselect nil)" "(find-file-noselect f)" "(org-id-get 'point)" "(org-id-get)" "(org-id-copy)" "(org-id-get)" "(symbol-value (org-id-get))" "(org-id-get)" "(re-search-forward (symbol-value 'org-link-bracket-re) nil t)" "(org-id-get)" "(typep (org-roam-node-at-point) 'alist)" "(typep (org-roam-node-at-point))" "(type (org-roam-node-at-point))" "(org-roam-node-at-point)" "org-roam-node-at-point" "(org-element-at-point)" "(org-element-property :contents-begin (org-element-at-point))" "(org-element-at-point)" "(org-element-property :path (org-element-at-point))" "(defun eval-expression-to-kill-ring ()
    (interactive)
    (call-interactively 'eval-expression)
    (kill-new (car values)))" "(org-element-at-point)" "(org-element-property :path (org-element-at-point))" "(org-element-property :title (org-element-at-point))" " y" "(org-element-property :title (org-element-at-point))" "(org-element-at-point)" "(org-element-property :path (org-element-at-point))" "(org-element-property :format (org-element-at-point))" "(while
        (let* ((id (org-element-property :path (org-element-at-point)))
               ;; (node (org-roam-populate (org-roam-node-create :id id)))
               (node (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
               )
          (re-search-forward (symbol-value 'org-link-bracket-re) (window-end) \"hello\")
          (replace-match (org-link-make-string
                          (concat \"id:\" (org-roam-node-id node)) (org-roam-node-title node)
                          )))
        )" "(save-excursion
      (goto-char (window-start))
      (while
        (let* ((id (org-element-property :path (org-element-at-point)))
               ;; (node (org-roam-populate (org-roam-node-create :id id)))
               (node (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
               )
          (re-search-forward (symbol-value 'org-link-bracket-re) (window-end) \"hello\")
          (replace-match (org-link-make-string
                          (concat \"id:\" (org-roam-node-id node)) (org-roam-node-title node)
                          )))
        ))" "(re-search-forward (symbol-value 'org-link-bracket-re) (window-end) t)" "(save-excursion
      (goto-char (window-start))
      (while
          (let* ((id (org-element-property :path (org-element-at-point)))
                 ;; (node (org-roam-populate (org-roam-node-create :id id)))
                 (node (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
                 )
            (re-search-forward (symbol-value 'org-link-bracket-re) (window-end) t)
            (replace-match (org-link-make-string
                            (concat \"id:\" (org-roam-node-id node)) (org-roam-node-title node)
                            )))
        ))" "(re-search-forward (symbol-value 'org-link-bracket-re))" "(org-element-property :path (org-element-at-point))" "(replace-match (org-link-make-string
                        (concat \"id:\" (org-roam-node-id (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))) (org-roam-node-title (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
                        ))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             ;; (node (org-roam-populate (org-roam-node-create :id id)))
             (node (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
             )
           (print id node))" "(org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\"))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
             )
           (print id node))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
             )
           (concat `id `node))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (concat `id `node)
             ))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (concat id node)
             ))" "      (let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           \"hello\"
             ))
" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (echo \"hello\")
             ))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (echo test)
             ))" "      (let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (echo id)
             ))
" "(org-element-property :raw-link (org-element-at-point))" "(org-element-property :type id (org-element-at-point))" "(org-element-property :path (org-element-at-point))" "(org-element-property :path `(org-element-at-point))" "(org-element-property :path ‘(org-element-at-point))" "(org-element-property :path '(org-element-at-point))" "(org-element-property :path (org-element-at-point))" "id" "(org-element-at-point)" "(org-element-property :id (org-element-at-point))" "(org-element-at-point)" "(org-element-property :path (org-element-at-point))" "(/ 1100 350)" "(* 3 (/ 16 5))"))
(setq flycheck-read-checker-history '("proselint" "javascript-eslint" "emacs-lisp" "javascript-eslint" "css-stylelint" "json-jsonlint" "css-stylelint" "javascript-standard" "handlebars" "css-csslint" "yaml-jsyaml" "textlint" "proselint" "textlint" "proselint" "textlint" "proselint"))
(setq buffer-name-history '("init.el" "themes-rcp.el" "init.el" "*scratch*" "*Scratch for emacs-lisp-mode*" "engl0930_final_portfolio-Aug092021-083639.org" "*Messages*" "org-roam-general-rcp.el" "org-roam-other-rcp.el" "themes-rcp.el" "org-roam-general-rcp.el" "themes-rcp.el" "org-roam-other-rcp.el" "init.el" "org-roam-general-rcp.el" "init.el" "org-roam-other-rcp.el" "master-lib.bib" "org-roam-other-rcp.el" "org-roam-general-rcp.el" "org-roam-other-rcp.el" "*Messages*" "magit: main-emacs" "org-roam-general-rcp.el" "programming-web-rcp.el" "personal/main.js<4>" "post.hbs" "personal/loop.hbs" "partials/loop.hbs.~HEAD~" "personal/loop.hbs" "index.hbs" "personal/main.js" "post.hbs" "personal/loop.hbs" "index.hbs" "about.hbs" "ghost-devel/package.json" "post.hbs" "theme_header.hbs" "zvikov-master/style.css" "index.hbs" "post.hbs" "loop.hbs" "personal/main.js" "about.hbs" "index.hbs" "personal/style.css" "zvikov/main.js" "*Scratch for js2-mode*<2>" "zvikov/main.js" "personal/main.js" "programming-web-rcp.el" ".eslintrc.json" "programming-web-rcp.el" "style.css" "ghost-devel/routes.yaml" "programming-web-rcp.el" "main.js" "themes-rcp.el" "*Help*" "themes-rcp.el<2>" "themes-rcp.el" "index.hbs" "subscribe.hbs" "style.css<2>" "programming-web-rcp.el" "post.hbs" "programming-web-rcp.el" "init.el" "programming-general-rcp.el" "themes-rcp.el" "programming-web-rcp.el" "programming-general-rcp.el" "ghost-master/content/themes/personal/package.json" "ghost/content/themes/personal/package.json" "themes-rcp.el" "Bulletin-master/package.json" "programming-web-rcp.el" "style.css" "programming-web-rcp.el" "personal/subscribe_form.hbs" "style.css" "zvikov-master/subscribe_form.hbs" "blog-Jun172021-013937.org" "org-roam-general-rcp.el" "blog-Jun172021-013937.org" "post.hbs" "main.js" "index.hbs" "default.hbs" "post.hbs" "style.css" "personal/package.json" "main.js" "personal/package.json" "org-roam-general-rcp.el" "better-defaults-rcp.el" "*Scratch for org-mode*" "*Messages*" "blog_zettelkasten_is_less_special_than_you_think-Jun292021-012324.org<2>"))
(setq eww-prompt-history '("google.com"))
(setq read-char-history '("n" "i" "all" "yes" "all"))
(setq swiper-history '("ration" #("etter" 0 5 (ivy-index 0)) #(" * Better-jumper" 0 1 (swiper-line-number 315 display "315 ") 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-superstar-header-bullet org-level-1) composition (0 1 [9885]) org-category "qol-packages") 2 3 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 org-category "qol-packages") 3 16 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 org-category "qol-packages")) #("habit" 0 5 (ivy-index 0)) #("         '((sequence \"TODO(t)\" \"HABIT(H)\" \"WAITING(w!)\" \"NEXT(n)\" \"PROG(p)\" \"|\" \"DONE(d!/@)\")" 0 1 (display "64  " swiper-line-number 64) 1 10 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 10 11 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 11 12 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 12 21 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 30 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 41 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 41 42 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 42 55 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 55 56 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 56 65 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 65 66 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 66 75 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 75 76 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 76 79 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 79 80 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 80 92 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 92 93 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t))))
(setq org-agenda-search-history '("GTD"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("114" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("264" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("210" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3))))
(setq magit-revision-history '("windows" "origin/master" "windows" "origin/master" "windows" "master" "origin/master" "77898f6" "21f7d6e" "cc0ebce" "origin/master" "windows" "origin/master" "cc0ebce" "origin/master" "windows" "origin/master" "windows" "origin/master" "windows" "origin/master" "beab7b6" "origin/master" "master" "windows" "origin/master" "windows" "master" "0a3b5f3" "origin/master" "master" "origin/master" "windows" "origin/master" "HEAD" "master" "origin/master" "HEAD" "master" "origin/master" "Org-roam small files only" "master" "Persistent_eyebrowse" "master" "Org-ref-cite" "master" "origin/master" "master" "origin/master" "Persistent_eyebrowse" "master" "origin/master" "HEAD" "master" "origin/master" "master" "origin/master" "pagination" "master" "origin/master" "pagination" "master" "origin/master" "master" "HEAD" "pagination" "master" "HEAD" "master" "origin/archive" "archive" "master" "archive" "master" "archive" "master" "origin/master" "master" "origin/master" "master" "origin/master" "master" "origin/master" "archive" "origin/master" "master" "origin/master" "master" "origin/master" "master" "origin/master" "master" "origin/master"))
(setq org-read-date-history '("+4    " "fri 11:59pm    " "fri 10:10am    " "   " "+1    " "   " "may 9    " "+9    " "+8    " "tue    " "mon    " "sun    " "sat    " "+0    " "17    " "19    " "+0    " "fri    " "wed    " "tue    " "sun    " "wed    " "tue    " "mon    " "sun    " "   " "+1    " "sun    " "fri    " "thu    " "tue    " "+2    " "+1    " "sun    " "+0    " "fri    " "+1    " "+0    " "wed    " "mon    " "sun    " "sat    " "fri    " "+1    " "   " "thu    " "   " "+0    " "+1    " "   " "16 9am    " "5    " "+9    " "sun    " "thu    " "wed    " "tue    " "mon    " "sun    " "mon    " "+1    " "apr 11    " "   " "31    " "wed    " "27    " "thu    " "wed    " "+1    " "fri 10am    " "tue    " "+0    " "   " "22    " "   " "sun    " "thu    " "wed    " "tue    " "sun    " "   " "mon    " "sat    " "+1    " "   " "mon    " "fri    " "sat    " "+1    " "   " "sun    " "   " "+1    " "   " "wed    " "+0    " "tue    " "wed    " "thu    " "fri    "))
(setq org-refile-history '("school.org/Classes/CHIN0100/" "school.org/Classes/EAST0650/" "school.org/Classes/EAST0650/" "school.org/Classes/EAST0650/" "school.org/Classes/EAST0650/" "school.org/Classes/PHIL0360/" "school.org/Classes/PHIL0360/" "school.org/Classes/CHIN0100/" "school.org/Administration/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "housekeeping.org/" "inputs.org/Lectures/" "hobbies.org/Emacs/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "school.org/Classes/" "hobbies.org/Emacs/" "hobbies.org/Emacs/" "housekeeping.org/" "hobbies.org/Emacs/" "housekeeping.org/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "inputs.org/Reddit/" "inputs.org/Reddit/" "inputs.org/Reddit/" "inputs.org/Reddit/" "inputs.org/Reddit/" "hobbies.org/Personal knowledge management/" "hobbies.org/Linux/" "school.org/Classes/Write my final paper/" "school.org/Administration/Figure out how I'm going to pay for college/" "school.org/Classes/" "school.org/Classes/Write my final paper/" "school.org/Classes/" "school.org/Classes/Write my presentation paper/" "school.org/Administration/" "school.org/Clubs/" "school.org/Administration/" "inputs.org/Reddit/" "inputs.org/Reddit/" "inputs.org/Reddit/" "hobbies.org/" "school.org/Classes/" "school.org/Administration/Figure out how I'm going to pay for college/" "hobbies.org/Linux/" "habits.org/" "hobbies.org/Personal knowledge management/" "school.org/Administration/Figure out how I'm going to pay for college/" "hobbies.org/Linux/" "hobbies.org/" "hobbies.org/Emacs/" "habits.org/" "school.org/Classes/" "housekeeping.org/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "misc.org/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "school.org/Classes/POBS0910/Research Machiavelli/" "misc.org/" "school.org/Clubs/" "hobbies.org/Linux/" "school.org/Clubs/" "media.org/Regular/" "inputs.org/Articles/" "housekeeping.org/" "school.org/Administration/Figure out how I'm going to pay for college/" "housekeeping.org/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "housekeeping.org/" "school.org/Administration/Figure out how I'm going to pay for college/" "school.org/Administration/" "school.org/Administration/Figure out how I'm going to pay for college/" "hobbies.org/Emacs/" "school.org/Clubs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Personal knowledge management/" "housekeeping.org/" "hobbies.org/Emacs/" "misc.org/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "misc.org/" "hobbies.org/Emacs/"))
(setq bibtex-completion-cite-command-history '("autocite" "textcquote" "autocite" "cite*" "cite" "cite*" "cite" "autocite" "cite" "autocite" "cite"))
(setq keymap-name-history '("lua-mode-map" "pdf-view-mode-map"))
(setq org-capture--prompt-history '("person"))
(setq read-number-history '("1" "1)" "1" "2" "1" "200" "1" "2" "1" "271" "298" "1" "31" "80" "88" "9" "5" "4" "9" "1"))
(setq mu4e~headers-search-hist '("milk" "dr jing" "risla" "promissory note" "docusign" "risla" "paper onesimo" "paper" "rise of universities" "grade" "final grades" "access risla" "access" "dr lin" "fiscal" "stewardship" "steward" "PIN" "level 1" "pen pal" "burp" "owc" "first readings" "onesimo" "xiru" "corrin" "no labels"))
(setq query-replace-history '("\"" "'" "\"\"" "'" "}}" "}\\}" "js2" "js" "yaml" "js" "web" "handlebars" "js" "handlebars" "gh-input" "fast-transition" "" "home-subscribe" "`" "'" ",kb/variable-pitch-font" #("kb/variable-pitch-font" 0 7 (font-lock-fontified t src-block t face (lisp-extra-font-lock-quoted)) 7 19 (font-lock-fontified t src-block t face (lisp-extra-font-lock-quoted)) 19 21 (font-lock-fontified t src-block t face (lisp-extra-font-lock-quoted)) 21 22 (font-lock-fontified t src-block t face (lisp-extra-font-lock-quoted) rear-nonsticky t)) "" "'" "specialtags" "othertags" "functiontag" "firsttag" "org" "general" "\\\\" "\\" "nobiot" "my" "new" "refine" "" "-main" "var(--heading-font-fallback)" "sans-serif" "var(--heading-font-main)" #("\"roboto-mono\", \"Roboto Mono\"" 1 8 (face font-lock-string-face) 8 10 (face font-lock-string-face) 10 11 (face font-lock-string-face) 11 13 (face font-lock-string-face) 15 27 (face font-lock-string-face) 27 28 (rear-nonsticky t face font-lock-string-face)) #("roboto-mono\", \"Roboto Mono\"" 0 7 (face font-lock-string-face) 7 9 (face font-lock-string-face) 9 10 (face font-lock-string-face) 10 12 (face font-lock-string-face) 14 26 (face font-lock-string-face) 26 27 (rear-nonsticky t face font-lock-string-face)) "web" "lua" "{{comment_id}}" "{{id}}" "{{@site.lang}}" #("{{lang}}" 0 2 (face font-lock-string-face) 2 7 (face font-lock-string-face) 7 8 (rear-nonsticky t face font-lock-string-face)) "{{@site.lang}}" #("{{@site.lang}}" 0 2 (face font-lock-string-face) 2 3 (face font-lock-string-face) 3 8 (face font-lock-string-face) 8 13 (face font-lock-string-face) 13 14 (rear-nonsticky t face font-lock-string-face)) "Beau Haan" #("[[~Beau Haan]]" 3 11 (htmlize-link (:uri "~Beau Haan") org-category "implementing_a_digital_zettelkasten_using_block_references_in_roam_research-Jun042021-235544") 11 12 (htmlize-link (:uri "~Beau Haan") rear-nonsticky t org-category "implementing_a_digital_zettelkasten_using_block_references_in_roam_research-Jun042021-235544")) "*" "#" "*" "#" "*" "#" ":refine:" "refine" "+ " "- " "+" "-" "*" "#" "other" "general" "org-roam-general" "themes" "other" "views" "views" "general" "org-agenda" "latex" "pdf" "general" "John" "Interviewee" "Kristoffer" "Interviewer" "unset" "none" "--embedded-note-title" #("#8e98aa" 0 6 (face (:background #("#8e98aa" 0 6 (fontified t face ((:foreground "black") (:background "#8e98aa"))) 6 7 (rear-nonsticky t fontified t face ((:foreground "black") (:background "#8e98aa")))) :foreground "#ffffff" :box (:line-width -1))) 6 7 (face (:background #("#8e98aa" 0 6 (fontified t face ((:foreground "black") (:background "#8e98aa"))) 6 7 (rear-nonsticky t fontified t face ((:foreground "black") (:background "#8e98aa")))) :foreground "#ffffff" :box (:line-width -1)) rear-nonsticky t)) "center" "justify" " " #("	" 0 1 (rear-nonsticky t org-category "Feb242021-223754")) "passage" "Prompt" " " "	" "textbf" "emph" "--" "-" "Mom:"))
(setq counsel-fonts-history '("Vollkorn" "LiterationSerif Nerd Font" "Utopia" "Libre Bodoni" "Libre Caslon Text" "Iosevka Etoile" "Hack Nerd Font Mono" "IBM Plex Sans KR" "Noto Sans Mono" "iosevka term ss04"))
(setq bookmark-history '("Burly: Blog working" #("Burly: Blog working" 0 19 (consult--type nil)) "Burly: Index" #("Burly: Index" 0 12 (consult--type nil)) "Burly: ENGL Working" "Burly: ENGL Working" #("Burly: ENGL Working" 0 19 (consult--type nil)) "Burly: Blog working" #("Burly: Blog working" 0 19 (consult--type nil)) "Burly: Index" #("Burly: Index" 0 12 (consult--type nil)) ("" (defaults "index.hbs") (position . 928) (rear-context-string . ".009c.444-.444 1") (front-context-string . ".143-.444 1.587 ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "config.development.json") (position . 293) (rear-context-string . "\": \"Direct\"   },") (front-context-string . "   \"logging\": { ") (filename . "~/ghost-devel/config.development.json")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "Burly: Blog working" "routes.yaml") (position . 186) (rear-context-string . "channel   #   fi") (front-context-string . "lter:       coll") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Web dev" #("Burly: Web dev" 0 14 (consult--type nil)) ("" (defaults "index.hbs") (position . 1273) (rear-context-string . "    {{^is \"paged") (front-context-string . "\"}}             ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "routes.yaml") (position . 186) (rear-context-string . "nel     filter: ") (front-context-string . "      collection") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Web dev" "Burly: RELS0120" "Burly: ENGL Working" "Burly: Blog working" ("" (defaults "index.hbs") (position . 1273) (rear-context-string . "    {{^is \"paged") (front-context-string . "\"}}             ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "routes.yaml") (position . 186) (rear-context-string . "nel     filter: ") (front-context-string . "      collection") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Blog working" #("Burly: Blog working" 0 19 (consult--type nil)) ("" (defaults "index.hbs") (position . 1273) (rear-context-string . "    {{^is \"paged") (front-context-string . "\"}}             ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "routes.yaml") (position . 186) (rear-context-string . "nel     filter: ") (front-context-string . "      collection") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Web dev" ("" (defaults "index.hbs") (position . 1273) (rear-context-string . "    {{^is \"paged") (front-context-string . "\"}}             ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "routes.yaml") (position . 186) (rear-context-string . "nel     filter: ") (front-context-string . "      collection") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Blog working" "Burly: Index" "Burly: Book working" ("" (defaults "completion-selectrum-rcp.el") (position . 8999) (rear-context-string . " embark-consult ") (front-context-string . "  :after (embark") (filename . "~/main-emacs/elisp/completion-selectrum-rcp.el")) "Burly: Index" "Burly: RELS0120" #("Burly: RELS0120" 0 15 (consult--type nil)) "Burly: Book working" #("Burly: Book working" 0 19 (consult--type nil)) "Burly: Podcast working" #("Burly: Podcast working" 0 22 (consult--type nil)) "Burly: Blog working" #("Burly: Blog working" 0 19 (consult--type nil)) "Burly: Index" #("Burly: Index" 0 12 (consult--type nil)) "org-capture-last-stored" #("org-capture-last-stored" 0 23 (consult--type 102)) ("" (defaults "index.hbs") (position . 1273) (rear-context-string . "    {{^is \"paged") (front-context-string . "\"}}             ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "routes.yaml") (position . 186) (rear-context-string . "nel     filter: ") (front-context-string . "      collection") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Web dev" #("Burly: Web dev" 0 14 (consult--type nil)) ("" (defaults "index.hbs") (position . 1273) (rear-context-string . "    {{^is \"paged") (front-context-string . "\"}}             ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "routes.yaml") (position . 186) (rear-context-string . "nel     filter: ") (front-context-string . "      collection") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Blog working" #("Burly: Blog working" 0 19 (consult--type nil)) "Burly: Book working" #("Burly: Book working" 0 19 (consult--type nil)) "Burly: Index" "Burly: Index" "Burly: Index" "Burly: Index" "Burly: Index" ("" (defaults "index.hbs") (position . 1273) (rear-context-string . "    {{^is \"paged") (front-context-string . "\"}}             ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "routes.yaml") (position . 186) (rear-context-string . "nel     filter: ") (front-context-string . "      collection") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Blog working" "Burly: Web dev" ("" (defaults "index.hbs") (position . 1273) (rear-context-string . "    {{^is \"paged") (front-context-string . "\"}}             ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "routes.yaml") (position . 186) (rear-context-string . "nel     filter: ") (front-context-string . "      collection") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Blog working" "Burly: Index" ("" (defaults "index.hbs") (position . 1273) (rear-context-string . "    {{^is \"paged") (front-context-string . "\"}}             ") (filename . "~/ghost-devel/content/themes/personal/index.hbs")) ("" (defaults "redirects.yaml") (position . 24) (rear-context-string . "  /test/: /about") (front-context-string) (filename . "~/ghost-devel/content/data/redirects.yaml")) ("" (defaults "routes.yaml") (position . 186) (rear-context-string . "nel     filter: ") (front-context-string . "      collection") (filename . "~/ghost-devel/content/settings/routes.yaml")) "Burly: Blog working" "Org Database" #("Org Database" 0 12 (consult--type 102)) "Burly: test" "Burly: Index" "Burly: Blog working" #("Burly: Blog working" 0 19 (consult--type nil)) "Burly: test" "Burly: test" "Burly: Index" #("Burly: Index" 0 12 (consult--type nil)) "Burly: Index Working" #("index work" 0 10 (ivy-index 0)) "Burly: Index Working" "Burly: Index Working" "Burly: test" "Burly: Index" "Burly: Index Working"))
(setq shell-command-history '("ripgrep" "~/main-emacs/.gitignore" "lsb_release -sd"))
(setq face-name-history '("mode-line-inactive" "mode-line-inactive" "mode-line-inactive" "mode-line-inactive" "org-document-title" "org-level-1" "org-hide" "org-date" "page-break-lines" "org-roam-dim" #("dimmed" 0 6 (ivy-index 1)) "magit-dimmed" #("dim" 0 3 (ivy-index 4)) "org-agenda-dimmed-todo-face" #("ace-jump" 0 8 (ivy-index 1)) "ace-jump-face-foreground" #("ace jump" 0 8 (ivy-index 1)) "ace-jump-face-foreground" "ace-jump-face-background" #("org link" 0 8 (ivy-index 0)) "org-link" #("cpc" 0 3 (ivy-index 0)) "company-preview-common" #("header-line" 0 11 (ivy-index 0)) "ivy-minibuffer-match-face-3" #("immf2" 0 5 (ivy-index 0)) "ivy-minibuffer-match-face-2" #("margin doc" 0 10 (ivy-index 0)) "marginalia-documentation" #("selectrum anno" 0 14 (ivy-index 0)) "selectrum-completion-annotation" "ivy-grep-info" "selectrum-completion-annotation" "ace-jump-face-foreground" "all-the-icons-ivy-rich-icon-face" "ivy-current-match" "ivy-minibuffer-match-face-2" "message-header-to" "message-header-cc" #("compose hea" 0 11 (ivy-index 0)) "mu4e-compose-header-face" "org-roam-link" #("variable-pit" 0 12 (ivy-index 0)) "variable-pitch" "bold"))
(setq ivy-history '(#("apropospriate-light" 0 19 (ivy-index 1)) #("atom-one-dark" 0 13 (ivy-index 3)) #("apro" 0 4 (ivy-index 0)) "apropospriate-dark" #("materi" 0 6 (ivy-index 0)) "material-light" #("mate" 0 4 (ivy-index 1)) "material" "spacemacs-dark" #("atom one" 0 8 (ivy-index 0)) #("atom" 0 4 (ivy-index 0)) #("mo" 0 2 (ivy-index 1)) "modus-vivendi" #("modus-operandi" 0 14 (ivy-index 0)) #("/home/krisbalintona/main-emacs/elisp/mu4e-rcp.el" 0 48 (ivy-index 0)) #("programming general" 0 19 (ivy-index 0)) "/home/krisbalintona/main-emacs/elisp/programming-general-rcp.el" #("init" 0 4 (ivy-index 0)) "/home/krisbalintona/main-emacs/init.el" #("selectrum" 0 9 (ivy-index 0)) "/home/krisbalintona/main-emacs/elisp/completion-selectrum-rcp.el" #("mu4e.rc" 0 7 (ivy-index 0)) #("~/main-emacs/elisp/" 0 19 (ivy-index 4)) #("/home/krisbalintona/.config/rofi/config.rasi" 0 44 (ivy-index 12)) #("sudo timeshift --create --comment \"After reaching my limit\"" 0 1 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-shell-command-face) 1 4 (ivy-index 0 face eshell-syntax-highlighting-shell-command-face) 4 5 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 5 6 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-shell-command-face) 6 14 (ivy-index 0 face eshell-syntax-highlighting-shell-command-face) 14 15 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 15 16 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 16 23 (ivy-index 0 face eshell-syntax-highlighting-default-face) 23 24 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 24 25 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 25 33 (ivy-index 0 face eshell-syntax-highlighting-default-face) 33 34 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 34 35 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-string-face) 35 58 (ivy-index 0 face eshell-syntax-highlighting-string-face) 58 59 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-string-face)) #("find ./roam -type f -exec sed -i 's/lindbergBeginningsWesternScience/lindbergBeginningsWesternScience2007/' {} \\;" 0 1 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-shell-command-face) 1 4 (ivy-index 0 face eshell-syntax-highlighting-shell-command-face) 4 5 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 5 6 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-file-arg-face) 6 11 (ivy-index 0 face eshell-syntax-highlighting-file-arg-face) 11 12 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 12 13 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 13 17 (ivy-index 0 face eshell-syntax-highlighting-default-face) 17 18 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 18 19 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 19 20 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 20 21 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 21 25 (ivy-index 0 face eshell-syntax-highlighting-default-face) 25 26 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 26 27 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 27 29 (ivy-index 0 face eshell-syntax-highlighting-default-face) 29 30 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 30 31 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 31 32 (ivy-index 0 face eshell-syntax-highlighting-default-face) 32 33 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 33 34 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-string-face) 34 107 (ivy-index 0 face eshell-syntax-highlighting-string-face) 107 108 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 108 109 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 109 110 (ivy-index 0 face eshell-syntax-highlighting-default-face) 110 111 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 111 112 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 112 113 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face)) #("lind" 0 4 (ivy-index 0)) #("dele" 0 4 (ivy-index 0)) "sudo timeshift --delete" #("after" 0 5 (ivy-index 0)) #("sudo timeshift --create --comment \"Working on zsh\"" 0 50 (ivy-index 1)) #("de" 0 2 (ivy-index 2)) "sudo timeshift --delete" "sudo timeshift --delete 37" #("org-ref-insert-cite-with-completion" 0 35 (ivy-index 0 idx 0)) #("sudo" 0 4 (ivy-index 0)) #("global-prettier-mode" 0 20 (ivy-index 0 idx 0)) #("comple" 0 6 (ivy-index 0)) "/home/krisbalintona/main-emacs/configs/completion-frameworks.org" #("consult" 0 7 (ivy-index 0)) #("collection" 0 10 (ivy-index 0)) "evil-collection" #("evil" 0 4 (ivy-index 0)) #("change" 0 6 (ivy-index 0)) #("ma" 0 2 (ivy-index 1)) "Machiavelli" "instruction" "augments" "Roped" #("conqueror" 0 9 (ivy-index 1)) "conquerors" #("org-protocol" 0 1 (display "org/o" full-name "/usr/share/emacs/28.0.50/lisp/org/org-protocol.el" ivy-index 2) 1 12 (full-name "/usr/share/emacs/28.0.50/lisp/org/org-protocol.el" ivy-index 2)) #("org-proto" 0 9 (ivy-index 1)) #("doom modeline" 0 13 (ivy-index 0)) "doom-modeline" #("un" 0 2 (ivy-index 0)) "understanding" #("scru" 0 4 (ivy-index 0)) "scrutiny" #("the" 0 3 (ivy-index 0)) "BS" "Telecast" #("Purposeful" 0 10 (ivy-index 0)) #("Philosophy" 0 10 (ivy-index 0)) "upstart" #("protocol" 0 8 (ivy-index 4)) "org-roam-protocol" #("stc" 0 3 (ivy-index 1)) "sudo timeshift --create --comment \"After a lot of work on Minecraft and QMK keymap\"" #("sudo timeshift --create --comment \"After learning about student finances\"" 0 73 (ivy-index 1)) #("sudo timeshift --create --comment \"After successfully starting stow dotfile management\"" 0 87 (ivy-index 0)) #("s" 0 1 (ivy-index 0)) #("stow zsh" 0 8 (ivy-index 2)) "stow -Rv zsh" "qmk flash -kb kbdfans/kbd4x -km my-programmed-keymap" #("qmk" 0 3 (ivy-index 1)) "qmk flash -kb kbdfans/kbd4x -km my-programmed-keymap" #("sudo timeshift --create --comment \"After a lot of work on Minecraft and QMK keymap\"" 0 83 (ivy-index 0)) #("o" 0 1 (ivy-index 0)) #("org-transclusion" 0 16 (ivy-index 1 full-name "/home/krisbalintona/main-emacs/straight/build/org-transclusion/org-transclusion.el")) #("transclus" 0 9 (ivy-index 1)) "org-transclusion-autoloads" #("sudo timeshift --create --comment \"After adding a bit of stuff to my Emacs config\"" 0 82 (ivy-index 76)) #("sudo timeshift --create --comment \"After setting and messing around in virtualbox VM\"" 0 85 (ivy-index 77)) #("time" 0 4 (ivy-index 13)) #("unpackaged/org-refile-to-datetree-using-ts-in-entry" 0 51 (ivy-index 0 idx 0)) #("sudo timeshift --create --comment \"Before class\"" 0 48 (ivy-index 0)) #("rc.lua" 0 6 (ivy-index 0)) "/home/krisbalintona/.config/awesome/rc.lua" #("lua" 0 3 (ivy-index 1)) #("lua-mode" 0 8 (ivy-index 1)) "lua-mode-autoloads" #("smtpmail-queue-counter" 0 22 (idx 0 ivy-index 0)) #("sudo timeshift --create --comment \"After class\"" 0 47 (ivy-index 1)) #("ti" 0 2 (ivy-index 0)) #("timeshi" 0 7 (ivy-index 0)) #("message-header-cc" 0 17 (ivy-index 0 idx 0)) #("stimeshi" 0 8 (ivy-index 0))))
(setq counsel-org-goto-history '(#("Test" 0 4 (ivy-index 1 idx 1 fontified nil face "counsel-outline-1")) #("Org-roam-server" 0 15 (face "counsel-outline-1" fontified nil idx 2 ivy-index 2)) #("Org-roam" 0 8 (face "counsel-outline-1" fontified nil idx 0 ivy-index 0))))
(setq counsel-apropos-history '(#("org agenda skip function" 0 24 (ivy-index 1)) "org-agenda-skip-function"))
(setq helm-occur-history '("kbd"))
(setq org-tags-history '("ATTACH" "ATTACH" "brownconnect" "brownconnect" "brownconnect" "brownconnect" "c_writing" "noexport" "video" "github" "book" "interview" "video" "article" "website" "book" "BOOK" "journal_article" "book" "journal_article" "book" "PACKAGE" "PROJECT" "TOP" "PROJECT" "TOP" "PROJECT" "TOP" "PROJECT" "URGENT" "TOP" "URGENT" "DEMANDING" "URGENT" "TOP" "TRANSITORY" "DEMANDING" "BACKGROUND" "DEMANDING" "TOP" "DEMANDING" "TRANSITORY" "DEMANDING" "TOP" "BACKGROUND" "DEMANDING" "BACKGROUND" "TOP" "DEMANDING" "URGENT" "TOP" "BACKGROUND" "DEMANDING" "BACKGROUND" "DEMANDING" "URGENT" "BACKGROUND" "DEMANDING" "TRANSITORY" "DEMANDING" "BACKGROUND" "DEMANDING" "BACKGROUND" "TRANSITORY" "BACKGROUND" "URGENT" "TOP" "URGENT" "TOP" "BACKGROUND" "TRANSITORY" "BACKGROUND" "TRANSITORY" "connection" "DEMANDING" "connection" "BACKGROUND" "DEMANDING" "TRANSITORY" "BACKGROUND" "TRANSITORY" "BACKGROUND" "DEMANDING" "BACKGROUND" "TRANSITORY" "BACKGROUND" "URGENT" "TOP" "URGENT" "DEMANDING" "TOP" "TRANSITORY" "TOP" "TRANSITORY" "URGENT" "TOP" "URGENT" "PROJECT" "URGENT" "BACKGROUND" "TOP" "sharp" "PROJECT" "URGENT" "BACKGROUND" "DEMANDING"))
(setq selectrum-swiper-history '(#("** PROG [#D] Configure ledger-mode and start using it [0/0]                                                                                                                                               :PROJECT:" 0 1 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 1 2 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 2 3 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 3 7 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 7 8 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 8 12 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" font-lock-fontified t display "🏃" fontified nil) 12 54 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 54 59 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 59 202 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "Emacs" fontified nil) 202 210 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "Emacs" fontified nil) 210 211 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "Emacs" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil)) #("* TODO [#A] Build my inklings" 0 1 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 composition (0 1 [9885]) face (org-superstar-header-bullet org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" org-category "habits" fontified t) 1 2 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face org-level-1 org-category "habits" org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified t wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "") 2 6 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face ((:foreground "orange" :underline t) org-level-1) org-category "habits" org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified t wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "") 6 7 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face org-level-1 org-category "habits" org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified t wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "") 7 11 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face (org-priority org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" org-category "habits" font-lock-fontified t display "💀" fontified t) 11 29 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face org-level-1 org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" org-category "habits" fontified t)) #("    :straight (org-ql :type git :host github :repo \"alphapapa/org-ql\")" 0 4 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 13 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 13 14 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 14 15 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 15 21 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 22 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 22 27 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 27 32 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 37 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 45 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 45 50 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 50 51 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 51 69 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 69 70 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("                                    (:name \"Projects without tasks\" :not (:children todo))" 0 36 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 36 37 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (rainbow-delimiters-depth-8-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 42 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (font-lock-builtin-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 42 43 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 43 67 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 67 68 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 68 72 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (font-lock-builtin-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 72 73 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 73 74 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (rainbow-delimiters-depth-9-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 74 83 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (font-lock-builtin-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 83 88 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 88 89 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (rainbow-delimiters-depth-9-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 89 90 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (rainbow-delimiters-depth-8-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("                                ((org-ql-block-header \"Projects without any tasks\")" 0 32 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 33 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (rainbow-delimiters-depth-5-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 33 34 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (rainbow-delimiters-depth-6-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 34 54 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 54 82 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 82 83 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (rainbow-delimiters-depth-6-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("                                      (tags-local \"PROJECT\")" 0 38 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 38 39 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (rainbow-delimiters-depth-6-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 39 50 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 50 59 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 59 60 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (rainbow-delimiters-depth-6-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("** Savehist" 0 1 (selectrum-candidate-display-prefix #("L659: " 0 6 (face completions-annotations)) line-num 659 org-category "base-config" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-hide fontified t) 1 2 (selectrum-candidate-display-prefix #("L659: " 0 6 (face completions-annotations)) line-num 659 org-category "base-config" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (selectrum-candidate-display-prefix #("L659: " 0 6 (face completions-annotations)) line-num 659 org-category "base-config" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 3 11 (selectrum-candidate-display-prefix #("L659: " 0 6 (face completions-annotations)) line-num 659 org-category "base-config" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t)) #("** Doom-modeline" 0 1 (selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)) line-num 126 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-hide fontified t) 1 2 (selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)) line-num 126 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)) line-num 126 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 3 16 (selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)) line-num 126 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t)) #("** Chapter 15 - Concerning things for which men, and especially princes, are praised or blamed :sharp:" 0 1 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 1 2 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-superstar-header-bullet org-level-2) composition (4 1 [9679]) line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 2 3 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 3 95 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 95 101 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-tag org-level-2) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 101 102 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-tag org-level-2) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations)))) #("  - The books are thematic around Florence's \"remarkable party division, which, unlike the divisions in ancient Rome, kept the city weak and corrupt.\"" 0 2 (fontified nil org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 88 selectrum-candidate-display-prefix #("L088: " 0 6 (face completions-annotations))) 2 3 (fontified nil org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 88 selectrum-candidate-display-prefix #("L088: " 0 6 (face completions-annotations))) 3 150 (fontified nil org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 88 selectrum-candidate-display-prefix #("L088: " 0 6 (face completions-annotations)))) #("    (flycheck-standard-error-navigation t) ; Use standard M-g n/p error navigation keybindings" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 5 29 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 29 41 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 41 42 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 42 43 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 43 45 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (font-lock-comment-delimiter-face org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 45 94 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (font-lock-comment-face org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations)))) #("    (flycheck-check-syntax-automatically '(save mode-enabled idle-buffer-switch)) ; When to check" 0 4 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 4 5 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 5 41 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 41 42 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 42 43 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 43 79 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 79 80 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 80 81 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 81 82 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 82 84 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 84 97 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations)))) #("     \"TAB\" #'company-complete-selection" 0 5 (selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations)) line-num 39 org-category "completion-frameworks" wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 5 10 (selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations)) line-num 39 org-category "completion-frameworks" wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 10 39 (selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations)) line-num 39 org-category "completion-frameworks" wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) #("- State \"DONE\"       from \"TODO\"       [2020-11-26 Thu 01:38]" 0 1 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 face org-superstar-item composition (5 1 [8211]) fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 2 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 9 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 9 13 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 13 27 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 27 31 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t org-category "habits") 31 39 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 60 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 60 61 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) #("- State \"DONE\"       from \"TODO\"       [2020-11-25 Thu 01:38]" 0 1 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-superstar-item composition (5 1 [8211]) fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 2 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 9 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 9 13 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 13 27 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 27 31 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t org-category "habits") 31 39 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 49 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 49 50 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 50 60 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 60 61 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) #("- State \"DONE\"       from \"TODO\"       [2020-11-26 Thu 01:38]" 0 1 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-superstar-item composition (5 1 [8211]) fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 2 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 9 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 9 13 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 13 27 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 27 31 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t org-category "habits") 31 39 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 60 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 60 61 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) #("** Lua-mode" 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "programming" line-num 377 selectrum-candidate-display-prefix #("L377: " 0 6 (face completions-annotations))) 1 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "programming" line-num 377 selectrum-candidate-display-prefix #("L377: " 0 6 (face completions-annotations))) 2 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "programming" line-num 377 selectrum-candidate-display-prefix #("L377: " 0 6 (face completions-annotations))) 3 11 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "programming" line-num 377 selectrum-candidate-display-prefix #("L377: " 0 6 (face completions-annotations)))) #("\3766983\377  Brown President Christin…         Brown’s financial stewardship in Fiscal Year 2020                                   11/19/2020    Brown        " 0 6 (invisible t docid 6983 msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 6 8 (msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 8 34 (face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 34 36 (help-echo "(seen)" face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 36 127 (face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 127 137 (help-echo "Thu 19 Nov 2020 10:05:25 AM CST" face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 137 154 (face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations)))) #("** TODO Watch Treasure Planet with Winnie [0/0]                                                :Regular:" 0 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 3 7 (fontified nil face ((:foreground "orange" :underline t) org-level-1) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 7 41 (fontified nil face org-level-1 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 41 42 (fontified nil face org-level-1 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 42 95 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 95 103 (fontified nil face (org-tag org-level-1) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 103 104 (fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face (org-tag org-level-1) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations)))) #("               '(\"fe\" \"Entertainment time?\"" 0 15 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 15 16 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (highlight-quoted-quote org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 16 17 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 17 21 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 21 22 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (lisp-extra-font-lock-quoted org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 22 43 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations)))) #("*** Nvim" 0 2 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 face org-hide org-category "system-wide-package-groups" wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 composition (1 1 [9673]) face (org-superstar-header-bullet org-level-3) org-category "system-wide-package-groups" wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 face org-level-3 org-category "system-wide-package-groups" wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 8 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 face org-level-3 org-category "system-wide-package-groups" wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) #("mylauncher = awful.widget.launcher({ image = beautiful.awesome_icon," 0 34 (selectrum-candidate-display-prefix #("L098: " 0 6 (face completions-annotations)) line-num 98 fontified t) 34 35 (selectrum-candidate-display-prefix #("L098: " 0 6 (face completions-annotations)) line-num 98 face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (selectrum-candidate-display-prefix #("L098: " 0 6 (face completions-annotations)) line-num 98 face (rainbow-delimiters-depth-2-face) fontified t) 36 68 (selectrum-candidate-display-prefix #("L098: " 0 6 (face completions-annotations)) line-num 98 fontified t)) #("beautiful.init(gears.filesystem.get_themes_dir() .. \"default/theme.lua\")" 0 14 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 fontified t) 14 15 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face (rainbow-delimiters-depth-1-face) fontified t) 15 46 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 fontified t) 46 47 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face (rainbow-delimiters-depth-2-face) fontified t) 48 52 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 fontified t) 52 71 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face font-lock-string-face fontified t) 71 72 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face (rainbow-delimiters-depth-1-face) fontified t)) #("** Doom-modeline" 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide org-category "base-config" line-num 126 selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations))) 1 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-superstar-header-bullet org-level-2) composition ((1 . 9679)) org-category "base-config" line-num 126 selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations))) 2 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 org-category "base-config" line-num 126 selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations))) 3 16 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 org-category "base-config" line-num 126 selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)))) #("                                      (not (tags \"PROJECT\"))" 0 38 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 38 39 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 39 43 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 43 44 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 44 49 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 49 58 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 58 59 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 59 60 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations)))) #("               '(\"p\" \"Personal tasks\"" 0 16 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations))) 16 17 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations))) 17 20 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations))) 20 21 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations))) 21 37 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)))) #("                               (:tag \"CHUNK\")" 0 31 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 32 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (rainbow-delimiters-depth-8-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 36 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (font-lock-builtin-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 36 37 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 44 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 44 45 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (rainbow-delimiters-depth-8-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("   [remap org-agenda-archive] ' ; Archive" 0 3 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 3 4 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 28 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 28 29 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (highlight-quoted-quote org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 32 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 32 33 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-delimiter-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 33 34 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-delimiter-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 34 35 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 35 36 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 36 37 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 38 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 38 39 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 39 40 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 40 41 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("  (defun kb/org-refile-to-reverse-datetree-archive ()" 0 2 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 2 3 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 3 8 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 8 9 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 9 50 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 50 51 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 51 52 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 52 53 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) #("   [remap org-agenda-archive] '(lambda () ((interactive)" 0 3 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 3 4 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 28 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 28 29 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (highlight-quoted-quote org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 32 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 39 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 39 40 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 40 41 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 41 42 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 42 43 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 43 44 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-4-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 44 55 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (font-lock-keyword-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 55 56 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-4-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("   [remap org-agenda-archive] '(lambda () (unpackaged/org-refile-to-datetree-using-ts-in-entry 'earliest (expand-file-name \"archive.org\" kb/agenda-dir) t))" 0 3 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 3 4 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 28 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 28 29 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (highlight-quoted-quote org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "org-agenda") 31 32 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 32 33 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 33 34 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 34 35 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 35 36 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 36 37 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 37 38 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 38 39 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 39 40 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 40 41 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 41 42 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 42 43 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 43 93 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 93 94 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t rear-nonsticky t) 94 95 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 95 96 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (highlight-quoted-quote org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 96 97 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 97 98 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 98 99 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 99 101 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 101 102 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 102 103 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 103 104 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 104 105 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 105 106 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-4-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 106 107 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 107 108 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 108 109 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 109 110 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 110 111 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 111 112 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 112 113 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 113 114 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 114 115 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 115 116 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 116 117 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 117 122 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 122 123 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 123 124 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 124 125 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 125 126 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 126 127 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 127 128 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 128 129 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 129 130 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 130 131 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 131 132 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 132 133 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 133 135 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 135 136 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t rear-nonsticky t) 136 137 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 137 150 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 150 151 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-4-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 151 152 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 152 153 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 153 154 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 154 155 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("  (defun kb/org-refile-to-reverse-datetree-archive ()" 0 2 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 2 3 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 3 8 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (font-lock-keyword-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 8 9 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 9 50 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (font-lock-function-name-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 50 51 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 51 52 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 52 53 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("At every stage of an interview (contacted to interviewed to published) I should input pertinent information into [[https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0][this spreadsheet]]." 0 113 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t) 113 222 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 222 223 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 223 235 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 235 238 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 238 239 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 239 240 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 240 241 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 241 242 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t)) #("** Send a post-interview email" 0 1 (selectrum-candidate-display-prefix #("L110: " 0 6 (face completions-annotations)) line-num 110 face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t) 1 2 (selectrum-candidate-display-prefix #("L110: " 0 6 (face completions-annotations)) line-num 110 composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t) 2 3 (selectrum-candidate-display-prefix #("L110: " 0 6 (face completions-annotations)) line-num 110 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t) 3 30 (selectrum-candidate-display-prefix #("L110: " 0 6 (face completions-annotations)) line-num 110 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t)) #("** PROG Replace rofi with dmenu [0/0]                              :PROJECT:" 0 3 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 3 7 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" face ((:foreground "turquoise" :underline t) org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 7 8 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" face org-level-1 org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 8 31 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" face org-level-1 org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 31 32 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" face org-level-1 org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 32 67 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" fontified nil) 67 75 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "inbox" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 75 76 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "inbox" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil)) #("  title = {The {{Prince}}}," 0 27 (selectrum-candidate-display-prefix #("L161: " 0 6 (face completions-annotations)) line-num 161 fontified nil)) #("* Better-jumper" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-superstar-header-bullet org-level-1) composition (0 1 [9885]) org-category "qol-packages" line-num 313 selectrum-candidate-display-prefix #("L313: " 0 6 (face completions-annotations))) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 org-category "qol-packages" line-num 313 selectrum-candidate-display-prefix #("L313: " 0 6 (face completions-annotations))) 2 15 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 org-category "qol-packages" line-num 313 selectrum-candidate-display-prefix #("L313: " 0 6 (face completions-annotations)))) #("(org-babel-load-file (concat user-emacs-directory \"configs/\" \"org-agenda.org\"))" 0 1 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face (rainbow-delimiters-depth-1-face) fontified t) 1 21 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 fontified t) 21 22 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face (rainbow-delimiters-depth-2-face) fontified t) 22 50 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 fontified t) 50 60 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face font-lock-string-face fontified t) 60 61 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 fontified t) 61 77 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face font-lock-string-face fontified t) 77 78 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face (rainbow-delimiters-depth-2-face) fontified t) 78 79 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face (rainbow-delimiters-depth-1-face) fontified t)) #("               '(\"xr\" \"All trivial and to-refile tasks\"" 0 15 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 15 16 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (highlight-quoted-quote org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 16 17 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 17 21 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 22 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 22 55 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("  -- Add titlebars to normal clients and dialogs" 0 48 (line-num 491 selectrum-candidate-display-prefix #("L491: " 0 6 (face completions-annotations)))) #("terminal = \"xterm\"" 0 11 (fontified t line-num 51 selectrum-candidate-display-prefix #("L051: " 0 6 (face completions-annotations))) 11 18 (fontified t face font-lock-string-face line-num 51 selectrum-candidate-display-prefix #("L051: " 0 6 (face completions-annotations)))) #("# Default inner/outer gaps" 0 2 (fontified t face font-lock-comment-delimiter-face line-num 155 selectrum-candidate-display-prefix #("L155: " 0 6 (face completions-annotations))) 2 26 (fontified t face font-lock-comment-face line-num 155 selectrum-candidate-display-prefix #("L155: " 0 6 (face completions-annotations)))) #("awful.layout.layouts = {" 0 23 (fontified t line-num 63 selectrum-candidate-display-prefix #("L063: " 0 6 (face completions-annotations))) 23 24 (fontified t face (rainbow-delimiters-depth-1-face) line-num 63 selectrum-candidate-display-prefix #("L063: " 0 6 (face completions-annotations)))) #("exec_always               picom -bc --backend xrender" 0 11 (fontified t face font-lock-variable-name-face line-num 229 selectrum-candidate-display-prefix #("L229: " 0 6 (face completions-annotations))) 11 53 (fontified t line-num 229 selectrum-candidate-display-prefix #("L229: " 0 6 (face completions-annotations)))) #("** PROG [#A] Figure out how I'm going to pay for college           :PROJECT:" 0 1 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 1 2 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 2 3 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 3 7 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face ((:foreground "turquoise" :underline t) org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 7 8 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 8 12 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face (org-priority org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" font-lock-fontified t display "💀" fontified t) 12 67 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 67 75 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 75 76 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) #("*** PROG Figure out loans [[https://www.brown.edu/about/administration/loans/apply-loans][Loan Process - Application, Requirements, Disbursement | Loan Office]] " 0 2 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-hide org-stats 75 org-category "admin" fontified t) 2 3 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) composition (1 1 [9673]) face (org-superstar-header-bullet org-level-3) org-stats 75 org-category "admin" fontified t) 3 4 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 org-stats 75 org-category "admin" fontified t) 4 8 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face ((:foreground "turquoise" :underline t) org-level-3) org-stats 75 org-category "admin" fontified t) 8 26 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 org-stats 75 org-category "admin" fontified t) 26 89 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-3 org-stats 75 org-category "admin" htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 89 90 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-3 org-stats 75 org-category "admin" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 90 157 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-3) org-stats 75 org-category "admin" htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 157 158 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-3) org-stats 75 org-category "admin" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 158 159 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-3 org-stats 75 org-category "admin" htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 159 160 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-3 org-stats 75 org-category "admin" htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 160 161 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 org-stats 75 org-category "admin" fontified t)) #("                 '(\"xr\" \"All trivial and to-refile tasks\"" 0 17 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 17 18 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (highlight-quoted-quote org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 18 19 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 19 23 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 23 24 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (lisp-extra-font-lock-quoted org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 24 57 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)))) #("** WAITING [#C] Waive SHIP (health insurance) with mom [[https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7][Gallagher Student Health and Special Risk]] [0/0] :SCHOOL:" 0 1 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 1 2 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 2 3 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 3 10 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 10 11 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 11 15 (fontified nil display "🌟" font-lock-fontified t org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 15 55 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 55 168 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 168 169 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 169 209 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 209 210 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 210 211 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 211 212 (fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 212 213 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 213 218 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 218 219 (fontified nil org-category "admin" org-stats 0 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 219 226 (fontified nil org-category "admin" org-stats 0 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 226 227 (fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "admin" org-stats 0 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations)))) #("+ [[file:Oct212020-194244.org][The Zettelkasten Method]]" 0 1 (fontified t org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (2 1 [10148]) face org-superstar-item line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 1 2 (fontified t org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 2 30 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 30 31 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 31 53 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face org-roam-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 53 54 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face org-roam-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 54 55 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 55 56 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations)))) #("    * [[file:Oct102020-0028.org][Universities of the Middle Ages encouraged free thought]]" 0 4 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 4 5 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" composition (3 1 [8226]) face org-superstar-item line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 5 6 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 6 32 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 32 33 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 33 87 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" face org-roam-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 87 88 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" face org-roam-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 88 89 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 89 90 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations)))) #("*** Habits" 0 2 (selectrum-candidate-display-prefix #("L633: " 0 6 (face completions-annotations)) line-num 633 face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (selectrum-candidate-display-prefix #("L633: " 0 6 (face completions-annotations)) line-num 633 composition (1 1 [9673]) face (org-superstar-header-bullet org-level-3) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (selectrum-candidate-display-prefix #("L633: " 0 6 (face completions-annotations)) line-num 633 face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 10 (selectrum-candidate-display-prefix #("L633: " 0 6 (face completions-annotations)) line-num 633 face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) #("** Habits" 0 1 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 3 9 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) #("        '((sequence \"TODO(t)\" \"HABIT(H)\" \"WAITING(w!)\" \"NEXT(n)\" \"PROG(p)\" \"|\" \"DONE(d!/@)\")" 0 9 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 9 10 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 10 11 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 11 20 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 20 29 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 40 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 40 41 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 41 54 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 54 55 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 55 64 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 64 65 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 65 74 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 74 75 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 75 78 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 78 79 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 79 91 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 91 92 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("                               (:tag \"URGENT\")" 0 31 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 32 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (rainbow-delimiters-depth-8-face org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 36 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 36 37 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 45 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 45 46 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (rainbow-delimiters-depth-8-face org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("               '(\"p\" \"Personal tasks\"" 0 16 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 16 17 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 17 20 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 20 21 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 37 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("          `((\"Current projects\"" 0 11 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 11 12 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 12 13 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 13 31 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("             :title \"Current projects\"" 0 13 (selectrum-candidate-display-prefix #("L257: " 0 6 (face completions-annotations)) line-num 257 face (org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 13 19 (selectrum-candidate-display-prefix #("L257: " 0 6 (face completions-annotations)) line-num 257 face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 19 20 (selectrum-candidate-display-prefix #("L257: " 0 6 (face completions-annotations)) line-num 257 face (org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 20 38 (selectrum-candidate-display-prefix #("L257: " 0 6 (face completions-annotations)) line-num 257 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("          `((\"Current projects\"" 0 11 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 11 12 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 12 13 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 13 31 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("+ Became chancery (an office of public records or a public archives) of Florance in 1498 (?) at the age of 29" 0 1 (selectrum-candidate-display-prefix #("L42: " 0 5 (face completions-annotations)) line-num 42 face org-superstar-item composition (2 1 [10148]) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" fontified t) 1 109 (selectrum-candidate-display-prefix #("L42: " 0 5 (face completions-annotations)) line-num 42 wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" fontified t)) #("** Habits" 0 1 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 1 2 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 2 3 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 3 9 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) #("  (defun kb/org-agenda-process-inbox-item ()" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 3 8 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 8 9 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 9 41 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-function-name-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 41 42 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 42 43 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 43 44 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations)))) #("@book{capponiUnlikelyPrinceLife2010," 0 5 (fontified t face font-lock-function-name-face line-num 39 selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations))) 5 6 (fontified t line-num 39 selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations))) 6 35 (fontified t face font-lock-constant-face line-num 39 selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations))) 35 36 (fontified t line-num 39 selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations)))) #("  publisher = {{Da Capo Press}}," 0 2 (fontified t line-num 43 selectrum-candidate-display-prefix #("L043: " 0 6 (face completions-annotations))) 2 11 (fontified t face font-lock-variable-name-face line-num 43 selectrum-candidate-display-prefix #("L043: " 0 6 (face completions-annotations))) 11 32 (fontified t line-num 43 selectrum-candidate-display-prefix #("L043: " 0 6 (face completions-annotations)))) #("             :sort (deadline scheduled todo priority)" 0 13 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 13 18 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 18 19 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 19 20 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-5-face org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 20 52 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 52 53 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-5-face org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations)))) #("     '((counsel-esh-history . ivy--regex-fuzzy) ; Fuzzy findings for counsel-esh-history" 0 6 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 6 7 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 7 8 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 8 46 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 46 47 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 47 48 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 48 50 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 50 88 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations)))) #("** PROG [#A] Express my concerns to Amelia [0/0]" 0 1 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 1 2 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-superstar-header-bullet org-level-2) composition (4 1 [9679]) line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 2 3 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 3 7 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face ((:foreground "turquoise" :underline t) org-level-2) line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 7 8 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 8 12 (display "💀" font-lock-fontified t org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-priority org-level-2) line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 12 43 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 43 48 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-checkbox-statistics-done org-level-2) line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations)))) #("(org-babel-load-file (concat user-emacs-directory \"configs/\" \"org-agenda.org\"))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face) line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 1 21 (fontified t line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 21 22 (fontified t face (rainbow-delimiters-depth-2-face) line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 22 50 (fontified t line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 50 60 (fontified t face font-lock-string-face line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 60 61 (fontified t line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 61 77 (fontified t face font-lock-string-face line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 77 78 (fontified t face (rainbow-delimiters-depth-2-face) line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 78 79 (fontified t face (rainbow-delimiters-depth-1-face) line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)))) #("@book{baconNovumOrganum," 0 5 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 face font-lock-function-name-face fontified t) 5 6 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 fontified t) 6 23 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 face font-lock-constant-face fontified t) 23 24 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 fontified t)) #("  (add-hook 'mu4e-compose-mode-hook 'org-mu4e-compose-org-mode)" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 195 selectrum-candidate-display-prefix #("L195: " 0 6 (face completions-annotations))) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 195 selectrum-candidate-display-prefix #("L195: " 0 6 (face completions-annotations))) 3 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 195 selectrum-candidate-display-prefix #("L195: " 0 6 (face completions-annotations))) 62 63 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 195 selectrum-candidate-display-prefix #("L195: " 0 6 (face completions-annotations)))) #("  (require 'org-mu4e)" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 3 10 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 10 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 12 20 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 20 21 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations)))) #("While animals are \"intelligent\", they cannot learn since they do not have the senses ([[file:Oct102020-1500.org][Aristotle# Our senses give us the ability to learn]])" 0 59 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 59 86 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 86 112 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 112 113 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 113 162 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-roam-link htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 162 163 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-roam-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 163 164 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 164 165 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 165 166 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) #("TL;DR: Art is considered closer to knowledge than experience is because underlying causes are understood (theory) ([[file:Oct102020-1504.org][Aristotle claimed \"art\" is closer to knowledge than personal experience]])" 0 11 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 11 24 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 face (writegood-passive-voice-face) org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 24 90 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 90 104 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 face (writegood-passive-voice-face) org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 104 115 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 115 141 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 141 142 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 142 212 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-roam-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 212 213 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-roam-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 213 214 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 214 215 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 215 216 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) #("    (add-to-list 'company-frontends 'company-tng-frontend) ; Company-tng to use tab to cycle through suggestions" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 5 57 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 57 58 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 58 59 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 59 61 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 61 112 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)))) #("    (org-ref-default-bibliography (concat kb/roam-dir \"bibliographic/master-lib.bib\"))" 0 4 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 5 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 5 34 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 34 35 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 35 54 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 54 84 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 84 85 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 85 86 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("  (use-package ivy-bibtex" 0 2 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 2 3 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 3 14 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 14 15 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 15 25 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil)) #("@report{brownuniversitysteeringcommitteeonslaveryandjusticeSlaveryJustice2006," 0 7 (fontified t face font-lock-function-name-face line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 7 8 (fontified t line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 8 77 (fontified t face font-lock-constant-face line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 77 78 (fontified t line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)))) #("@book{sanchesThatNothingKnown," 0 5 (fontified t face font-lock-function-name-face line-num 205 selectrum-candidate-display-prefix #("L205: " 0 6 (face completions-annotations))) 5 6 (fontified t line-num 205 selectrum-candidate-display-prefix #("L205: " 0 6 (face completions-annotations))) 6 29 (fontified t face font-lock-constant-face line-num 205 selectrum-candidate-display-prefix #("L205: " 0 6 (face completions-annotations))) 29 30 (fontified t line-num 205 selectrum-candidate-display-prefix #("L205: " 0 6 (face completions-annotations)))) #("        :head \"#+TITLE: ${citekey}: ${title}\\n#+ROAM_KEY: ${ref}\\n#+ROAM_TAGS: bib_notes\\n- CREATED :: %T\\n- Time-stamp: <>\\n- KEYWORDS :: ${keywords}\\n- TAGS :: \\n- LINKS :: \\n\\n---\\n\\n* TODO Process ${title} :WAITING:\\n:PROPERTIES:\\n:CATEGORY: bib_notes\\n:ARCHIVE: %(concat kb/agenda-dir \\\"archive.org::datetree/* Bib Notes\\\")\\n:END:\\n\\n* ${title} Notes\\n:PROPERTIES:\\n:Custom_ID: ${citekey}\\n:URL: ${url}\\n:AUTHOR: ${author-or-editor}\\n:NOTER_DOCUMENT: %(orb-process-file-field \\\"${citekey}\\\")\\n:NOTER_PAGE:\\n:END:\\n\\n\"" 0 8 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 8 13 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 13 14 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 14 522 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations)))) #("** PROG [#A] Fill out housing questionnaire [[https://brown.starrezhousing.com/StarRezPortal][Home]] :ASSIGNMENT:" 0 1 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 1 2 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 2 3 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 3 7 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face ((:foreground "turquoise" :underline t) org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 7 8 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 8 12 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face (org-priority org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" font-lock-fontified t display "💀" fontified t) 12 44 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 44 93 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 93 94 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 94 97 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 97 98 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 98 99 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 99 100 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 100 101 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 101 112 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 112 113 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) #("                             ((org-agenda-overriding-header \"High-priority items without next todo keyword\")" 0 29 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 60 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 60 107 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 107 108 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("+ [[https://www.youtube.com/user/TheLinsharon/videos][Dr. Jingjing Lin - YouTube]]" 0 1 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 face org-superstar-item composition (2 1 [10148]) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" fontified t) 1 2 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" fontified t) 2 53 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 53 54 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 54 79 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 79 80 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 80 81 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 81 82 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) #("+ Zotero (with zotfile and better-bibtex)" 0 1 (fontified t org-category "system-wide-package-groups" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (2 1 [10148]) face org-superstar-item line-num 83 selectrum-candidate-display-prefix #("L83: " 0 5 (face completions-annotations))) 1 41 (fontified t org-category "system-wide-package-groups" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-num 83 selectrum-candidate-display-prefix #("L83: " 0 5 (face completions-annotations)))) #("               '(\"xr\" \"All trivial and to-refile tasks\"" 0 15 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 15 16 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (highlight-quoted-quote org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 16 17 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 17 21 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 22 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 22 55 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("       \"* TODO %y - %t\\n :PROPERTIES:\\n  :CUSTOM_ID: %k\\n  :NOTER_DOCUMENT: %F\\n :ROAM_KEY: cite:%k\\n  :AUTHOR: %9a\\n  :JOURNAL: %j\\n  :YEAR: %y\\n  :VOLUME: %v\\n  :PAGES: %p\\n  :DOI: %D\\n  :URL: %U\\n :END:\\n\\n\")" 0 7 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 7 92 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 92 100 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 . org-ref-open-pdf-at-point) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "cite:%k\\n") help-echo nil fontified t) 100 101 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 . org-ref-open-pdf-at-point) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "cite:%k\\n") help-echo nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 101 210 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 210 211 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) #("                 '(\"p\" \"Current tasks\"" 0 18 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations))) 18 19 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations))) 19 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations))) 22 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations))) 23 38 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations)))) #("                            '((:file-path \"habits.org\")" 0 5 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 5 23 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 23 29 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 29 30 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 30 31 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (rainbow-delimiters-depth-8-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 31 32 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 32 33 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 33 36 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 36 37 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 37 38 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 38 39 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 39 40 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 40 41 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 41 42 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 42 53 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 53 54 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 54 55 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (rainbow-delimiters-depth-8-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)))) #("               '(\"xr\" \"All trivial and to-refile tasks\"" 0 16 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations))) 16 17 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations))) 17 21 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations))) 21 22 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations))) 22 55 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations)))) #("@misc{caminhaLetterPeroVaz," 0 5 (fontified t face font-lock-function-name-face line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 5 6 (fontified t line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 6 26 (fontified t face font-lock-constant-face line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 26 27 (fontified t line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)))) #("#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:t todo:t |:t" 0 60 (line-prefix "" wrap-prefix "" fontified t font-lock-fontified t face org-meta-line line-num 8 selectrum-candidate-display-prefix #("L08: " 0 5 (face completions-annotations)))) #("+ =Noto Sans=" 0 1 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) face org-superstar-item composition (2 1 [10148]) fontified t) 1 2 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 3 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) invisible org-link org-emphasis t font-lock-multiline t fontified t) 3 12 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) org-emphasis t font-lock-multiline t face (org-verbatim) fontified t) 12 13 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) invisible org-link org-emphasis t font-lock-multiline t fontified t)) #("The \"lecentia docendi\" (license to teach). This was how you got invited into the college. You had to show some sort of academic attainment" 0 138 (selectrum-candidate-display-prefix #("L095: " 0 6 (face completions-annotations)) line-num 95 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified nil)) #("[[file:Oct092020-2325.org][The Middle East in the Middle Ages contributed to technology, not science]]" 0 26 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 26 27 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 27 99 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 99 100 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 100 101 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 101 102 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil)) #("*** Set default fonts" 0 2 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 4 selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations))) 2 3 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 4 selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations))) 3 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 4 selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations))) 4 21 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 4 selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations)))) #("                       (selectrum-minibuffer-bindings" 0 23 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) line-num 676 selectrum-candidate-display-prefix #("L676: " 0 6 (face completions-annotations))) 23 24 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) line-num 676 selectrum-candidate-display-prefix #("L676: " 0 6 (face completions-annotations))) 24 53 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) line-num 676 selectrum-candidate-display-prefix #("L676: " 0 6 (face completions-annotations)))) #("** Company-box" 0 1 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-hide fontified t) 1 2 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) composition (1 1 [9679]) face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 3 14 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t)) #("    (company-require-match 'company-explicit-action-p)" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 27 selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations))) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 27 selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations))) 5 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 27 selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations))) 53 54 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 27 selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)))) #("    (company-require-match 'never)" 0 4 (selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations)) line-num 26 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 5 (selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations)) line-num 26 face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 5 33 (selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations)) line-num 26 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 33 34 (selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations)) line-num 26 face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t))))
(setq ivy-bibtex-history '("🖇 White, Landeg The Lusiads, Canto V book whiteLusiadsCanto =has-pdf= " #("🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " 0 100 (idx 0 ivy-index 0)) #("🖋 🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= =has-note=" 0 112 (idx 0 ivy-index 0)) "🖋 🖇 2001 Graham, A. C. and Zhuangzi Chuang-Tzu: The Inner Chapters book grahamChuangtzuInnerChapters2001 =has-pdf= =has-note=" "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" #("kohn" 0 4 (ivy-index 0)) "1993 Kohn, Livia The Taoist Experience: An Anthology book kohnTaoistExperienceAnthology1993  " #("yao" 0 3 (ivy-index 0)) #("little" 0 6 (ivy-index 0)) "🖋 2014 Littlejohn, Ronnie L Daoism: An Introduction book littlejohnDaoismIntroduction2014  =has-note=" "🖋 🖇 2001 Graham, A. C. and Zhuangzi Chuang-Tzu: The Inner Chapters book grahamChuangtzuInnerChapters2001 =has-pdf= =has-note=" "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 2014 Littlejohn, Ronnie L Daoism: An Introduction book littlejohnDaoismIntroduction2014  =has-note=" #("how to" 0 6 (ivy-index 0)) "2015 Eco, Umberto and Mongiat Farina, Caterina and Farina, Geoff How to Write a Thesis book ecoHowWriteThesis2015  " #("how to write" 0 12 (ivy-index 0)) "2015 Eco, Umberto and Mongiat Farina, Caterina and Farina, Geoff How to Write a Thesis book ecoHowWriteThesis2015  " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" #("boken" 0 5 (ivy-index 0)) "1999 Bokenkamp, Stephen R. Early Daoist Scriptures book bokenkampEarlyDaoistScriptures1999  " #("boke" 0 4 (ivy-index 0)) "1999 Bokenkamp, Stephen R. Early Daoist Scriptures book bokenkampEarlyDaoistScriptures1999  " "1999 Bokenkamp, Stephen R. Early Daoist Scriptures book bokenkampEarlyDaoistScriptures1999  " "1999 Bokenkamp, Stephen R. Early Daoist Scriptures book bokenkampEarlyDaoistScriptures1999  " "1999 Bokenkamp, Stephen R. Early Daoist Scriptures book bokenkampEarlyDaoistScriptures1999  " #("bo ken" 0 6 (ivy-index 1)) "1999 Bokenkamp, Stephen R. Early Daoist Scriptures book bokenkampEarlyDaoistScriptures1999  " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" #("little " 0 7 (ivy-index 0)) "🖋 2014 Littlejohn, Ronnie L Daoism: An Introduction book littlejohnDaoismIntroduction2014  =has-note=" #("make it" 0 7 (ivy-index 0)) "🖋 2014 Brown, Peter C. Make It Stick: The Science of Successful Learning book brownMakeItStick2014  =has-note=" "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" #("debary" 0 6 (ivy-index 0)) "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" #("queen" 0 5 (ivy-index 0)) "🖇 2001 Queen, Sarah A. Inventories of the Past: Rethinking the School Affiliation of the Huainanzi article queenInventoriesRethinkingSchool2001 =has-pdf= " #("liu" 0 3 (ivy-index 0)) "🖇 2015 Liu, Xiaogan Dao Companion to Daoist Philosophy book liuDaoCompanionDaoist2015b =has-pdf= " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 2014 Littlejohn, Ronnie L Daoism: An Introduction book littlejohnDaoismIntroduction2014  =has-note=" "🖋 🖇 2001 Graham, A. C. and Zhuangzi Chuang-Tzu: The Inner Chapters book grahamChuangtzuInnerChapters2001 =has-pdf= =has-note=" #("alexan" 0 6 (ivy-index 0)) "🖇 2018 Chee, Alexander How to Write an Autobiographical Novel: Essays book cheeHowWriteAutobiographical2018 =has-pdf= " #("graha" 0 5 (ivy-index 0)) "🖇 2001 Graham, A. C. and Zhuangzi Chuang-Tzu: The Inner Chapters book grahamChuangtzuInnerChapters2001 =has-pdf= " #("tell it" 0 7 (ivy-index 0)) "🖋 🖇 2019 Miller, Brenda and Paola, Suzanne and Safari, an O'Reilly Media Company Tell It Slant, Third Edition, 3rd Edition book millerTellItSlant2019 =has-pdf= =has-note=" #("graham" 0 6 (ivy-index 0)) "🖇 2001 Zhuangzi and Graham, A. C. Chuang-Tzu: The Inner Chapters book zhuangziChuangtzuInnerChapters2001 =has-pdf= " "🖇 2001 Zhuangzi and Graham, A. C. Chuang-Tz\\uu: The Inner Chapters book zhuangziChuangtzuInnerChapters2001 =has-pdf= " "🖋 🖇 2019 Miller, Brenda and Paola, Suzanne and Safari, an O'Reilly Media Company Tell It Slant, Third Edition, 3rd Edition book millerTellItSlant2019 =has-pdf= =has-note=" #("ahren" 0 5 (ivy-index 0)) "2017 Ahrens, S\\onke How to Take Smart Notes: One Simple Technique to Boost Writing, Learning and Thinking: For Students, Academics and Nonfiction Book Writers book ahrensHowTakeSmart2017  " "2014 Littlejohn, Ronnie L Daoism: An Introduction book littlejohnDaoismIntroduction2014  " "🖋 🖇 China,Civilization,Sources 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 🖇 Confucianism 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= =has-note=" "🖋 🖇 China,Civilization,Sources 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 🖇 China,Civilization,Sources 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "Cognition,Learning,Research,Study skills 2014 Brown, Peter C. Make It Stick: The Science of Successful Learning book brownMakeItStick2014  " "Cognition,Learning,Research,Study skills 2014 Brown, Peter C. Make It Stick: The Science of Successful Learning book brownMakeItStick2014  " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" #("defoort" 0 7 (ivy-index 0)) "🖋 🖇 2001 Defoort, Carine Is There Such a Thing as Chinese Philosophy? Arguments of an Implicit Debate article defoortThereSuchThing2001 =has-pdf= =has-note=" #("foort" 0 5 (ivy-index 0)) "🖋 🖇 2001 Defoort, Carine Is There Such a Thing as Chinese Philosophy? Arguments of an Implicit Debate article defoortThereSuchThing2001 =has-pdf= =has-note=" #("poetry" 0 6 (ivy-index 0)) "🖇 2014 Li, Wai-Yee Poetry and Diplomacy in the Zuozhuan article liPoetryDiplomacyZuozhuan2014 =has-pdf= " #("mille" 0 5 (ivy-index 0)) "🖇 2019 Miller, Brenda and Paola, Suzanne and Safari, an O'Reilly Media Company Tell It Slant, Third Edition, 3rd Edition book millerTellItSlant2019 =has-pdf= " #("mill" 0 4 (ivy-index 0)) "🖇 2019 Miller, Brenda and Paola, Suzanne and Safari, an O'Reilly Media Company Tell It Slant, Third Edition, 3rd Edition book millerTellItSlant2019 =has-pdf= " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖇 2014 Li, Wai-Yee Poetry and Diplomacy in the Zuozhuan article liPoetryDiplomacyZuozhuan2014 =has-pdf= " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖇 2001 Defoort, Carine Is There Such a Thing as Chinese Philosophy? Arguments of an Implicit Debate article defoortThereSuchThing2001 =has-pdf= "))
(setq counsel-git-grep-history '(#("libvterm" 0 8 (ivy-index 1)) "elisp/shell-vterm-rcp.el:13:  :ensure-system-package ((libvterm)" #(":p " 0 3 (ivy-index 0)) "elisp/early-packages-rcp.el:18:  :p" #("evil-normalize-keymaps" 0 22 (ivy-index 1)) "elisp/completion-company-rcp.el:14:         (company-mode . evil-normalize-keymaps)" #("require keybind" 0 15 (ivy-index 7)) "elisp/programming-lua-rcp.el:10:(require 'keybinds-frameworks-rcp)" "elisp/shell-eshell-rcp.el:10:(require 'keybinds-frameworks-rcp)" #("keybind require" 0 15 (ivy-index 0)) "elisp/checking-words-rcp.el:10:(require 'keybinds-frameworks-rcp)" "elisp/checking-words-rcp.el:10:(require 'keybinds-frameworks-rcp)" #("require ke" 0 10 (ivy-index 8)) "elisp/email-rcp.el:10:(require 'keybinds-frameworks-rcp)" #("embark-keymap" 0 13 (ivy-index 10)) "elisp/completion-selectrum-rcp.el:162:        (embark-keymap '((\"h\" . embark-helpful-callable-or-symbol) ; Replace default embark-describe-*" #("do list" 0 7 (ivy-index 8)) "init.el:26:    (dolist (f (directory-files base))" #("auto-sudo" 0 9 (ivy-index 0)) "configs/etc-config.org:168:* Auto-sudo-edit" #("langtool" 0 8 (ivy-index 5)) "elisp/checking-grammar-rcp.el:19:(use-package langtool" #("pdf-tools" 0 9 (ivy-index 0)) "configs/second-brain.org:326:** Pdf-tools" #("doom-snipp" 0 10 (ivy-index 1)) "elisp/programming-general-rcp.el:22:;;;;; Doom-snippets" #(":funcction" 0 10 (ivy-index 0)) "elisp/early-packages-rcp.el:22:  :funcction exec-path-from-shell-initialize" #(":function" 0 9 (ivy-index 0)) "configs/email.org:40:                 :function" #("pretty-hydra " 0 13 (ivy-index 0)) "elisp/keybinds-frameworks-rcp.el:57:;;;;; Pretty-hydra" #("exec-path" 0 9 (ivy-index 2)) "configs/qol-packages.org:432:  (use-package exec-path-from-shell" #(":requires" 0 9 (ivy-index 0)) "elisp/evil-rcp.el:80:  :requires evil-org-agenda" #("no-littering-var-directory" 0 26 (ivy-index 1)) "elisp/early-packages-rcp.el:31:  (add-to-list 'recentf-exclude no-littering-var-directory)" #("modeline font" 0 13 (ivy-index 7)) "elisp/themes-rcp.el:62:  (set-face-attribute 'mode-line nil :family kb/modeline-font :height 0.75)" #("utf" 0 3 (ivy-index 0)) "elisp/themes-rcp.el:163:UTF-8.\"" #("eyebro" 0 6 (ivy-index 0)) "configs/buffer-management.org:173:* Eyebrowse" #("pinentry" 0 8 (ivy-index 0)) "elisp/better-defaults-rcp.el:123:;;;; Pinentry (pin-entry)" #("programming-profiling-and-debug-rcp" 0 35 (ivy-index 2)) "init.el:77:(require 'programming-profiling-and-debug-rcp)" "configs/buffer-management.org:173:* Eyebrowse" #("eyebrop" 0 7 (ivy-index 0)) "configs/buffer-management.org:173:* Eyebrowse" #("display-time-mode" 0 17 (ivy-index 0)) "elisp/themes-rcp.el:259:  (display-time-mode t) ; Enable time in the mode-line" #("eyebrow" 0 7 (ivy-index 4)) "configs/buffer-management.org:173:* Eyebrowse" #("hide-modeline" 0 13 (ivy-index 0)) "configs/qol-packages.org:98:* Hide-mode-line" #("hide modeline" 0 13 (ivy-index 0)) "var/savehist.el:35:[Omitted long matching line]" #("transien" 0 8 (ivy-index 0)) "configs/qol-packages.org:453:* Transient-dwim" #("apropos" 0 7 (ivy-index 21)) "elisp/completion-selectrum-rcp.el:91:    \"ha\" '(consult-apropos :which-key \"Consult apropos\")" #("describe-variable" 0 17 (ivy-index 5)) "configs/qol-packages.org:14:    ([remap describe-variable] . helpful-variable)" #("describe" 0 8 (ivy-index 65)) "elisp/completion-ivy-rcp.el:200:    ;; \"hf\" '(counsel-describe-function :which-key \"Desc func\")" #("helpful" 0 7 (ivy-index 0)) "configs/qol-packages.org:3:* Helpful" #("\"ho\"" 0 4 (ivy-index 1)) "elisp/completion-selectrum-rcp.el:35:    \"ho\" '(describe-symbol :which-key \"Desc sym\")" #("which-key" 0 9 (ivy-index 2)) "configs/qol-packages.org:44:* Which-key" "configs/qol-packages.org:3:* Helpful" #("\"hv\"" 0 4 (ivy-index 0)) "elisp/completion-selectrum-rcp.el:34:    \"hv\" '(describe-variable :which-key \"Desc var\")" #("ivy-prescient" 0 13 (ivy-index 7)) "elisp/completion-ivy-rcp.el:151:  :hook (after-init . ivy-prescient-mode)" #("all-the-icons" 0 13 (ivy-index 0)) "configs/qol-packages.org:79:* All-the-icons" #("kb/ sudo" 0 8 (ivy-index 5)) "elisp/convenient-functions-rcp.el:44:  \"fu\" '(kb/sudo-find-file :which-key \"Sudo find file\")" #("etc-config-file" 0 15 (ivy-index 1)) "elisp/custom-directories-rcp.el:32:(defvar kb/emacs-etc-config-file (concat user-emacs-directory \"configs/etc-config.org\"))" "configs/file-and-directory-nav.org:58:    \"fcb\" '((lambda () (interactive) (find-file kb/emacs-etc-config-file)) :which-key \"Open Emacs base config\")" #("base-config-file" 0 16 (ivy-index 2)) "configs/file-and-directory-nav.org:58:    \"fcb\" '((lambda () (interactive) (find-file kb/emacs-base-config-file)) :which-key \"Open Emacs base config\")" #("base-config.org" 0 15 (ivy-index 10)) "elisp/custom-directories-rcp.el:32:(defvar kb/emacs-base-config-file (concat user-emacs-directory \"configs/base-config.org\"))" #("outshine" 0 8 (ivy-index 0)) "elisp/early-packages-rcp.el:34:;;;; Outshine" "configs/qol-packages.org:41:* Which-key" "elisp/early-packages-rcp.el:34:;;;; Outshine" #("flycheck-mode" 0 13 (ivy-index 8)) "elisp/programming-general-rcp.el:254:  :hook (after-init . global-flycheck-mode)" #("M-#" 0 3 (ivy-index 0)) "elisp/early-packages-rcp.el:44:  (defvar outline-minor-mode-prefix (kbd \"M-#\"))" #("general-define-key" 0 18 (ivy-index 0)) "configs/shell.org:67:    (general-define-key" #("all-the-" 0 8 (ivy-index 0)) "configs/qol-packages.org:76:* All-the-icons"))
(setq counsel-describe-symbol-history '(#("js--tmp-location" 0 16 (ivy-index 0)) #("embark map file" 0 15 (ivy-index 0)) "embark-file-map" #("alist embark key" 0 16 (ivy-index 0)) "embark-keymap-alist" "selectrum-minibuffer-map" "selectrum-prescient-toggle-map" #("ivy rich mode" 0 13 (ivy-index 1)) "ivy-rich-mode-hook" #("ivy rich mode hook" 0 18 (ivy-index 1)) "ivy-rich-mode-hook" #("outshine speed commands" 0 23 (ivy-index 2)) "outshine-speed-commands-user" #("outshine speed" 0 14 (ivy-index 3)) "outshine-speed-commands-default" #("prog-mode-hook" 0 14 (ivy-index 16388)) #("text-mode-hook" 0 14 (ivy-index 0)) #("completion-styles" 0 17 (ivy-index 2)) #("completion style" 0 16 (ivy-index 0)) "completion--styles" #("consult-mod" 0 11 (ivy-index 0)) "consult-mode-histories" "c-mode-hook" #("project switch commands" 0 23 (ivy-index 0)) "project-switch-commands" #("expand-region sub" 0 17 (ivy-index 0)) "expand-region-subword-enabled" #("expand-region skip" 0 18 (ivy-index 0)) "expand-region-skip-whitespace" #("expand-region " 0 14 (ivy-index 3)) "expand-region-smart-cursor" "org-follow-link-hook" #("update method" 0 13 (ivy-index 0)) "org-roam-db-update-method" "consult-preview-outline" "org-roam-db-update-idle-seconds" #("org roam idle sec" 0 17 (ivy-index 0)) "org-roam-update-db-idle-seconds" #("threshold gc" 0 12 (ivy-index 1)) "gc-cons-threshold" #("LaTeX-length-list" 0 17 (ivy-index 0)) #("outshine-mode-hook" 0 18 (ivy-index 10750)) #("outshine-mode-" 0 14 (ivy-index 0)) #("evil-normalize" 0 14 (ivy-index 0)) "evil-normalize-keymaps" "customize-set-variable" "after-focus-change-function" "kb/modeline-font" "org-roam-server-default-exclude-filters" "better-jumper-use-savehist" "LaTeX-mode-map" "TeX-command-list" "with-eval-after-load" #("classi mar" 0 10 (ivy-index 0)) "marginalia-classifiers" #("marg command " 0 13 (ivy-index 0)) "marginalia-command-categories" #("latex-mode-hook" 0 15 (ivy-index 0)) #("TeX-after-compilation-finished-functions" 0 40 (ivy-index 13844)) "LaTeX-mode-hook" #("tex correlate mode" 0 18 (ivy-index 0)) "TeX-source-correlate-mode" #("tex view program list" 0 21 (ivy-index 0)) "TeX-view-program-list" "pdf-latex-command" "tex-compile-commands" "LaTeX-mode-hook" "LaTeX-mode-hook" "latex-preview-pane-enable" #("org-roam-server-mode-hook" 0 25 (ivy-index 8853)) "flyspell-lazy-use-flyspell-word" "flyspell-lazy-window-idle-seconds" "flyspell-lazy-idle-seconds" "flyspell-lazy-changes-threshold" "flyspell-mode-hook" #("flyspell mode ma" 0 16 (ivy-index 0)) "flyspell-mode-map" #("ispell personal" 0 15 (ivy-index 0)) "ispell-personal-dictionary" "no-littering-var-directory" "flyspell-mode-hook" "ispell-change-dictionary" "spell-fu-mode-hook" "user-emacs-directory" "ispell-program-name" #("ispell-local-dictionary" 0 23 (ivy-index 1)) #("flyspell default di" 0 19 (ivy-index 0)) "flyspell-default-dictionary" #("ispell-progra" 0 13 (ivy-index 0)) "ispell-program-name" #("ispell current" 0 14 (ivy-index 1)) "ispell-current-personal-dictionary" #("ispell chang " 0 13 (ivy-index 0)) "ispell-change-dictionary" "LaTeX-mode-hook" "outshine-show-hidden-lines-cookies-p" "outshine-use-speed-commands" "LaTeX-mode-hook" "latex-outline-regexp" "LaTeX-mode-hook"))
(setq file-name-history '("~/.emacs.d/elisp/checking-spelling-rcp.el" "~/.emacs.d/elisp/themes-rcp.el" "~/.emacs.d/elisp/faces-rcp.el" "~/.emacs.d/" "~/.emacs.d/init.el" "~/.emacs.d/elisp/themes-rcp.el" "~/.emacs.d/init.el" "~/.emacs.d/" "~/main-emacs/elisp/themes-rcp.el" "~/main-emacs/init.el" "~/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.odt" "~/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.odt" "~/main-emacs/elisp/themes-rcp.el" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/ghost-devel/content/adapters/storage/ghost-storage-supabase/index.js" "~/ghost-devel/content/adapters/storage/supabase" "~/ghost-devel/content/adapters/storage/supabase/ghost-storage-supabase/" "~/ghost-devel/content/data/~/ghost-devel/config.development.json" "~/ghost-devel/config.development.json" "~/main-emacs/straight/repos/embark/" "~/Documents/org-database/roam/20210805132910-test_note.org" "20210805132812-test_note.org" "~/main-emacs/elisp/org-roam-other-rcp.el" "/tmp/keyfreq.html" "/tmp/" "~/main-emacs/var/bookmark-default.el" "~/main-emacs/init.el" "~/main-emacs/elisp/org-roam-other-rcp.el" "~/Documents/org-database/roam/bibliographic/master-lib.bib" "~/main-emacs/straight/repos/org-ref-cite/readme.org" "~/main-emacs/elisp/org-roam-other-rcp.el" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/main-emacs/elisp/org-roam-other-rcp.el" "~/main-emacs/init.el" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/Documents/org-database/roam/test-Jul302021-003458.org" "~/main-emacs/elisp/org-roam-other-rcp.el" "~/ghost-devel/content/themes/personal/about.hbs" "~/ghost-devel/content/themes/personal/assets/js/main.js" "~/main-emacs/elisp/programming-web-rcp.el" "~/main-emacs/elisp/themes-rcp.el" "~/main-emacs/elisp/org-roam-other-rcp.el" "~/main-emacs/init.el" "~/ghost-devel/content/themes/personal/bookmarked.hbs" "~/ghost-devel/content/themes/personal/post.hbs" "~/ghost-devel/content/themes/personal/page.hbs" "~/ghost-devel/content/themes/personal/partials/theme_header.hbs" "~/ghost-devel/content/themes/zvikov-master/partials/loop.hbs" "~/ghost-devel/content/themes/zvikov-master/assets/css/style.css" "~/ghost-devel/content/data/redirects.yaml" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/main-emacs/elisp/org-roam-other-rcp.el" "~/ghost-devel/content/themes/zvikov-master/assets/js/main.js" "~/ghost-devel/content/themes/personal/assets/js/main.js" "~/ghost-devel/content/themes/zvikov-master/assets/js/main.js" "~/.eslintrc.json" "~/ghost-devel/content/themes/personal/assets/js/libraries.js" "~/.eslintrc.json" "~/main-emacs/var/flycheck/.eslintrc.json" "~/ghost-devel/content/themes/personal/post.hbs" "~/ghost-devel/content/themes/personal/partials/navigation.hbs" "~/ghost-devel/content/themes/personal/partials/socials.hbs" "~/ghost-devel/content/themes/zvikov/subscribe.hbs" "~/ghost-devel/content/themes/zvikov/assets/css/style.css" "~/ghost-devel/content/themes/personal/about.hbs" "~/ghost-devel/content/themes/personal/subscribe.hbs" "~/ghost-devel/content/themes/personal/about.hbs" "~/ghost-devel/content/themes/zvikov/assets/js/main.js" "~/ghost-devel/content/settings/routes.yaml" "~/ghost-master/content/settings/routes.yaml" "~/main-emacs/elisp/themes-rcp.el" "~/main-emacs/var/flycheck/.stylelintrc.json" "~/main-emacs/elisp/flycheck/.stylelintrc.json" "~/main-emacs/elisp/programming-web-rcp.el" "~/ghost-devel/content/themes/personal/assets/css/style.css" "~/ghost-devel/content/settings/routes.yaml" "~/main-emacs/var/flycheck/.stylelintrc.json" "~/main-emacs/elisp/themes-rcp.el" "~/ghost-devel/content/settings/routes.yaml" "~/main-emacs/elisp/programming-web-rcp.el" "~/main-emacs/init.el" "~/main-emacs/configs/qol-packages.org" "~/ghost-devel/content/settings/routes.yaml" "~/main-emacs/elisp/completion-selectrum-rcp.el" "~/main-emacs/elisp/themes-rcp.el" "~/main-emacs/straight/repos/doom-modeline/doom-modeline.el" "~/main-emacs/straight/repos/doom-modeline/doom-modeline-segments.el" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/main-emacs/elisp/themes-rcp.el" "~/ghost-devel/content/themes/personal/about.hbs" "~/ghost-devel/content/themes/personal/post.hbs" "~/ghost-devel/content/themes/personal/partials/theme_footer.hbs" "~/ghost-devel/content/themes/personal/index.hbs" "~/ghost-devel/content/themes/personal/subscribe.hbs" "~/ghost-devel/content/themes/personal/partials/archive_card.hbs" "~/ghost-devel/content/themes/personal/archive.hbs" "~/ghost-devel/content/settings/routes.yaml" "~/ghost-devel/content/themes/Digest-master/default.hbs" "~/ghost-devel/content/themes/personal/package.json"))
(setq minibuffer-history '("major-mode" "eshell-send-input" "eshell-mode-map" #("stash@{0} On windows: temp" 0 9 (face magit-hash)) "On windows: temp" #("=has:backlinks=2 = =  = = =level:0= PHIL0360" 0 16 (display #("=has:backlinks=2" 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org" nil (24852 38129 922338 17000) (24852 37058 842320 352000) "8a5d10ea-736b-4f49-882f-ad31c8b040d2" 0 1 nil nil nil nil "PHIL0360" (("CATEGORY" . "phil0360-Jun192021-224102") ("ID" . "8a5d10ea-736b-4f49-882f-ad31c8b040d2") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") ("PRIORITY" . "B")) nil nil nil nil)) 16 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org" nil (24852 38129 922338 17000) (24852 37058 842320 352000) "8a5d10ea-736b-4f49-882f-ad31c8b040d2" 0 1 nil nil nil nil "PHIL0360" (("CATEGORY" . "phil0360-Jun192021-224102") ("ID" . "8a5d10ea-736b-4f49-882f-ad31c8b040d2") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") ("PRIORITY" . "B")) nil nil nil nil)) 17 21 (display #("= =             " 0 3 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org" nil (24852 38129 922338 17000) (24852 37058 842320 352000) "8a5d10ea-736b-4f49-882f-ad31c8b040d2" 0 1 nil nil nil nil "PHIL0360" (("CATEGORY" . "phil0360-Jun192021-224102") ("ID" . "8a5d10ea-736b-4f49-882f-ad31c8b040d2") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") ("PRIORITY" . "B")) nil nil nil nil)) 21 22 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org" nil (24852 38129 922338 17000) (24852 37058 842320 352000) "8a5d10ea-736b-4f49-882f-ad31c8b040d2" 0 1 nil nil nil nil "PHIL0360" (("CATEGORY" . "phil0360-Jun192021-224102") ("ID" . "8a5d10ea-736b-4f49-882f-ad31c8b040d2") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") ("PRIORITY" . "B")) nil nil nil nil)) 22 25 (display #("= =          " 0 3 (display "")) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org" nil (24852 38129 922338 17000) (24852 37058 842320 352000) "8a5d10ea-736b-4f49-882f-ad31c8b040d2" 0 1 nil nil nil nil "PHIL0360" (("CATEGORY" . "phil0360-Jun192021-224102") ("ID" . "8a5d10ea-736b-4f49-882f-ad31c8b040d2") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") ("PRIORITY" . "B")) nil nil nil nil)) 25 26 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org" nil (24852 38129 922338 17000) (24852 37058 842320 352000) "8a5d10ea-736b-4f49-882f-ad31c8b040d2" 0 1 nil nil nil nil "PHIL0360" (("CATEGORY" . "phil0360-Jun192021-224102") ("ID" . "8a5d10ea-736b-4f49-882f-ad31c8b040d2") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") ("PRIORITY" . "B")) nil nil nil nil)) 26 44 (display #("=level:0= PHIL0360                                                                                                                                                                     " 0 9 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow))))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org" nil (24852 38129 922338 17000) (24852 37058 842320 352000) "8a5d10ea-736b-4f49-882f-ad31c8b040d2" 0 1 nil nil nil nil "PHIL0360" (("CATEGORY" . "phil0360-Jun192021-224102") ("ID" . "8a5d10ea-736b-4f49-882f-ad31c8b040d2") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") ("PRIORITY" . "B")) nil nil nil nil))) "init.el" "... (choose a dir)" "doom-modeline-bar-width" "mf-display-padding-height" "windows" "On master: current" "git@gitlab.com:PreciousPudding/main-emacs.git" "origin" "init.el" "~/main-emacs/" "user-emacs-directory" "org" "test" "hello" #("=has:backlinks=1 = =  = = =level:0= EAST0650" 0 16 (display #("=has:backlinks=1" 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org" nil (24852 38129 932338 18000) (24852 37058 842320 352000) "573f438a-b49a-48d9-99b0-b05fd304a9a0" 0 1 nil nil nil nil "EAST0650" (("CATEGORY" . "east0650-Jun212021-163238") ("ID" . "573f438a-b49a-48d9-99b0-b05fd304a9a0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org") ("PRIORITY" . "B")) nil nil nil nil)) 16 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org" nil (24852 38129 932338 18000) (24852 37058 842320 352000) "573f438a-b49a-48d9-99b0-b05fd304a9a0" 0 1 nil nil nil nil "EAST0650" (("CATEGORY" . "east0650-Jun212021-163238") ("ID" . "573f438a-b49a-48d9-99b0-b05fd304a9a0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org") ("PRIORITY" . "B")) nil nil nil nil)) 17 21 (display #("= =             " 0 3 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org" nil (24852 38129 932338 18000) (24852 37058 842320 352000) "573f438a-b49a-48d9-99b0-b05fd304a9a0" 0 1 nil nil nil nil "EAST0650" (("CATEGORY" . "east0650-Jun212021-163238") ("ID" . "573f438a-b49a-48d9-99b0-b05fd304a9a0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org") ("PRIORITY" . "B")) nil nil nil nil)) 21 22 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org" nil (24852 38129 932338 18000) (24852 37058 842320 352000) "573f438a-b49a-48d9-99b0-b05fd304a9a0" 0 1 nil nil nil nil "EAST0650" (("CATEGORY" . "east0650-Jun212021-163238") ("ID" . "573f438a-b49a-48d9-99b0-b05fd304a9a0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org") ("PRIORITY" . "B")) nil nil nil nil)) 22 25 (display #("= =          " 0 3 (display "")) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org" nil (24852 38129 932338 18000) (24852 37058 842320 352000) "573f438a-b49a-48d9-99b0-b05fd304a9a0" 0 1 nil nil nil nil "EAST0650" (("CATEGORY" . "east0650-Jun212021-163238") ("ID" . "573f438a-b49a-48d9-99b0-b05fd304a9a0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org") ("PRIORITY" . "B")) nil nil nil nil)) 25 26 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org" nil (24852 38129 932338 18000) (24852 37058 842320 352000) "573f438a-b49a-48d9-99b0-b05fd304a9a0" 0 1 nil nil nil nil "EAST0650" (("CATEGORY" . "east0650-Jun212021-163238") ("ID" . "573f438a-b49a-48d9-99b0-b05fd304a9a0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org") ("PRIORITY" . "B")) nil nil nil nil)) 26 44 (display #("=level:0= EAST0650                                                                                                                                                                     " 0 9 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow))))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org" nil (24852 38129 932338 18000) (24852 37058 842320 352000) "573f438a-b49a-48d9-99b0-b05fd304a9a0" 0 1 nil nil nil nil "EAST0650" (("CATEGORY" . "east0650-Jun212021-163238") ("ID" . "573f438a-b49a-48d9-99b0-b05fd304a9a0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org") ("PRIORITY" . "B")) nil nil nil nil))) #("=has:backlinks=2 =@= quote        =@=new        =level:1= Who is Seneca? (Rome...  No one has had so much divine favor that they could guarantee themselves tomorrow.                                                                 " 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 17 20 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 34 37 (display "" node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 37 40 (face all-the-icons-dgreen node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 40 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 48 57 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-blue) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-blue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 57 58 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 58 81 (face org-roam-dim node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 81 82 (face org-roam-dim node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 82 83 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1) face org-roam-dim node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 83 84 (face org-roam-dim node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 84 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil))) "magit-mode-quit-window" "magit-bury-buffer-function" #("=has:backlinks=1 =@= structure    = =           =level:0= 052 Blog                                                                                                                                                                     " 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 17 20 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 34 37 (display "" node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 48 57 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil))) "1" #("@b [Accept (buffer)]" 0 3 (invisible t) 3 12 (face minibuffer-prompt) 12 13 (face (bold minibuffer-prompt)) 13 20 (face minibuffer-prompt)) "microscopic" "detention" "1" "inquiry" "1" "journey" "uniquely" "elicit" "3" "prompt" "observe" "1" "knowing" "1" "2" "1" "5" "trepidation" "1" #("@s [Save]" 0 3 (invisible t) 3 4 (face minibuffer-prompt) 4 5 (face (bold minibuffer-prompt)) 5 9 (face minibuffer-prompt)) "1" #("@b [Accept (buffer)]" 0 3 (invisible t) 3 12 (face minibuffer-prompt) 12 13 (face (bold minibuffer-prompt)) 13 20 (face minibuffer-prompt)) "1" #("@b [Accept (buffer)]" 0 3 (invisible t) 3 12 (face minibuffer-prompt) 12 13 (face (bold minibuffer-prompt)) 13 20 (face minibuffer-prompt)) #("@s [Save]" 0 3 (invisible t) 3 4 (face minibuffer-prompt) 4 5 (face (bold minibuffer-prompt)) 5 9 (face minibuffer-prompt)) "@s" #("=has:backlinks=6 = =              =@=new        =level:0= Writing is your thinking crystallized                                                                                                                                        " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" nil (24846 49375 863906 882000) (24844 38936 254857 997000) "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9" 0 1 nil nil nil nil "Writing is your thinking crystallized" (("CATEGORY" . "writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907") ("ID" . "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org") ("PRIORITY" . "B")) nil ("new") nil nil) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" nil (24846 49375 863906 882000) (24844 38936 254857 997000) "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9" 0 1 nil nil nil nil "Writing is your thinking crystallized" (("CATEGORY" . "writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907") ("ID" . "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" nil (24846 49375 863906 882000) (24844 38936 254857 997000) "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9" 0 1 nil nil nil nil "Writing is your thinking crystallized" (("CATEGORY" . "writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907") ("ID" . "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org") ("PRIORITY" . "B")) nil ("new") nil nil) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" nil (24846 49375 863906 882000) (24844 38936 254857 997000) "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9" 0 1 nil nil nil nil "Writing is your thinking crystallized" (("CATEGORY" . "writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907") ("ID" . "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" nil (24846 49375 863906 882000) (24844 38936 254857 997000) "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9" 0 1 nil nil nil nil "Writing is your thinking crystallized" (("CATEGORY" . "writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907") ("ID" . "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org") ("PRIORITY" . "B")) nil ("new") nil nil) display "") 37 40 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" nil (24846 49375 863906 882000) (24844 38936 254857 997000) "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9" 0 1 nil nil nil nil "Writing is your thinking crystallized" (("CATEGORY" . "writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907") ("ID" . "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org") ("PRIORITY" . "B")) nil ("new") nil nil) face all-the-icons-dgreen) 40 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" nil (24846 49375 863906 882000) (24844 38936 254857 997000) "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9" 0 1 nil nil nil nil "Writing is your thinking crystallized" (("CATEGORY" . "writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907") ("ID" . "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" nil (24846 49375 863906 882000) (24844 38936 254857 997000) "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9" 0 1 nil nil nil nil "Writing is your thinking crystallized" (("CATEGORY" . "writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907") ("ID" . "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org") ("PRIORITY" . "B")) nil ("new") nil nil) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" nil (24846 49375 863906 882000) (24844 38936 254857 997000) "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9" 0 1 nil nil nil nil "Writing is your thinking crystallized" (("CATEGORY" . "writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907") ("ID" . "cea8f02c-d250-4e2a-a6e4-3d9c4a357ea9") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org") ("PRIORITY" . "B")) nil ("new") nil nil))) #("=has:backlinks=1 = =              = =           =level:0= Blog | Focus narrowly, but consume vastly                                                                                                                                    " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org" nil (24844 38241 819861 469000) (24844 38241 805861 681000) "4ecfb58d-15ad-4f77-a431-7ba930d168d7" 0 1 nil nil nil nil "Blog | Focus narrowly, but consume vastly" (("CATEGORY" . "blog_focus_narrowly_but_consume_vastly-Jul282021-132834") ("ID" . "4ecfb58d-15ad-4f77-a431-7ba930d168d7") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org") ("PRIORITY" . "B")) nil nil nil nil) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org" nil (24844 38241 819861 469000) (24844 38241 805861 681000) "4ecfb58d-15ad-4f77-a431-7ba930d168d7" 0 1 nil nil nil nil "Blog | Focus narrowly, but consume vastly" (("CATEGORY" . "blog_focus_narrowly_but_consume_vastly-Jul282021-132834") ("ID" . "4ecfb58d-15ad-4f77-a431-7ba930d168d7") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org") ("PRIORITY" . "B")) nil nil nil nil)) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org" nil (24844 38241 819861 469000) (24844 38241 805861 681000) "4ecfb58d-15ad-4f77-a431-7ba930d168d7" 0 1 nil nil nil nil "Blog | Focus narrowly, but consume vastly" (("CATEGORY" . "blog_focus_narrowly_but_consume_vastly-Jul282021-132834") ("ID" . "4ecfb58d-15ad-4f77-a431-7ba930d168d7") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org") ("PRIORITY" . "B")) nil nil nil nil) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org" nil (24844 38241 819861 469000) (24844 38241 805861 681000) "4ecfb58d-15ad-4f77-a431-7ba930d168d7" 0 1 nil nil nil nil "Blog | Focus narrowly, but consume vastly" (("CATEGORY" . "blog_focus_narrowly_but_consume_vastly-Jul282021-132834") ("ID" . "4ecfb58d-15ad-4f77-a431-7ba930d168d7") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org") ("PRIORITY" . "B")) nil nil nil nil)) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org" nil (24844 38241 819861 469000) (24844 38241 805861 681000) "4ecfb58d-15ad-4f77-a431-7ba930d168d7" 0 1 nil nil nil nil "Blog | Focus narrowly, but consume vastly" (("CATEGORY" . "blog_focus_narrowly_but_consume_vastly-Jul282021-132834") ("ID" . "4ecfb58d-15ad-4f77-a431-7ba930d168d7") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org") ("PRIORITY" . "B")) nil nil nil nil) display "") 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org" nil (24844 38241 819861 469000) (24844 38241 805861 681000) "4ecfb58d-15ad-4f77-a431-7ba930d168d7" 0 1 nil nil nil nil "Blog | Focus narrowly, but consume vastly" (("CATEGORY" . "blog_focus_narrowly_but_consume_vastly-Jul282021-132834") ("ID" . "4ecfb58d-15ad-4f77-a431-7ba930d168d7") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org") ("PRIORITY" . "B")) nil nil nil nil)) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org" nil (24844 38241 819861 469000) (24844 38241 805861 681000) "4ecfb58d-15ad-4f77-a431-7ba930d168d7" 0 1 nil nil nil nil "Blog | Focus narrowly, but consume vastly" (("CATEGORY" . "blog_focus_narrowly_but_consume_vastly-Jul282021-132834") ("ID" . "4ecfb58d-15ad-4f77-a431-7ba930d168d7") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org") ("PRIORITY" . "B")) nil nil nil nil) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org" nil (24844 38241 819861 469000) (24844 38241 805861 681000) "4ecfb58d-15ad-4f77-a431-7ba930d168d7" 0 1 nil nil nil nil "Blog | Focus narrowly, but consume vastly" (("CATEGORY" . "blog_focus_narrowly_but_consume_vastly-Jul282021-132834") ("ID" . "4ecfb58d-15ad-4f77-a431-7ba930d168d7") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org") ("PRIORITY" . "B")) nil nil nil nil))) "ENGL0930 | Final Portfolio" #("1 Portfolio" 0 1 (face minibuffer-prompt)) #("=has:backlinks=3 = =              = =           =level:0= ENGL0930                                                                                                                                                                     " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" nil (24831 37029 992436 365000) (24831 37029 984436 419000) "f542a192-74f0-4dd0-a33d-0d8d5c0b549e" 0 1 nil nil nil nil "ENGL0930" (("CATEGORY" . "engl0930-Jun042021-223134") ("ID" . "f542a192-74f0-4dd0-a33d-0d8d5c0b549e") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org") ("PRIORITY" . "B")) nil nil nil nil) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" nil (24831 37029 992436 365000) (24831 37029 984436 419000) "f542a192-74f0-4dd0-a33d-0d8d5c0b549e" 0 1 nil nil nil nil "ENGL0930" (("CATEGORY" . "engl0930-Jun042021-223134") ("ID" . "f542a192-74f0-4dd0-a33d-0d8d5c0b549e") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org") ("PRIORITY" . "B")) nil nil nil nil)) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" nil (24831 37029 992436 365000) (24831 37029 984436 419000) "f542a192-74f0-4dd0-a33d-0d8d5c0b549e" 0 1 nil nil nil nil "ENGL0930" (("CATEGORY" . "engl0930-Jun042021-223134") ("ID" . "f542a192-74f0-4dd0-a33d-0d8d5c0b549e") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org") ("PRIORITY" . "B")) nil nil nil nil) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" nil (24831 37029 992436 365000) (24831 37029 984436 419000) "f542a192-74f0-4dd0-a33d-0d8d5c0b549e" 0 1 nil nil nil nil "ENGL0930" (("CATEGORY" . "engl0930-Jun042021-223134") ("ID" . "f542a192-74f0-4dd0-a33d-0d8d5c0b549e") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org") ("PRIORITY" . "B")) nil nil nil nil)) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" nil (24831 37029 992436 365000) (24831 37029 984436 419000) "f542a192-74f0-4dd0-a33d-0d8d5c0b549e" 0 1 nil nil nil nil "ENGL0930" (("CATEGORY" . "engl0930-Jun042021-223134") ("ID" . "f542a192-74f0-4dd0-a33d-0d8d5c0b549e") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org") ("PRIORITY" . "B")) nil nil nil nil) display "") 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" nil (24831 37029 992436 365000) (24831 37029 984436 419000) "f542a192-74f0-4dd0-a33d-0d8d5c0b549e" 0 1 nil nil nil nil "ENGL0930" (("CATEGORY" . "engl0930-Jun042021-223134") ("ID" . "f542a192-74f0-4dd0-a33d-0d8d5c0b549e") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org") ("PRIORITY" . "B")) nil nil nil nil)) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" nil (24831 37029 992436 365000) (24831 37029 984436 419000) "f542a192-74f0-4dd0-a33d-0d8d5c0b549e" 0 1 nil nil nil nil "ENGL0930" (("CATEGORY" . "engl0930-Jun042021-223134") ("ID" . "f542a192-74f0-4dd0-a33d-0d8d5c0b549e") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org") ("PRIORITY" . "B")) nil nil nil nil) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" nil (24831 37029 992436 365000) (24831 37029 984436 419000) "f542a192-74f0-4dd0-a33d-0d8d5c0b549e" 0 1 nil nil nil nil "ENGL0930" (("CATEGORY" . "engl0930-Jun042021-223134") ("ID" . "f542a192-74f0-4dd0-a33d-0d8d5c0b549e") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org") ("PRIORITY" . "B")) nil nil nil nil))) "Burly: ENGL Working" #("=has:backlinks=1 =@= writing      = =           =level:0= ENGL0930 | Paper 2                                                                                                                                                           " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org" nil (24844 5523 914641 901000) (24844 5523 906642 54000) "049ff876-cfb7-4190-9872-329ec66dcff4" 0 1 nil nil nil nil "ENGL0930 | Paper 2" (("CATEGORY" . "engl0930_paper_2-Jun272021-011222") ("ID" . "049ff876-cfb7-4190-9872-329ec66dcff4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org") ("PRIORITY" . "B")) nil ("writing") nil nil) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org" nil (24844 5523 914641 901000) (24844 5523 906642 54000) "049ff876-cfb7-4190-9872-329ec66dcff4" 0 1 nil nil nil nil "ENGL0930 | Paper 2" (("CATEGORY" . "engl0930_paper_2-Jun272021-011222") ("ID" . "049ff876-cfb7-4190-9872-329ec66dcff4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org") ("PRIORITY" . "B")) nil ("writing") nil nil)) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org" nil (24844 5523 914641 901000) (24844 5523 906642 54000) "049ff876-cfb7-4190-9872-329ec66dcff4" 0 1 nil nil nil nil "ENGL0930 | Paper 2" (("CATEGORY" . "engl0930_paper_2-Jun272021-011222") ("ID" . "049ff876-cfb7-4190-9872-329ec66dcff4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org") ("PRIORITY" . "B")) nil ("writing") nil nil) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org" nil (24844 5523 914641 901000) (24844 5523 906642 54000) "049ff876-cfb7-4190-9872-329ec66dcff4" 0 1 nil nil nil nil "ENGL0930 | Paper 2" (("CATEGORY" . "engl0930_paper_2-Jun272021-011222") ("ID" . "049ff876-cfb7-4190-9872-329ec66dcff4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org") ("PRIORITY" . "B")) nil ("writing") nil nil)) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org" nil (24844 5523 914641 901000) (24844 5523 906642 54000) "049ff876-cfb7-4190-9872-329ec66dcff4" 0 1 nil nil nil nil "ENGL0930 | Paper 2" (("CATEGORY" . "engl0930_paper_2-Jun272021-011222") ("ID" . "049ff876-cfb7-4190-9872-329ec66dcff4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org") ("PRIORITY" . "B")) nil ("writing") nil nil) display "") 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org" nil (24844 5523 914641 901000) (24844 5523 906642 54000) "049ff876-cfb7-4190-9872-329ec66dcff4" 0 1 nil nil nil nil "ENGL0930 | Paper 2" (("CATEGORY" . "engl0930_paper_2-Jun272021-011222") ("ID" . "049ff876-cfb7-4190-9872-329ec66dcff4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org") ("PRIORITY" . "B")) nil ("writing") nil nil)) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org" nil (24844 5523 914641 901000) (24844 5523 906642 54000) "049ff876-cfb7-4190-9872-329ec66dcff4" 0 1 nil nil nil nil "ENGL0930 | Paper 2" (("CATEGORY" . "engl0930_paper_2-Jun272021-011222") ("ID" . "049ff876-cfb7-4190-9872-329ec66dcff4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org") ("PRIORITY" . "B")) nil ("writing") nil nil) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org" nil (24844 5523 914641 901000) (24844 5523 906642 54000) "049ff876-cfb7-4190-9872-329ec66dcff4" 0 1 nil nil nil nil "ENGL0930 | Paper 2" (("CATEGORY" . "engl0930_paper_2-Jun272021-011222") ("ID" . "049ff876-cfb7-4190-9872-329ec66dcff4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org") ("PRIORITY" . "B")) nil ("writing") nil nil))) #("=has:backlinks=1 =@= writing      = =           =level:0= ENGL0930 | Paper 1                                                                                                                                                           " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" nil (24844 5287 123894 388000) (24844 5287 106894 688000) "8345720e-aa12-4e7f-8474-b4d97bbb70b0" 0 1 nil nil nil nil "ENGL0930 | Paper 1" (("CATEGORY" . "engl0930_essay_1-Jun072021-235609") ("ID" . "8345720e-aa12-4e7f-8474-b4d97bbb70b0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org") ("PRIORITY" . "B")) nil ("writing") nil nil) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" nil (24844 5287 123894 388000) (24844 5287 106894 688000) "8345720e-aa12-4e7f-8474-b4d97bbb70b0" 0 1 nil nil nil nil "ENGL0930 | Paper 1" (("CATEGORY" . "engl0930_essay_1-Jun072021-235609") ("ID" . "8345720e-aa12-4e7f-8474-b4d97bbb70b0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org") ("PRIORITY" . "B")) nil ("writing") nil nil)) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" nil (24844 5287 123894 388000) (24844 5287 106894 688000) "8345720e-aa12-4e7f-8474-b4d97bbb70b0" 0 1 nil nil nil nil "ENGL0930 | Paper 1" (("CATEGORY" . "engl0930_essay_1-Jun072021-235609") ("ID" . "8345720e-aa12-4e7f-8474-b4d97bbb70b0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org") ("PRIORITY" . "B")) nil ("writing") nil nil) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" nil (24844 5287 123894 388000) (24844 5287 106894 688000) "8345720e-aa12-4e7f-8474-b4d97bbb70b0" 0 1 nil nil nil nil "ENGL0930 | Paper 1" (("CATEGORY" . "engl0930_essay_1-Jun072021-235609") ("ID" . "8345720e-aa12-4e7f-8474-b4d97bbb70b0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org") ("PRIORITY" . "B")) nil ("writing") nil nil)) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" nil (24844 5287 123894 388000) (24844 5287 106894 688000) "8345720e-aa12-4e7f-8474-b4d97bbb70b0" 0 1 nil nil nil nil "ENGL0930 | Paper 1" (("CATEGORY" . "engl0930_essay_1-Jun072021-235609") ("ID" . "8345720e-aa12-4e7f-8474-b4d97bbb70b0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org") ("PRIORITY" . "B")) nil ("writing") nil nil) display "") 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" nil (24844 5287 123894 388000) (24844 5287 106894 688000) "8345720e-aa12-4e7f-8474-b4d97bbb70b0" 0 1 nil nil nil nil "ENGL0930 | Paper 1" (("CATEGORY" . "engl0930_essay_1-Jun072021-235609") ("ID" . "8345720e-aa12-4e7f-8474-b4d97bbb70b0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org") ("PRIORITY" . "B")) nil ("writing") nil nil)) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" nil (24844 5287 123894 388000) (24844 5287 106894 688000) "8345720e-aa12-4e7f-8474-b4d97bbb70b0" 0 1 nil nil nil nil "ENGL0930 | Paper 1" (("CATEGORY" . "engl0930_essay_1-Jun072021-235609") ("ID" . "8345720e-aa12-4e7f-8474-b4d97bbb70b0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org") ("PRIORITY" . "B")) nil ("writing") nil nil) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" nil (24844 5287 123894 388000) (24844 5287 106894 688000) "8345720e-aa12-4e7f-8474-b4d97bbb70b0" 0 1 nil nil nil nil "ENGL0930 | Paper 1" (("CATEGORY" . "engl0930_essay_1-Jun072021-235609") ("ID" . "8345720e-aa12-4e7f-8474-b4d97bbb70b0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org") ("PRIORITY" . "B")) nil ("writing") nil nil))) #("=has:backlinks=1 =@= structure    = =           =level:0= 052 Blog                                                                                                                                                                     " 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 17 20 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 34 37 (display "" node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 48 57 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil))) "org-lint" #("=not-backlinks=  =@= structure    = =           =level:0= 000 Index                                                                                                                                                                    " 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit org-roam-dim) face (:family "Material Icons" :height 0.9900000000000001 :inherit org-roam-dim))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" nil (24844 40063 731814 124000) (24844 40063 618816 165000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" 0 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" nil (24844 40063 731814 124000) (24844 40063 618816 165000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" 0 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 17 20 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" nil (24844 40063 731814 124000) (24844 40063 618816 165000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" 0 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" nil (24844 40063 731814 124000) (24844 40063 618816 165000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" 0 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 34 37 (display "" node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" nil (24844 40063 731814 124000) (24844 40063 618816 165000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" 0 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" nil (24844 40063 731814 124000) (24844 40063 618816 165000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" 0 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 48 57 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" nil (24844 40063 731814 124000) (24844 40063 618816 165000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" 0 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" nil (24844 40063 731814 124000) (24844 40063 618816 165000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" 0 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil ("structure") nil nil))) #("=has:backlinks=1 =@= structure    = =           =level:0= 010 Fleeting notes                                                                                                                                                           " 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" nil (24844 6545 707526 413000) (24844 6545 688526 749000) "6561d39b-64e5-48f0-b903-7f519b588317" 0 1 nil nil nil nil "010 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" nil (24844 6545 707526 413000) (24844 6545 688526 749000) "6561d39b-64e5-48f0-b903-7f519b588317" 0 1 nil nil nil nil "010 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 17 20 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" nil (24844 6545 707526 413000) (24844 6545 688526 749000) "6561d39b-64e5-48f0-b903-7f519b588317" 0 1 nil nil nil nil "010 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" nil (24844 6545 707526 413000) (24844 6545 688526 749000) "6561d39b-64e5-48f0-b903-7f519b588317" 0 1 nil nil nil nil "010 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 34 37 (display "" node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" nil (24844 6545 707526 413000) (24844 6545 688526 749000) "6561d39b-64e5-48f0-b903-7f519b588317" 0 1 nil nil nil nil "010 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" nil (24844 6545 707526 413000) (24844 6545 688526 749000) "6561d39b-64e5-48f0-b903-7f519b588317" 0 1 nil nil nil nil "010 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 48 57 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" nil (24844 6545 707526 413000) (24844 6545 688526 749000) "6561d39b-64e5-48f0-b903-7f519b588317" 0 1 nil nil nil nil "010 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" nil (24844 6545 707526 413000) (24844 6545 688526 749000) "6561d39b-64e5-48f0-b903-7f519b588317" 0 1 nil nil nil nil "010 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil ("structure") nil nil))) #("=has:backlinks=1 = =              = =           =level:0= 100 Source collections                                                                                                                                                       " 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org" nil (24844 40026 125493 404000) (24844 40026 109493 693000) "14d59564-d9a7-48da-b9e8-7e0e30571e26" 0 1 nil nil nil nil "100 Source collections" (("CATEGORY" . "100_books-Aug042021-023213") ("ID" . "14d59564-d9a7-48da-b9e8-7e0e30571e26") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org") ("PRIORITY" . "B")) nil nil nil nil)) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org" nil (24844 40026 125493 404000) (24844 40026 109493 693000) "14d59564-d9a7-48da-b9e8-7e0e30571e26" 0 1 nil nil nil nil "100 Source collections" (("CATEGORY" . "100_books-Aug042021-023213") ("ID" . "14d59564-d9a7-48da-b9e8-7e0e30571e26") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org") ("PRIORITY" . "B")) nil nil nil nil)) 17 20 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org" nil (24844 40026 125493 404000) (24844 40026 109493 693000) "14d59564-d9a7-48da-b9e8-7e0e30571e26" 0 1 nil nil nil nil "100 Source collections" (("CATEGORY" . "100_books-Aug042021-023213") ("ID" . "14d59564-d9a7-48da-b9e8-7e0e30571e26") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org") ("PRIORITY" . "B")) nil nil nil nil)) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org" nil (24844 40026 125493 404000) (24844 40026 109493 693000) "14d59564-d9a7-48da-b9e8-7e0e30571e26" 0 1 nil nil nil nil "100 Source collections" (("CATEGORY" . "100_books-Aug042021-023213") ("ID" . "14d59564-d9a7-48da-b9e8-7e0e30571e26") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org") ("PRIORITY" . "B")) nil nil nil nil)) 34 37 (display "" node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org" nil (24844 40026 125493 404000) (24844 40026 109493 693000) "14d59564-d9a7-48da-b9e8-7e0e30571e26" 0 1 nil nil nil nil "100 Source collections" (("CATEGORY" . "100_books-Aug042021-023213") ("ID" . "14d59564-d9a7-48da-b9e8-7e0e30571e26") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org") ("PRIORITY" . "B")) nil nil nil nil)) 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org" nil (24844 40026 125493 404000) (24844 40026 109493 693000) "14d59564-d9a7-48da-b9e8-7e0e30571e26" 0 1 nil nil nil nil "100 Source collections" (("CATEGORY" . "100_books-Aug042021-023213") ("ID" . "14d59564-d9a7-48da-b9e8-7e0e30571e26") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org") ("PRIORITY" . "B")) nil nil nil nil)) 48 57 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org" nil (24844 40026 125493 404000) (24844 40026 109493 693000) "14d59564-d9a7-48da-b9e8-7e0e30571e26" 0 1 nil nil nil nil "100 Source collections" (("CATEGORY" . "100_books-Aug042021-023213") ("ID" . "14d59564-d9a7-48da-b9e8-7e0e30571e26") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org") ("PRIORITY" . "B")) nil nil nil nil)) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org" nil (24844 40026 125493 404000) (24844 40026 109493 693000) "14d59564-d9a7-48da-b9e8-7e0e30571e26" 0 1 nil nil nil nil "100 Source collections" (("CATEGORY" . "100_books-Aug042021-023213") ("ID" . "14d59564-d9a7-48da-b9e8-7e0e30571e26") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org") ("PRIORITY" . "B")) nil nil nil nil))) #("stash@{0} On master: temp" 0 9 (face magit-hash)) "Small-files-only" "On master: temp" "Small_files_only" #("=has:backlinks=2 = =              =@=new        =level:0= Revisit what you consume                                                                                                                                                     " 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" nil (24839 39771 205906 344000) (24839 39771 187906 697000) "085c2981-de2a-4dc3-a94f-3751eadda242" 0 1 nil nil nil nil "Revisit what you consume" (("CATEGORY" . "revist_what_you_consume-Jul282021-172240") ("ID" . "085c2981-de2a-4dc3-a94f-3751eadda242") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" nil (24839 39771 205906 344000) (24839 39771 187906 697000) "085c2981-de2a-4dc3-a94f-3751eadda242" 0 1 nil nil nil nil "Revisit what you consume" (("CATEGORY" . "revist_what_you_consume-Jul282021-172240") ("ID" . "085c2981-de2a-4dc3-a94f-3751eadda242") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 17 20 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" nil (24839 39771 205906 344000) (24839 39771 187906 697000) "085c2981-de2a-4dc3-a94f-3751eadda242" 0 1 nil nil nil nil "Revisit what you consume" (("CATEGORY" . "revist_what_you_consume-Jul282021-172240") ("ID" . "085c2981-de2a-4dc3-a94f-3751eadda242") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" nil (24839 39771 205906 344000) (24839 39771 187906 697000) "085c2981-de2a-4dc3-a94f-3751eadda242" 0 1 nil nil nil nil "Revisit what you consume" (("CATEGORY" . "revist_what_you_consume-Jul282021-172240") ("ID" . "085c2981-de2a-4dc3-a94f-3751eadda242") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 34 37 (display "" node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" nil (24839 39771 205906 344000) (24839 39771 187906 697000) "085c2981-de2a-4dc3-a94f-3751eadda242" 0 1 nil nil nil nil "Revisit what you consume" (("CATEGORY" . "revist_what_you_consume-Jul282021-172240") ("ID" . "085c2981-de2a-4dc3-a94f-3751eadda242") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 37 40 (face all-the-icons-dgreen node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" nil (24839 39771 205906 344000) (24839 39771 187906 697000) "085c2981-de2a-4dc3-a94f-3751eadda242" 0 1 nil nil nil nil "Revisit what you consume" (("CATEGORY" . "revist_what_you_consume-Jul282021-172240") ("ID" . "085c2981-de2a-4dc3-a94f-3751eadda242") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 40 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" nil (24839 39771 205906 344000) (24839 39771 187906 697000) "085c2981-de2a-4dc3-a94f-3751eadda242" 0 1 nil nil nil nil "Revisit what you consume" (("CATEGORY" . "revist_what_you_consume-Jul282021-172240") ("ID" . "085c2981-de2a-4dc3-a94f-3751eadda242") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 48 57 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" nil (24839 39771 205906 344000) (24839 39771 187906 697000) "085c2981-de2a-4dc3-a94f-3751eadda242" 0 1 nil nil nil nil "Revisit what you consume" (("CATEGORY" . "revist_what_you_consume-Jul282021-172240") ("ID" . "085c2981-de2a-4dc3-a94f-3751eadda242") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org") ("PRIORITY" . "B")) nil ("new") nil nil)) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" nil (24839 39771 205906 344000) (24839 39771 187906 697000) "085c2981-de2a-4dc3-a94f-3751eadda242" 0 1 nil nil nil nil "Revisit what you consume" (("CATEGORY" . "revist_what_you_consume-Jul282021-172240") ("ID" . "085c2981-de2a-4dc3-a94f-3751eadda242") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org") ("PRIORITY" . "B")) nil ("new") nil nil))) "unavailing" #("=has:backlinks=2 =@= quote        =@=new        =level:1= Who is Seneca? (Rome...  No one has had so much divine favor that they could guarantee themselves tomorrow.                                                                 " 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 17 20 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 34 37 (display "" node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 37 40 (face all-the-icons-dgreen node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 40 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 48 57 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-blue) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-blue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 57 58 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 58 81 (face org-roam-dim node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 81 82 (face org-roam-dim node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 82 83 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1) face org-roam-dim node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 83 84 (face org-roam-dim node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil)) 84 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" nil (24839 39771 19909 987000) (24839 39771 9910 182000) "e4521088-5cc9-49d3-a23f-4433a0242e22" 1 535 nil nil nil nil "No one has had so much divine favor that they could guarantee themselves tomorrow." (("CATEGORY" . "who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343") ("ROAM_ALIASES" . "\"No one has had so much divine favor / That they could guarantee themselves tomorrow. / God keeps our lives hurtling on, / Spinning in a whirlwind.\"") ("ID" . "e4521088-5cc9-49d3-a23f-4433a0242e22") ("REFERENCE" . "Seneca, Thyestes, 613") ("TIME" . "16:57:15") ("DATE" . "07/27/21") ("BLOCKED" . "") ("ALLTAGS" . ":quote:new:") ("TAGS" . ":quote:new:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org") ("PRIORITY" . "B") ("ITEM" . "No one has had so much divine favor that they could guarantee themselves tomorrow.")) nil ("new" "quote") nil nil))) #("=has:backlinks=1 =@= structure    = =           =level:0= 052 Blog                                                                                                                                                                     " 0 15 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 17 20 (display #("" 0 1 (rear-nonsticky t display (raise 0.022000000000000002) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 34 37 (display "" node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 48 57 (display #("" 0 1 (rear-nonsticky t display (raise -0.22000000000000003) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow))) node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil))) #("@b [Accept (buffer)]" 0 3 (invisible t) 3 12 (face minibuffer-prompt) 12 13 (face (bold minibuffer-prompt)) 13 20 (face minibuffer-prompt)) "My post" "Burly: Web dev" #("=has:backlinks=1 =@= structure    = =           =level:0= 052 Blog                                                                                                                                                                     " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil) display "") 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil)) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" nil (24833 37848 193870 598000) (24833 37848 168871 121000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" 0 1 nil nil nil nil "052 Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil ("structure") nil nil))) #("=not-backlinks=  =@= journal      = =           =level:0= yangRevolutionTemporalityModern2018 Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai                                              " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org" nil (24844 9996 444653 263000) (24844 9996 442653 298000) "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f" 0 1 nil nil nil nil "yangRevolutionTemporalityModern2018 Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai" (("CATEGORY" . "yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921") ("ROAM_REFS" . "cite:yangRevolutionTemporalityModern2018") ("ID" . "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org") ("PRIORITY" . "B")) nil ("journal") nil ("cite:yangRevolutionTemporalityModern2018")) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit org-roam-dim) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit org-roam-dim) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org" nil (24844 9996 444653 263000) (24844 9996 442653 298000) "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f" 0 1 nil nil nil nil "yangRevolutionTemporalityModern2018 Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai" (("CATEGORY" . "yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921") ("ROAM_REFS" . "cite:yangRevolutionTemporalityModern2018") ("ID" . "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org") ("PRIORITY" . "B")) nil ("journal") nil ("cite:yangRevolutionTemporalityModern2018"))) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org" nil (24844 9996 444653 263000) (24844 9996 442653 298000) "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f" 0 1 nil nil nil nil "yangRevolutionTemporalityModern2018 Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai" (("CATEGORY" . "yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921") ("ROAM_REFS" . "cite:yangRevolutionTemporalityModern2018") ("ID" . "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org") ("PRIORITY" . "B")) nil ("journal") nil ("cite:yangRevolutionTemporalityModern2018")) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org" nil (24844 9996 444653 263000) (24844 9996 442653 298000) "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f" 0 1 nil nil nil nil "yangRevolutionTemporalityModern2018 Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai" (("CATEGORY" . "yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921") ("ROAM_REFS" . "cite:yangRevolutionTemporalityModern2018") ("ID" . "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org") ("PRIORITY" . "B")) nil ("journal") nil ("cite:yangRevolutionTemporalityModern2018"))) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org" nil (24844 9996 444653 263000) (24844 9996 442653 298000) "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f" 0 1 nil nil nil nil "yangRevolutionTemporalityModern2018 Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai" (("CATEGORY" . "yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921") ("ROAM_REFS" . "cite:yangRevolutionTemporalityModern2018") ("ID" . "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org") ("PRIORITY" . "B")) nil ("journal") nil ("cite:yangRevolutionTemporalityModern2018")) display "") 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org" nil (24844 9996 444653 263000) (24844 9996 442653 298000) "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f" 0 1 nil nil nil nil "yangRevolutionTemporalityModern2018 Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai" (("CATEGORY" . "yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921") ("ROAM_REFS" . "cite:yangRevolutionTemporalityModern2018") ("ID" . "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org") ("PRIORITY" . "B")) nil ("journal") nil ("cite:yangRevolutionTemporalityModern2018"))) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org" nil (24844 9996 444653 263000) (24844 9996 442653 298000) "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f" 0 1 nil nil nil nil "yangRevolutionTemporalityModern2018 Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai" (("CATEGORY" . "yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921") ("ROAM_REFS" . "cite:yangRevolutionTemporalityModern2018") ("ID" . "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org") ("PRIORITY" . "B")) nil ("journal") nil ("cite:yangRevolutionTemporalityModern2018")) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org" nil (24844 9996 444653 263000) (24844 9996 442653 298000) "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f" 0 1 nil nil nil nil "yangRevolutionTemporalityModern2018 Revolution of Temporality: The Modern Schooling for Daoist Priests in Contemporary Shanghai" (("CATEGORY" . "yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921") ("ROAM_REFS" . "cite:yangRevolutionTemporalityModern2018") ("ID" . "a4cf2b16-2524-4686-b2f4-6d9f1ea5135f") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org") ("PRIORITY" . "B")) nil ("journal") nil ("cite:yangRevolutionTemporalityModern2018")))) "org-roam-bibtex" "journal" "embark-pre-action-hook" "embark" "embark-consult" "embark" #("=has:backlinks=6 =@= book         = =           =level:0= yaoIntroductionConfucianism2000 An introduction to Confucianism                                                                                                              " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" nil (24839 32287 31240 117000) (24839 32287 13240 467000) "f052ca57-d469-4ebd-830b-aece5319d8e4" 0 1 nil nil nil nil "yaoIntroductionConfucianism2000 An introduction to Confucianism" (("CATEGORY" . "yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636") ("ROAM_REFS" . "cite:yaoIntroductionConfucianism2000") ("ID" . "f052ca57-d469-4ebd-830b-aece5319d8e4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:yaoIntroductionConfucianism2000")) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" nil (24839 32287 31240 117000) (24839 32287 13240 467000) "f052ca57-d469-4ebd-830b-aece5319d8e4" 0 1 nil nil nil nil "yaoIntroductionConfucianism2000 An introduction to Confucianism" (("CATEGORY" . "yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636") ("ROAM_REFS" . "cite:yaoIntroductionConfucianism2000") ("ID" . "f052ca57-d469-4ebd-830b-aece5319d8e4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:yaoIntroductionConfucianism2000"))) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" nil (24839 32287 31240 117000) (24839 32287 13240 467000) "f052ca57-d469-4ebd-830b-aece5319d8e4" 0 1 nil nil nil nil "yaoIntroductionConfucianism2000 An introduction to Confucianism" (("CATEGORY" . "yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636") ("ROAM_REFS" . "cite:yaoIntroductionConfucianism2000") ("ID" . "f052ca57-d469-4ebd-830b-aece5319d8e4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:yaoIntroductionConfucianism2000")) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" nil (24839 32287 31240 117000) (24839 32287 13240 467000) "f052ca57-d469-4ebd-830b-aece5319d8e4" 0 1 nil nil nil nil "yaoIntroductionConfucianism2000 An introduction to Confucianism" (("CATEGORY" . "yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636") ("ROAM_REFS" . "cite:yaoIntroductionConfucianism2000") ("ID" . "f052ca57-d469-4ebd-830b-aece5319d8e4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:yaoIntroductionConfucianism2000"))) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" nil (24839 32287 31240 117000) (24839 32287 13240 467000) "f052ca57-d469-4ebd-830b-aece5319d8e4" 0 1 nil nil nil nil "yaoIntroductionConfucianism2000 An introduction to Confucianism" (("CATEGORY" . "yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636") ("ROAM_REFS" . "cite:yaoIntroductionConfucianism2000") ("ID" . "f052ca57-d469-4ebd-830b-aece5319d8e4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:yaoIntroductionConfucianism2000")) display "") 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" nil (24839 32287 31240 117000) (24839 32287 13240 467000) "f052ca57-d469-4ebd-830b-aece5319d8e4" 0 1 nil nil nil nil "yaoIntroductionConfucianism2000 An introduction to Confucianism" (("CATEGORY" . "yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636") ("ROAM_REFS" . "cite:yaoIntroductionConfucianism2000") ("ID" . "f052ca57-d469-4ebd-830b-aece5319d8e4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:yaoIntroductionConfucianism2000"))) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" nil (24839 32287 31240 117000) (24839 32287 13240 467000) "f052ca57-d469-4ebd-830b-aece5319d8e4" 0 1 nil nil nil nil "yaoIntroductionConfucianism2000 An introduction to Confucianism" (("CATEGORY" . "yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636") ("ROAM_REFS" . "cite:yaoIntroductionConfucianism2000") ("ID" . "f052ca57-d469-4ebd-830b-aece5319d8e4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:yaoIntroductionConfucianism2000")) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" nil (24839 32287 31240 117000) (24839 32287 13240 467000) "f052ca57-d469-4ebd-830b-aece5319d8e4" 0 1 nil nil nil nil "yaoIntroductionConfucianism2000 An introduction to Confucianism" (("CATEGORY" . "yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636") ("ROAM_REFS" . "cite:yaoIntroductionConfucianism2000") ("ID" . "f052ca57-d469-4ebd-830b-aece5319d8e4") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:yaoIntroductionConfucianism2000")))) #("=has:backlinks=6 =@= book         = =           =level:0= littlejohnDaoismIntroduction2014 Daoism: An Introduction                                                                                                                     " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" nil (24832 37805 144823 197000) (24831 16139 485571 689000) "3be16b0e-23f6-4a55-88cc-112cab97ed7d" 0 1 nil nil nil nil "littlejohnDaoismIntroduction2014 Daoism: An Introduction" (("CATEGORY" . "littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517") ("ROAM_REFS" . "cite:littlejohnDaoismIntroduction2014") ("ID" . "3be16b0e-23f6-4a55-88cc-112cab97ed7d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:littlejohnDaoismIntroduction2014")) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" nil (24832 37805 144823 197000) (24831 16139 485571 689000) "3be16b0e-23f6-4a55-88cc-112cab97ed7d" 0 1 nil nil nil nil "littlejohnDaoismIntroduction2014 Daoism: An Introduction" (("CATEGORY" . "littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517") ("ROAM_REFS" . "cite:littlejohnDaoismIntroduction2014") ("ID" . "3be16b0e-23f6-4a55-88cc-112cab97ed7d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:littlejohnDaoismIntroduction2014"))) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" nil (24832 37805 144823 197000) (24831 16139 485571 689000) "3be16b0e-23f6-4a55-88cc-112cab97ed7d" 0 1 nil nil nil nil "littlejohnDaoismIntroduction2014 Daoism: An Introduction" (("CATEGORY" . "littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517") ("ROAM_REFS" . "cite:littlejohnDaoismIntroduction2014") ("ID" . "3be16b0e-23f6-4a55-88cc-112cab97ed7d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:littlejohnDaoismIntroduction2014")) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" nil (24832 37805 144823 197000) (24831 16139 485571 689000) "3be16b0e-23f6-4a55-88cc-112cab97ed7d" 0 1 nil nil nil nil "littlejohnDaoismIntroduction2014 Daoism: An Introduction" (("CATEGORY" . "littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517") ("ROAM_REFS" . "cite:littlejohnDaoismIntroduction2014") ("ID" . "3be16b0e-23f6-4a55-88cc-112cab97ed7d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:littlejohnDaoismIntroduction2014"))) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" nil (24832 37805 144823 197000) (24831 16139 485571 689000) "3be16b0e-23f6-4a55-88cc-112cab97ed7d" 0 1 nil nil nil nil "littlejohnDaoismIntroduction2014 Daoism: An Introduction" (("CATEGORY" . "littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517") ("ROAM_REFS" . "cite:littlejohnDaoismIntroduction2014") ("ID" . "3be16b0e-23f6-4a55-88cc-112cab97ed7d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:littlejohnDaoismIntroduction2014")) display "") 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" nil (24832 37805 144823 197000) (24831 16139 485571 689000) "3be16b0e-23f6-4a55-88cc-112cab97ed7d" 0 1 nil nil nil nil "littlejohnDaoismIntroduction2014 Daoism: An Introduction" (("CATEGORY" . "littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517") ("ROAM_REFS" . "cite:littlejohnDaoismIntroduction2014") ("ID" . "3be16b0e-23f6-4a55-88cc-112cab97ed7d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:littlejohnDaoismIntroduction2014"))) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" nil (24832 37805 144823 197000) (24831 16139 485571 689000) "3be16b0e-23f6-4a55-88cc-112cab97ed7d" 0 1 nil nil nil nil "littlejohnDaoismIntroduction2014 Daoism: An Introduction" (("CATEGORY" . "littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517") ("ROAM_REFS" . "cite:littlejohnDaoismIntroduction2014") ("ID" . "3be16b0e-23f6-4a55-88cc-112cab97ed7d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:littlejohnDaoismIntroduction2014")) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" nil (24832 37805 144823 197000) (24831 16139 485571 689000) "3be16b0e-23f6-4a55-88cc-112cab97ed7d" 0 1 nil nil nil nil "littlejohnDaoismIntroduction2014 Daoism: An Introduction" (("CATEGORY" . "littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517") ("ROAM_REFS" . "cite:littlejohnDaoismIntroduction2014") ("ID" . "3be16b0e-23f6-4a55-88cc-112cab97ed7d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org") ("PRIORITY" . "B")) nil ("book") nil ("cite:littlejohnDaoismIntroduction2014")))) #("=has:backlinks=4 = =              = =           =level:0= RELS0120                                                                                                                                                                     " 0 15 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" nil (24842 45638 545301 636000) (24842 45638 522302 56000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" 0 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil) display #("" 0 1 (face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) font-lock-face (:family "Material Icons" :height 0.9900000000000001 :inherit all-the-icons-dblue) display (raise -0.22000000000000003) rear-nonsticky t))) 15 17 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" nil (24842 45638 545301 636000) (24842 45638 522302 56000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" 0 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil)) 17 20 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" nil (24842 45638 545301 636000) (24842 45638 522302 56000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" 0 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil) display #("" 0 1 (face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) font-lock-face (:family "FontAwesome" :height 0.77 :inherit all-the-icons-dgreen) display (raise 0.022000000000000002) rear-nonsticky t))) 20 34 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" nil (24842 45638 545301 636000) (24842 45638 522302 56000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" 0 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil)) 34 37 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" nil (24842 45638 545301 636000) (24842 45638 522302 56000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" 0 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil) display "") 37 48 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" nil (24842 45638 545301 636000) (24842 45638 522302 56000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" 0 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil)) 48 57 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" nil (24842 45638 545301 636000) (24842 45638 522302 56000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" 0 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil) display #("" 0 1 (face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) font-lock-face (:family "Material Icons" :height 1.1 :inherit all-the-icons-yellow) display (raise -0.22000000000000003) rear-nonsticky t))) 57 231 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" nil (24842 45638 545301 636000) (24842 45638 522302 56000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" 0 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil))) "Burly: RELS0120" #("stash@{0} On Org-ref-cite: Bibtex-completion display formats" 0 9 (face magit-hash)) "On Org-ref-cite: Bibtex-completion display formats" "bibtex-completion-display-formats" "Org-ref-cite" "On Persistent_eyebrowse: Update files" "Persistent_eyebrowse" "On master: Org-ref-cite" "org-roam-db-update-on-save" "writing" "writing" "kb/lit-categories"))
(setq counsel-M-x-history '(#("counsel mode" 0 12 (ivy-index 0)) "counsel-mode" "execute-extended-command" #("flimenu" 0 7 (ivy-index 1)) "flimenu-mode" #("counsel des" 0 11 (ivy-index 2)) "counsel-describe-symbol" #("theme" 0 5 (ivy-index 2)) "consult-theme" #("selec mode" 0 10 (ivy-index 6)) "selectrum-mode" #("selectrum mode" 0 14 (ivy-index 2)) "selectrum-mode" #("customize group" 0 15 (ivy-index 4)) "customize-group" #("group customize" 0 15 (ivy-index 4)) "customize-group" #("desc face" 0 9 (ivy-index 0)) "describe-face" "customize-group" "describe-face" #("counsel faces" 0 13 (ivy-index 0)) "counsel-faces" "customize-group" "counsel-faces" #("faces" 0 5 (ivy-index 4)) "counsel-faces" #("cg group" 0 8 (ivy-index 5)) "customize-group" #("embark-act" 0 10 (ivy-index 1)) #("which-key-mode" 0 14 (ivy-index 0)) #("embark-.ct" 0 10 (ivy-index 1)) #("extended e" 0 10 (ivy-index 1)) "execute-extended-command" #("embark act" 0 10 (ivy-index 4)) #("bookmark load" 0 13 (ivy-index 0)) "bookmark-load" "bookmark-save" #("bookmark save" 0 13 (ivy-index 0)) "bookmark-save" #("which-key" 0 9 (ivy-index 8)) #("embark-key" 0 10 (ivy-index 0)) "embark-keymap-help" "embark-act-noexit" #("visual line mode" 0 16 (ivy-index 0)) "visual-line-mode" #("visual li" 0 9 (ivy-index 2)) "visual-line-mode" #("ivy pr" 0 6 (ivy-index 3)) "ivy-prescient-mode" #("eww-buffer-select" 0 17 (ivy-index 0)) "ivy-prescient-mode" #("prescient" 0 9 (ivy-index 3)) "prescient--load" #("ivy rich mode" 0 13 (ivy-index 0)) "ivy-rich-mode" "ivy-rich-mode" #("esup" 0 4 (ivy-index 0)) #("bug-hunter" 0 10 (ivy-index 1)) "bug-hunter-init-file" "all-the-icons-ivy-rich-mode" #("ivy mode" 0 8 (ivy-index 1)) "all-the-icons-ivy-rich-mode" #("helm-find-file" 0 14 (ivy-index 1)) "helm-find-files" #("copy-file" 0 9 (ivy-index 3)) #("bug hunt" 0 8 (ivy-index 1)) "bug-hunter-init-file" #("bug hunter" 0 10 (ivy-index 1)) "bug-hunter-init-file" #("bug hun" 0 7 (ivy-index 1)) "bug-hunter-init-file" #("selectrum rg" 0 12 (ivy-index 1)) "selectrum-rg" #("ivy pre" 0 7 (ivy-index 3)) "ivy-prescient-mode" #("ivy rich" 0 8 (ivy-index 1)) "ivy-rich-mode" #("all the icons ivy rich mode" 0 27 (ivy-index 0)) "all-the-icons-ivy-rich-mode" #("all the icons mode" 0 18 (ivy-index 0)) "all-the-icons-ivy-rich-mode" "ivy-rich-mode" #("ivy rich mo" 0 11 (ivy-index 0)) "ivy-rich-mode" #("^counsel mode" 0 13 (ivy-index 0)) "counsel-mode" #("amx" 0 3 (ivy-index 2)) #("execute-extended-command" 0 24 (ivy-index 1)) #("amx-mode" 0 8 (ivy-index 1)) #("execute ex" 0 10 (ivy-index 0)) #("global" 0 6 (ivy-index 0)) "global-company-mode" #("global company" 0 14 (ivy-index 0)) "global-company-mode" #("consult-file-externally" 0 23 (ivy-index 0)) #("consult file exter" 0 18 (ivy-index 0)) #("copy" 0 4 (ivy-index 0)) #("narrow sub" 0 10 (ivy-index 2)) "outshine-narrow-to-subtree" #("narrow tree" 0 11 (ivy-index 0))))
(setq evil-jumps-history '((7902 "/usr/local/share/emacs/27.2/lisp/eshell/esh-mode.el.gz") (1955 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (7902 "/usr/local/share/emacs/27.2/lisp/eshell/esh-mode.el.gz") (20124 "/usr/local/share/emacs/27.2/lisp/eshell/esh-mode.el.gz") (1365 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (2205 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (248 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (1657 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (1939 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (248 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (5939 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (248 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (2133 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (3256 "/home/krisbalintona/.emacs.d/init.el") (2133 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (3256 "/home/krisbalintona/.emacs.d/init.el") (1968 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (3256 "/home/krisbalintona/.emacs.d/init.el") (1982 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (235 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (3256 "/home/krisbalintona/.emacs.d/init.el") (235 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (3229 "/home/krisbalintona/.emacs.d/init.el") (235 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (1 "/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el") (128 "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") (347 "/home/krisbalintona/.emacs.d/elisp/checking-spelling-rcp.el") (2394 "/home/krisbalintona/.emacs.d/init.el") (747 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (2394 "/home/krisbalintona/.emacs.d/init.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (128 "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (128 "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (127 "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (127 "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (846 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (1 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (4133 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (5975 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (4090 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (3514 "/home/krisbalintona/.emacs.d/init.el") (1 "/home/krisbalintona/.emacs.d/init.el") (3298 "/home/krisbalintona/.emacs.d/init.el") (1319 "/home/krisbalintona/.emacs.d/init.el") (12685 "/home/krisbalintona/.emacs.d/configs/qol-packages.org") (12961 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (5656 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (1966 "/home/krisbalintona/.emacs.d/elisp/faces-rcp.el") (12763 "/home/krisbalintona/.emacs.d/configs/qol-packages.org") (1966 "/home/krisbalintona/.emacs.d/elisp/faces-rcp.el") (5650 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (12944 "/home/krisbalintona/.emacs.d/configs/qol-packages.org") (5650 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (1319 "/home/krisbalintona/.emacs.d/init.el") (5650 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (13094 "/home/krisbalintona/.emacs.d/configs/qol-packages.org") (5650 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (13094 "/home/krisbalintona/.emacs.d/configs/qol-packages.org") (5650 "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el") (12685 "/home/krisbalintona/.emacs.d/configs/qol-packages.org") (836 "/home/krisbalintona/.emacs.d/elisp/faces-rcp.el") (1319 "/home/krisbalintona/.emacs.d/init.el") (1254 "/home/krisbalintona/.emacs.d/init.el") (2177 "/home/krisbalintona/.emacs.d/init.el")))
(setq recentf-list '("/home/krisbalintona/.emacs.d/elisp/shell-eshell-rcp.el" "/usr/local/share/emacs/27.2/lisp/eshell/esh-mode.el.gz" "/home/krisbalintona/.emacs.d/init.el" "/home/krisbalintona/.emacs.d/elisp/checking-spelling-rcp.el" "/home/krisbalintona/.emacs.d/elisp/themes-rcp.el" "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org" "/home/krisbalintona/.emacs.d/configs/qol-packages.org" "/home/krisbalintona/.emacs.d/elisp/faces-rcp.el" "/home/krisbalintona/.emacs.d/elisp/early-packages-rcp.el" "/home/krisbalintona/.emacs.d/elisp/completion-selectrum-rcp.el" "/home/krisbalintona/.emacs.d/elisp/checking-grammar-rcp.el" "/home/krisbalintona/.emacs.d/elisp/org-roam-general-rcp.el" "/home/krisbalintona/.emacs.d/elisp/system-variables-rcp.el" "/home/krisbalintona/Documents/org-database/roam/possible_courses-Jun162021-015016.org" "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org" "/home/krisbalintona/Documents/org-database/roam/who_is_seneca_rome_s_greatest_stoic_thinker-Jul272021-162343.org" "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" "/home/krisbalintona/Documents/org-database/roam/have_a_vast_input_but_small_focus-Jul132021-232501.org" "/home/krisbalintona/Documents/org-database/roam/blog_focus_narrowly_but_consume_vastly-Jul282021-132834.org" "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" "/home/krisbalintona/Documents/org-database/roam/004_vocabulary-Jul092021-002027.org" "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" "/home/krisbalintona/Documents/org-database/roam/engl0930_final_portfolio-Aug092021-083639.org" "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" "/home/krisbalintona/Documents/org-database/roam/engl0930_paper_2-Jun272021-011222.org" "/home/krisbalintona/Documents/org-database/roam/writing_is_key_to_the_iterative_development_of_ideas-Jul202021-190907.org" "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" "/home/krisbalintona/Documents/org-database/roam/fear_holds_us_back-Jul282021-200307.org" "/home/krisbalintona/Documents/org-database/roam/live_for_the_long_term_not_expediency-Jul292021-173801.org" "/home/krisbalintona/Documents/org-database/roam/090_people-Aug022021-033021.org" "/home/krisbalintona/Documents/org-database/library/useful-emacs-resources.org" "/home/krisbalintona/Documents/org-database/library/transcript-drjinjing_lin.org" "/home/krisbalintona/Documents/org-database/library/system-wide-package-groups.org" "/home/krisbalintona/Documents/org-database/library/potential-clubs.org" "/home/krisbalintona/Documents/org-database/library/mindfulness-center-study.org" "/home/krisbalintona/Documents/org-database/library/interview-jingjing-lin.org" "/home/krisbalintona/Documents/org-database/library/doom-to-vanilla.org" "/home/krisbalintona/Documents/org-database/library/critical-reviews.org" "/home/krisbalintona/Documents/org-database/library/brown-interviews-meeting-notes.org" "/home/krisbalintona/Documents/org-database/library/brown-interviews-emails.org" "/home/krisbalintona/Documents/org-database/library/brown-interviews-application.org" "/home/krisbalintona/Documents/org-database/library/POBS0910-research-list.org" "/home/krisbalintona/Documents/org-database/roam/100_books-Aug042021-023213.org" "/home/krisbalintona/Documents/org-database/roam/tactics_for_engaging_with_material-Jul152021-023404.org" "/home/krisbalintona/Documents/org-database/roam/revist_what_you_consume-Jul282021-172240.org" "/home/krisbalintona/Documents/org-database/roam/the_key_to_remembering_what_you_read_is_engaging_with_the_material-Jul032021-011511.org" "/home/krisbalintona/Documents/org-database/roam/2_minute_rule-Jul232021-004205.org" "/home/krisbalintona/Documents/org-database/roam/pobs0930-Jun132021-192002.org" "/home/krisbalintona/Documents/org-database/roam/public_writing_heightens_the_stakes-Jun052021-011641.org" "/home/krisbalintona/Documents/org-database/roam/writing_is_another_form_of_writing-Jul212021-115335.org" "/home/krisbalintona/Documents/org-database/roam/quotes-Jun062021-185530.org" "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "/home/krisbalintona/Documents/org-database/roam/lex_fridman_164_andrew_huberman_sleep_dreams_creativity_fasting_and_neuroplasticity-Aug012021-182445.org" "/home/krisbalintona/Documents/org-database/roam/yangRevolutionTemporalityModern2018-revolution_of_temporality_the_modern_schooling_for_daoist_priests_in_contemporary_shanghai-Aug052021-135921.org" "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" "/home/krisbalintona/Documents/org-database/roam/kohnTaoistExperienceAnthology1993-the_taoist_experience_an_anthology-Jul112021-150621.org" "/home/krisbalintona/Documents/org-database/roam/ecoHowWriteThesis2015-how_to_write_a_thesis-Jul072021-193747.org" "/home/krisbalintona/Documents/org-database/roam/tevisQueenGambit2003-the_queen_s_gambit-Jul302021-003442.org" "/home/krisbalintona/Documents/org-database/roam/huxleyBraveNewWorld2006-brave_new_world-Aug042021-022413.org" "/home/krisbalintona/Documents/org-database/roam/bibliographic/master-lib.bib" "/home/krisbalintona/Documents/org-database/roam/blog_zettelkasten_is_less_special_than_you_think-Jun292021-012324.org" "/home/krisbalintona/Documents/org-database/roam/this_simple_note_taking_method_will_help_you_read_more_and_remember_what_you_ve_read-Jul032021-002223.org" "/home/krisbalintona/Documents/org-database/roam/why_you_should_re_read_not_just_read_books-Jul012021-231441.org" "/home/krisbalintona/Documents/org-database/roam/interview_dr_jingjing_lin-Jun152021-214331.org" "/home/krisbalintona/Documents/org-database/roam/create_zettel_from_reading_notes_according_to_the_principle_of_atomicity-Jun042021-233627.org" "/home/krisbalintona/Documents/org-database/roam/the_3_step_system_for_reading_like_a_pro-Jun262021-185107.org" "/home/krisbalintona/Documents/org-database/roam/the_ryan_holiday_notecard_system-Jul012021-210829.org" "/home/krisbalintona/Documents/org-database/roam/lex_fridman_podcast_101_joscha_bach_artificial_consciousness_and_the_nature_of_reality-Jul302021-151825.org" "/home/krisbalintona/Documents/org-database/roam/buoy_mock_write_up-Jul282021-104657.org" "/home/krisbalintona/Documents/org-database/roam/lex_fridman_podcast_198_sara_walker_the_origin_of_life_on_earth_and_alien_worlds-Jul272021-004444.org" "/home/krisbalintona/Documents/org-database/roam/don_t_deify_authority_or_your_idols-Jul272021-004325.org" "/home/krisbalintona/Documents/org-database/roam/lex_fridman_podcast_132_george_hotz_hacking_the_simulation_learning_to_drive_with_neural_nets-Jul272021-003843.org" "/home/krisbalintona/Documents/org-database/roam/pregadioWayGoldenElixir2019.org" "/home/krisbalintona/Documents/org-database/roam/happiness_is_an_epiphenomenon_of_a_life_well_lived-Jul242021-191735.org" "/home/krisbalintona/Documents/org-database/roam/your_work_should_be_that_which_you_want_to_do-Jul242021-171821.org" "/home/krisbalintona/Documents/org-database/roam/061_contact_list-Jul242021-160305.org" "/home/krisbalintona/Documents/org-database/roam/062_coldcalling-Jul242021-160106.org" "/home/krisbalintona/Documents/org-database/roam/brownMakeItStick2014.org" "/home/krisbalintona/Documents/org-database/roam/the_education_system_teaches_us_how_to_regurgitate_and_understand_someone_else_s_thinking_rather_than_develop_our_own-Jul232021-010838.org" "/home/krisbalintona/Documents/org-database/roam/tasks_are_more_intimidating_in_our_mind_than_in_reality-Jul232021-010204.org" "/home/krisbalintona/Documents/org-database/roam/how_to_build_a_website_in_2021-Jul232021-005414.org" "/home/krisbalintona/Documents/org-database/roam/consistency_is_key-Jul232021-004928.org" "/home/krisbalintona/Documents/org-database/roam/academics_is_less_important_in_college_than_networking_and_experiencing_life-Jul232021-004451.org" "/home/krisbalintona/Documents/org-database/roam/productivity_is_defined_too_narrowly-Jul232021-002600.org" "/home/krisbalintona/Documents/org-database/roam/053_buoy-Jul222021-225943.org" "/home/krisbalintona/Documents/org-database/roam/050_commitments-Jul222021-225620.org" "/home/krisbalintona/Documents/org-database/roam/050_commitments-Jul222021-225723.org" "/home/krisbalintona/Documents/org-database/roam/writing_is_synonymous_with_thinking-Jul202021-190641.org" "/home/krisbalintona/Documents/org-database/roam/how_to_show_not_tell_the_complete_writing_guide-Jul212021-113808.org" "/home/krisbalintona/Documents/org-database/roam/lex_fridman_podcast_148_charles_isbell_and_michael_littman_machine_learning_and_education-Jul202021-215542.org" "/home/krisbalintona/Documents/org-database/roam/queenInventoriesRethinkingSchool2001-inventories_of_the_past_rethinking_the_school_affiliation_of_the_huainanzi-Jun292021-145149.org" "/home/krisbalintona/Documents/org-database/roam/liPoetryDiplomacyZuozhuan2014-poetry_and_diplomacy_in_the_zuozhuan-Jun042021-220958.org" "/home/krisbalintona/Documents/org-database/roam/defoortThereSuchThing2001-is_there_such_a_thing_as_chinese_philosophy_arguments_of_an_implicit_debate-Jun042021-203813.org" "/home/krisbalintona/Documents/org-database/roam/linux_system-Jul172021-104308.org" "/home/krisbalintona/Documents/org-database/roam/041_brown_resources-Jul142021-221431.org" "/home/krisbalintona/Documents/org-database/roam/003_brown-Jul142021-221125.org" "/home/krisbalintona/Documents/org-database/roam/lex_fridman_podcast_185_sam_harris_consciousness_free_will_psychedelics_ai_ufos_and_meaning-Jul142021-155120.org" "/home/krisbalintona/Documents/org-database/roam/ancient_chinese_traditions_recognized_an_issue_of_language_and_disagreed_on_its_limits-Jul122021-011655.org" "/home/krisbalintona/Documents/org-database/roam/rels0120_paper_2-Jun152021-151653.org" "/home/krisbalintona/Documents/org-database/roam/ancient_chinese_traditions_had_different_approaches_to_approaching_the_potential_problem_of_transmission_of_knowledge_through_languauge-Jul052021-171548.org" "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "/home/krisbalintona/Documents/org-database/roam/bokenkampEarlyDaoistScriptures1999-early_daoist_scriptures-Jul062021-154125.org" "/home/krisbalintona/Documents/org-database/roam/supermemo_help_incremental_learning-Jul032021-215814.org" "/home/krisbalintona/Documents/org-database/roam/zettelkasten_is_just_a_way_to_interact_with_your_knowledge-Jun292021-232420.org" "/home/krisbalintona/Documents/org-database/roam/start_simple_when_starting_a_zettelkasten-Jun272021-160350.org" "/home/krisbalintona/Documents/org-database/roam/introduction_to_the_zettelkasten_method-Jun042021-234311.org" "/home/krisbalintona/Documents/org-database/roam/zettelkasen_enhances_idea_emergence-Jun052021-012500.org" "/home/krisbalintona/Documents/org-database/roam/temporal_separation_drives_enrichment_from_elaboration-Jul032021-013322.org" "/home/krisbalintona/Documents/org-database/roam/lex_fridman_podcast_196_yeonmi_park_north_korea-Jul012021-151817.org" "/home/krisbalintona/Documents/org-database/roam/the_value_of_org_roam_v2-Jun302021-154255.org" "/home/krisbalintona/Documents/org-database/roam/reality_has_too_many_factors_to_mentally_calculate-Jun302021-003914.org" "/home/krisbalintona/Documents/org-database/roam/do_first_then_course_correct-Jun302021-003450.org" "/home/krisbalintona/Documents/org-database/roam/asking_about_atomicity_is_the_wrong_question-Jun302021-001634.org" "/home/krisbalintona/Documents/org-database/roam/fiverr-Jun292021-222438.org" "/home/krisbalintona/Documents/org-database/roam/lex_fridman_podcast_172_librex_and_the_free_exchange_of_ideas_on_college_campuses-Jun292021-162944.org" "/home/krisbalintona/Documents/org-database/roam/liuDaoCompanionDaoist2015b-dao_companion_to_daoist_philosophy-Jun292021-145056.org" "/home/krisbalintona/Documents/org-database/roam/ap_microeconomics-Jun282021-181927.org" "/home/krisbalintona/Documents/org-database/roam/what_are_the_keys_to_a_good_working_environment-Jun272021-161240.org" "/home/krisbalintona/Documents/org-database/roam/how_d_i_decide_to_make_a_new_zettel-Jun272021-154400.org" "/home/krisbalintona/Documents/org-database/roam/jre_mma_show_11_with_john_danaher-Jun272021-151449.org" "/home/krisbalintona/Documents/org-database/roam/eisenhower_method-Jun232021-164959.org" "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org" "/home/krisbalintona/Documents/org-database/roam/prepare_for_when_your_plan_fails-Jun232021-164517.org" "/home/krisbalintona/Documents/org-database/roam/production_should_be_separated_from_editing_when_writing-Jun212021-181743.org" "/home/krisbalintona/Documents/org-database/roam/cheeHowWriteAutobiographical2018-how_to_write_an_autobiographical_novel_essays-Jun212021-134717.org" "/home/krisbalintona/Documents/org-database/roam/interview_protesilaos_stavrou-Jun152021-214059.org" "/home/krisbalintona/Documents/org-database/roam/bui-Jun152021-212918.org" "/home/krisbalintona/Documents/org-database/roam/monetize_yourself-Jun122021-223708.org" "/home/krisbalintona/Documents/org-database/roam/knowledge_is_information_with_a_purpose-Jun132021-184454.org" "/home/krisbalintona/Documents/org-database/roam/implementing_a_digital_zettelkasten_using_block_references_in_roam_research-Jun042021-235544.org" "/home/krisbalintona/Documents/org-database/roam/how_to_plan_your_day-Jun182021-220912.org" "/home/krisbalintona/Documents/org-database/roam/debarySourcesChineseTradition1999-sources_of_chinese_tradition-Jun042021-193605.org" "/home/krisbalintona/Documents/org-database/roam/courses-Jun042021-223103.org" "/home/krisbalintona/Documents/org-database/roam/andy_matuschak_s_working_notes-Jun042021-231116.org" "/home/krisbalintona/Documents/org-database/roam/phil0650-Jun192021-230443.org" "/home/krisbalintona/Documents/org-database/roam/bui_interview_amazing_marvin_team-Jun192021-172835.org" "/home/krisbalintona/Documents/org-database/roam/5_guiding_guiding_principles_for_zettelkasten_newcomers-Jun182021-204251.org" "/home/krisbalintona/Documents/org-database/roam/what_is_the_difference_between_incremental_writing_and_revision-Jun182021-145629.org" "/home/krisbalintona/Documents/org-database/roam/obsidian_incremental_writing_plugin-Jun182021-145247.org" "/home/krisbalintona/Documents/org-database/roam/say_without_saying_in_creative_writing-Jun182021-142600.org" "/home/krisbalintona/Documents/org-database/roam/job_applications-Jun182021-022743.org" "/home/krisbalintona/Documents/org-database/roam/why_amazing_marvin_is_one_of_a_kind-Jun172021-201735.org" "/home/krisbalintona/Documents/org-database/roam/blog_amazing_marvin_starter_pack-Jun172021-014024.org" "/home/krisbalintona/Documents/org-database/roam/transcript_dr_jingjing_lin-Jun152021-214406.org" "/home/krisbalintona/Documents/org-database/roam/transcript_protesilaos_stavrou-Jun152021-214137.org" "/home/krisbalintona/Documents/org-database/roam/transcript_john_jones-Jun152021-214024.org" "/home/krisbalintona/Documents/org-database/roam/transcript_akash_singirikonda-Jun152021-213933.org" "/home/krisbalintona/Documents/org-database/roam/interview_meliisa_chen-Jun152021-213525.org" "/home/krisbalintona/Documents/org-database/roam/interview_patrick_rothfuss-Jun152021-213454.org" "/home/krisbalintona/Documents/org-database/roam/interview_stephen_park-Jun152021-213308.org" "/home/krisbalintona/Documents/org-database/roam/interview_stephen_west-Jun152021-213219.org" "/home/krisbalintona/Documents/org-database/roam/interview_max_deutsch-Jun152021-213129.org" "/home/krisbalintona/Documents/org-database/roam/ahrensHowTakeSmart2017-how_to_take_smart_notes_one_simple_technique_to_boost_writing_learning_and_thinking_for_students_academics_and_nonfiction_book_writers-Jun142021-003711.org" "/home/krisbalintona/Documents/org-database/roam/contextualization_is_key_to_getting_value_out_of_insight-Jun132021-190259.org" "/home/krisbalintona/Documents/org-database/roam/the_mental_squeezing_point-Jun132021-185957.org" "/home/krisbalintona/Documents/org-database/roam/the_zettelkasten_index_demands_the_contextualization_of_knowledge-Jun132021-185853.org" "/home/krisbalintona/Documents/org-database/roam/decontextualization_is_dangerous-Jun132021-185710.org" "/home/krisbalintona/Documents/org-database/roam/brownMakeItStick2014-make_it_stick_the_science_of_successful_learning-Jun122021-233751.org" "/home/krisbalintona/Documents/org-database/roam/always_pair_learning_with_its_application-Jun122021-225836.org" "/home/krisbalintona/Documents/org-database/roam/be_your_genuine_self-Jun122021-223149.org" "/home/krisbalintona/Documents/org-database/roam/surround_yourself_with_people_you_want_to_be_like-Jun122021-222951.org" "/home/krisbalintona/Documents/org-database/roam/rels0120_paper_1-Jun062021-184410.org" "/home/krisbalintona/Documents/org-database/roam/personal_management_systems_should_be_structured_in_the_way_they_will_be_used-Jun052021-012402.org" "/home/krisbalintona/Documents/org-database/roam/you_lose_sight_of_the_end_when_you_focus_on_the_means-Jun052021-012236.org" "/home/krisbalintona/Documents/org-database/roam/the_benefits_of_practicing_zettelkasten_and_evergreen_notes_are_conflated_with_the_benefits_of_the_unique_traits_of_the_systems-Jun052021-012133.org" "/home/krisbalintona/Documents/org-database/roam/target_the_thought_generator_for_revolutionary_thought-Jun052021-012049.org" "/home/krisbalintona/Documents/org-database/roam/spaced_repetition_is_valuable_in_decision_heavy_personal_management_systems-Jun052021-011829.org" "/home/krisbalintona/Documents/org-database/roam/fiction_parallels_the_mistake_of_purely_rational_thinking-Jun052021-011149.org" "/home/krisbalintona/Documents/org-database/roam/your_actions_will_perfectly_reflect_your_thoughts-Jun052021-010812.org" "/home/krisbalintona/Documents/org-database/roam/a_system_will_always_perfectly_produce_the_results_it_is_structured_for-Jun052021-010720.org" "/home/krisbalintona/Documents/org-database/roam/starting_is_the_most_important_part_to_accomplish-Jun052021-003949.org" "/home/krisbalintona/Documents/org-database/roam/an_inbox_should_be_processed_just_as_fast_as_it_is_filled-Jun052021-002919.org" "/home/krisbalintona/Documents/org-database/roam/sleep_is_a_natural_therapist-Jun052021-002631.org" "/home/krisbalintona/Documents/org-database/roam/humans_are_effective_at_knowledge_synthesis-Jun052021-002510.org" "/home/krisbalintona/Documents/org-database/roam/humans_have_insufficient_working_memory_for_knowledge_work-Jun052021-002435.org" "/home/krisbalintona/Documents/org-database/roam/temporal_separation_is_the_most_effective_knowledge_filter_for_relevance-Jun052021-002332.org" "/home/krisbalintona/Documents/org-database/roam/mocs_are_a_low_threshold_way_to_create_structure_in_a_pkm_zettelkasten-Jun052021-002229.org" "/home/krisbalintona/Documents/org-database/roam/modern_pkm_zettelkastens_require_much_more_note_processing_and_iteration-Jun052021-002127.org" "/home/krisbalintona/Documents/org-database/roam/modern_pkm_implementations_of_zettelkasten_should_be_different_from_luhmann_s-Jun052021-002005.org" "/home/krisbalintona/Documents/org-database/roam/incremental_writing_is_a_possible_solution_to_undirected_and_frequent_note_creation-Jun052021-001813.org" "/home/krisbalintona/Documents/org-database/roam/modern_technology_transcends_the_physical_zettelkasten_practice_and_constraints-Jun052021-001731.org" "/home/krisbalintona/Documents/org-database/roam/structure_isn_t_inherently_bad_in_pkm_systems_superimposed_structure_is-Jun052021-000726.org" "/home/krisbalintona/Documents/org-database/roam/your_zettelkasten_should_be_made_for_why_you_use_it-Jun052021-000107.org" "/home/krisbalintona/Documents/org-database/roam/humans_want_to_take_the_easy_route-Jun042021-233246.org" "/home/krisbalintona/Documents/org-database/roam/friction_is_resistance_to_habit_and_the_enemy_of_change-Jun042021-233123.org" "/home/krisbalintona/Documents/org-database/roam/utilize_friction_to_foster_ease_and_prevent_regression_of_personal_growth-Jun042021-233050.org" "/home/krisbalintona/Documents/org-database/roam/taxonomy_of_note_types-Jun042021-232939.org" "/home/krisbalintona/Documents/org-database/roam/find_atomicity_by_violating_it-Jun042021-230809.org" "/home/krisbalintona/Documents/org-database/roam/mocs_wrangle_notes_eclectically-Jun042021-230404.org" "/home/krisbalintona/Documents/org-database/roam/purpose_is_necessary_to_induce_alignment_and_achieve-Jun042021-230211.org" "/home/krisbalintona/Documents/org-database/roam/what_is_an_moc-Jun042021-225823.org" "/home/krisbalintona/Documents/org-database/roam/create_an_moc_only_when_the_mass_of_information_is_too_large-Jun042021-224703.org" "/home/krisbalintona/Documents/org-database/roam/millerTellItSlant2019-tell_it_slant_third_edition_3rd_edition-Jun042021-223855.org" "/home/krisbalintona/Documents/org-database/roam/journals/2021.org" "/home/krisbalintona/Documents/org-database/latex/rels0120-paper_1.tex" "/home/krisbalintona/Documents/org-database/latex/header-chicago_manual.tex" "/home/krisbalintona/Documents/org-database/library/interview-RCWaldun.org" "/home/krisbalintona/Documents/org-database/library/writing_ideas.org" "/home/krisbalintona/Documents/org-database/latex/east0650-final_code_switching.tex" "/home/krisbalintona/Documents/org-database/latex/template-chicago_manual.tex" "/home/krisbalintona/Documents/org-database/latex/POBS0910-final-paper.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-midterm.tex" "/home/krisbalintona/Documents/org-database/latex/east0650-tannen_gendered_language.tex" "/home/krisbalintona/Documents/org-database/latex/east0650-gender_differences_convo_analysis.tex" "/home/krisbalintona/Documents/org-database/latex/example-cms.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-kant_critique_of_reason.tex" "/home/krisbalintona/Documents/org-database/latex/template-mla.tex" "/home/krisbalintona/Documents/org-database/latex/phil0650-midterm-hedonism_and_happiness.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-hume_on_causal_inference.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-descartes_mind_and_body.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-locke_on_innate_ideas.tex" "/home/krisbalintona/Documents/org-database/latex/POBS0910-niccolo-machiavelli.tex" "/etc/fstab" "/home/krisbalintona/.authinfo"))
