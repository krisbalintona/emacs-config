;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by â€˜savehistâ€™.

(setq savehist-minibuffer-history-variables '(ivy-history counsel-org-goto-history counsel-apropos-history helm-apropos-history helm-occur-history helm-M-x-input-history org-tags-history selectrum-swiper-history empty-history ivy-bibtex-history counsel-git-grep-history counsel-describe-symbol-history file-name-history minibuffer-history counsel-M-x-history))
(setq helm-occur-history '("kbd"))
(setq org-tags-history '("CONFIG"))
(setq selectrum-swiper-history '(#("** Company-box" 0 1 (fontified t face org-hide line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 50 selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations))) 1 2 (fontified t face (org-superstar-header-bullet org-level-2) composition (1 1 [9679]) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 50 selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations))) 2 3 (fontified t face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 50 selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations))) 3 14 (fontified t face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 50 selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)))) #("    (company-require-match 'company-explicit-action-p)" 0 4 (selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)) line-num 27 wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 4 5 (selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)) line-num 27 wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 5 53 (selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)) line-num 27 wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 53 54 (selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)) line-num 27 wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) #("    (company-require-match 'never)" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 26 selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations))) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 26 selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations))) 5 33 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 26 selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations))) 33 34 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 26 selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations))))))
(setq ivy-bibtex-history '(#("canto" 0 5 (ivy-index 0)) "ðŸ–‹ ðŸ–‡ White, Landeg The Lusiads, Canto V book whiteLusiadsCanto"))
(setq counsel-git-grep-history '(#("all-theicons" 0 12 (ivy-index 0)) "configs/qol-packages.org:70:* All-the-icons" #("ace-link" 0 8 (ivy-index 2)) "configs/qol-packages.org:249:     \"M-o\" 'ace-link" #("ace link" 0 8 (ivy-index 0)) "var-old/amx-save.el:254: (ace-link . 2)" #("golden-ratio" 0 12 (ivy-index 1)) "configs/base-config.org:499:** Golden-ratio" #("company-box" 0 11 (ivy-index 8)) "configs/completion-frameworks.org:50:** Company-box" #("highlight-function-calls" 0 24 (ivy-index 2)) "configs/programming.org:131:* Highlight-function-calls" "var/amx-save.el:4: highlight-function-calls-mode" #("org- kb/" 0 8 (ivy-index 0)) "configs/org-agenda.org:217:   \"s\" 'kb/org-refile-to-reverse-datetree-archive ; Archiving tasks with org-reverse-datetree" #("efile \"" 0 7 (ivy-index 24)) "configs/org-agenda.org:217:   \"s\" 'kb/org-refile-to-reverse-datetree-archive ; Archiving tasks with org-reverse-datetree" #("refile to r" 0 11 (ivy-index 13)) "configs/org-agenda.org:213:   \"s\" 'kb/org-refile-to-reverse-datetree-archive ; Archiving tasks with org-reverse-datetree" #("\"nn" 0 3 (ivy-index 1)) "configs/org-packages.org:61:      \"nn\" '(org-capture :which-key \"Org-capture\")" #("\"M-o" 0 4 (ivy-index 3)) "configs/second-brain.org:325:                 \"M-o\" 'org-noter-insert-note)" #("sp-pair" 0 7 (ivy-index 1)) "configs/shell.org:178:    (sp-pair \"(\" \")\" :wrap \"C-(\") ; Doesn't work?" #("org-agenda key" 0 14 (ivy-index 8)) "configs/org-agenda.org:281:    (define-key org-agenda-mode-map (kbd \"j\") nil)" #("TAB" 0 3 (ivy-index 5)) "configs/completion-frameworks.org:45:     \"TAB\" #'company-select-next" "configs/programming.org:18:                (\"TAB\" . completion-at-point))" #("savehist" 0 8 (ivy-index 0)) "configs/base-config.org:513:** Savehist" #("org-noter" 0 9 (ivy-index 0)) "configs/second-brain.org:307:** Org-noter"))
(setq counsel-describe-symbol-history '(#("company-box-back" 0 16 (ivy-index 0)) "company-box-backends-colors" "window-setup-hook" #("helm-ff-avfs-directory" 0 22 (ivy-index 0)) #("helm-persist" 0 12 (ivy-index 0)) "helm-persistent-action-display-window" "org-agenda-mode-map" "org-capture-goto-last-stored" #("git-gutter-fringe" 0 17 (ivy-index 372)) #("org-noter-doc-mode-hook" 0 23 (ivy-index 1634)) "org-agenda-mode-map" #("savehist-additional-variables" 0 29 (ivy-index 2141)) "kill-ring" #("recentf list" 0 12 (ivy-index 1)) "recentf-list" #("savehist" 0 8 (ivy-index 1)) #("noter doc hook" 0 14 (ivy-index 0))))
(setq file-name-history '(#("~/main-emacs/configs/qol-packages.org" 1 37 (match-part "/home/krisbalintona/main-emacs/configs/qol-packages.org")) #("~/main-emacs/configs/completion-frameworks.org" 1 46 (match-part "/home/krisbalintona/main-emacs/configs/completion-frameworks.org")) #("/home/krisbalintona/Documents/org-database/agenda/archive.org" 0 61 (ivy-index 0)) "~/main-emacs/configs/base-config.org" "~/main-emacs/configs/second-brain.org" "~/Documents/org-database/roam/Oct312020-140749-whitelusiadscanto.org" "~/Documents/org-database/agenda/inbox.org" "~/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/tapdance.c" "~/main-emacs/configs/evil-packages.org" "~/Documents/org-database/roam/Oct292020-130117.org" "~/Documents/Emails/Queue/cur/2020-11-01_19:12:46_1" "~/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/keymap.c" "~/main-emacs/configs/shell.org" "~/main-emacs/straight/build/golden-ratio/golden-ratio-autoloads.el" "~/main-emacs/elisp/better-defaults-rcp.el" "~/main-emacs/elisp/straight-package-management-rcp.el"))
(setq minibuffer-history '("company"
;;;  #("Keyfreq" 0 7 (org-imenu-marker #<marker at 6681 in qol-packages.org> org-imenu t))
 "qol" "org comp" "com org" "complei" "ace-jump-mode" "helm- pack" "helm-comma" "comple" "configs/completion-frameworks.org" #("(product) POBS0910 Rise of universities paper" 0 10 (face org-roam-tag)) "scra" "~/main-emacs/configs/" "test" "configs/second-brain.org" "git-gutter" "Letter of Pero Vaz de Caminha Notes - Oct292020-125345-caminhaletterperovaz.org" #("(bib, document) caminhaLetterPeroVaz: Letter of Pero Vaz de Caminha" 0 16 (face org-roam-tag)) "/var/auto-save/" "company-explicit-action-p" "scra" "kill-ring" "base" "recentf-list" "savehist" "/home/krisbalintona/main-emacs/configs/base" "configs/completion-frameworks.org" "scrat" "Letter of Pero Vaz de Caminha Notes - Oct292020-125345-caminhaletterperovaz.org" #("(bib, document) caminhaLetterPeroVaz: Letter of Pero Vaz de Caminha" 0 16 (face org-roam-tag))))
(setq counsel-M-x-history '(#("restart" 0 7 (ivy-index 0)) "org-mode-restart" #("group" 0 5 (ivy-index 0)) "customize-group" #("company-box-mode" 0 16 (ivy-index 0)) #("global-company-mode" 0 19 (ivy-index 0)) #("counsel-buffe" 0 13 (ivy-index 0)) "counsel-buffer-or-recentf" #("glo" 0 3 (ivy-index 0)) #("compa" 0 5 (ivy-index 0)) #("cleanup" 0 7 (ivy-index 1)) "whitespace-cleanup" #("helm-swoop" 0 10 (ivy-index 0)) #("ace-jump-line-mode" 0 18 (ivy-index 0)) #("ace-jump" 0 8 (ivy-index 5)) "evil-ace-jump-char-mode" "ace-jump-move" #("ace-jump-mode" 0 13 (ivy-index 0)) #("evil non" 0 8 (ivy-index 1)) "evil-first-non-blank" #("restart o" 0 9 (ivy-index 0)) "org-mode-restart" #("evil-motion" 0 11 (ivy-index 0)) "evil-motion-state" #("helm-swoop-from" 0 15 (ivy-index 0)) "helm-swoop-from-isearch" #("helm-multi-swoop" 0 16 (ivy-index 0)) #("helm-multi-" 0 11 (ivy-index 0)) "helm-multi-files" #("helm-ime" 0 8 (ivy-index 0)) "helm-imenu" #("company" 0 7 (ivy-index 0)) #("counsel" 0 7 (ivy-index 0)) "counsel-apropos" #("apropos coun" 0 12 (ivy-index 0)) "counsel-apropos" #("helm-ap" 0 7 (ivy-index 0)) "helm-apropos" #("helm-occur" 0 10 (ivy-index 0)) #("helm find files" 0 15 (ivy-index 0)) "helm-find-files" #("helm-m-x" 0 8 (ivy-index 0)) "helm-M-x" "kb/org-refile-to-reverse-datetree-archive" #("func mode" 0 9 (ivy-index 2)) "highlight-function-calls-mode" "org-agenda-archive" #("box" 0 3 (ivy-index 0)) #("global company" 0 14 (ivy-index 0)) #("git globa" 0 9 (ivy-index 1)) "global-git-gutter-mode" #("kill ses" 0 8 (ivy-index 0)) "org-noter-kill-session" "customize-group" #("git-gutter-mode" 0 15 (ivy-index 0)) #("git-gutter" 0 10 (ivy-index 1)) #("kill noter" 0 10 (ivy-index 0)) "org-noter-kill-session" #("global" 0 6 (ivy-index 0)) "global-auto-revert-mode" #("auto-reve" 0 9 (ivy-index 4)) "global-auto-revert-mode" #("company-tng" 0 11 (ivy-index 1)) "company-tng-mode" #("company-" 0 8 (ivy-index 54)) "company-tng-configure-default" "company-complete" #("lisp-extra-font-lock-mode" 0 25 (ivy-index 0)) #("extra" 0 5 (ivy-index 0)) #("grou" 0 4 (ivy-index 0)) "customize-group" #("kill session" 0 12 (ivy-index 0)) "org-noter-kill-session" #("find-file" 0 9 (ivy-index 2))))
(setq evil-jumps-history 'nil)
