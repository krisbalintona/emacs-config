;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(magit-revision-history transient--history org-read-date-history org-refile-history bibtex-completion-cite-command-history org-link--history keymap-name-history org-capture--prompt-history read-number-history mu4e~headers-search-hist query-replace-history counsel-fonts-history bookmark-history shell-command-history selectrum-rg-history face-name-history ivy-history counsel-org-goto-history counsel-apropos-history helm-apropos-history helm-occur-history helm-M-x-input-history org-tags-history selectrum-swiper-history empty-history ivy-bibtex-history counsel-git-grep-history counsel-describe-symbol-history file-name-history minibuffer-history counsel-M-x-history))
(setq org-read-date-history '("4 dec    " "3 dec    " "nov 12    " "  +1       19:00    " "   " "+2    "))
(setq org-refile-history '("school.org/Community/" "school.org/Community/" "computers.org/Emacs/" "inputs.org/Videos/" "misc.org/" "school.org/Classes/" "school.org/Community/" "computers.org/Linux/" "computers.org/Linux/" "computers.org/Linux/" "misc.org/" "school.org/Community/" "misc.org/" "media.org/Japanese/" "school.org/Community/" "misc.org/" "computers.org/G14 or Other/" "computers.org/Emacs/" "inputs.org/Articles/" "inputs.org/Articles/" "misc.org/" "computers.org/G14 or Other/" "computers.org/Emacs/" "computers.org/Emacs/" "school.org/Information/" "computers.org/Linux/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "media.org/Japanese/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/G14 or Other/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "computers.org/Emacs/" "school.org/Information/" "school.org/Information/" "school.org/Classes/" "computers.org/Emacs/" "inputs.org/Articles/" "inputs.org/Articles/" "computers.org/G14 or Other/" "inputs.org/Articles/" "computers.org/Emacs/"))
(setq keymap-name-history '("pdf-view-mode-map"))
(setq org-capture--prompt-history '("D" "B" "E" "B"))
(setq read-number-history '("1"))
(setq mu4e~headers-search-hist '("xiru" "corrin" "no labels"))
(setq query-replace-history '("kb/variable-pitch-font" "\"Noto Sans\"" "kb/variable-pitch-font" "Noto Sans"))
(setq counsel-fonts-history '("Hack Nerd Font Mono" "IBM Plex Sans KR" "Noto Sans Mono" "iosevka term ss04"))
(setq bookmark-history '("org-capture-last-stored" #("org-capture-last-stored" 0 23 (ivy-index 0)) "Org Database" #("Org Database" 0 12 (ivy-index 1)) "QMK Keymap" #("QMK Keymap" 0 10 (ivy-index 0))))
(setq face-name-history '("org-roam-link" #("variable-pit" 0 12 (ivy-index 0)) "variable-pitch" "bold"))
(setq ivy-history '(#("org-roam-capture-templates" 0 26 (idx 0 ivy-index 0)) "ENGN0900" #("time" 0 4 (ivy-index 1)) "sudo timeshift --create --comment \"After class\"" "sudo timeshift --create --comment \"Before class\"" #("atom" 0 4 (ivy-index 0)) "atom-one-dark" #("ink" 0 3 (ivy-index 0)) "inkpot" #("sime" 0 4 (ivy-index 0)) "sudo timeshift --create --comment \"Before class\"" #("timer-idle-list" 0 15 (ivy-index 0 idx 0)) #("em mode" 0 7 (ivy-index 0)) "esh-mode"))
(setq helm-occur-history '("kbd"))
(setq org-tags-history '("CONFIG" "SCHOOL" "CLUB" "SCHOOL" "LEARN" "CONFIG" "SCHOOL" "MANGA" "SCHOOL" "SHOPPING" "LEARN" "SCHOOL" "CONFIG" "WORKFLOW" "CONFIG" "REDDIT" "CONFIG" "ARTICLE" "REDDIT" "SHOPPING" "GTD" "PACKAGE" "RICE" "ANKI" "SHOPPING" "RICE" "PACKAGE" "CONFIG" "MANGA" "SHOPPING" "PACKAGE" "REDDIT" "PACKAGE" "REDDIT" "LEARN" "ASSIGNMENT" "ATTACH" "ASSIGNMENT" "CONFIG" "PARSE" "SCHOOL" "MANGA" "PACKAGE" "LEARN" "important" "CONFIG" "PARSE" "CONFIG"))
(setq selectrum-swiper-history '(#("+ Zotero (with zotfile and better-bibtex)" 0 1 (selectrum-candidate-display-prefix #("L83: " 0 5 (face completions-annotations)) line-num 83 face org-superstar-item composition (2 1 [10148]) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "system-wide-package-groups" fontified t) 1 41 (selectrum-candidate-display-prefix #("L83: " 0 5 (face completions-annotations)) line-num 83 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "system-wide-package-groups" fontified t)) #("               '(\"xr\" \"All trivial and to-refile tasks\"" 0 15 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-multiline t face (org-block) display nil line-num 579 selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations))) 15 16 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-multiline t face (highlight-quoted-quote org-block) display nil line-num 579 selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations))) 16 17 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) display nil line-num 579 selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations))) 17 21 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 579 selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations))) 21 22 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-multiline t face (lisp-extra-font-lock-quoted org-block) display nil line-num 579 selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations))) 22 55 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 579 selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)))) #("       \"* TODO %y - %t\\n :PROPERTIES:\\n  :CUSTOM_ID: %k\\n  :NOTER_DOCUMENT: %F\\n :ROAM_KEY: cite:%k\\n  :AUTHOR: %9a\\n  :JOURNAL: %j\\n  :YEAR: %y\\n  :VOLUME: %v\\n  :PAGES: %p\\n  :DOI: %D\\n  :URL: %U\\n :END:\\n\\n\")" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-num 254 selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations))) 7 92 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block) display nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-num 254 selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations))) 92 100 (fontified t help-echo nil htmlize-link (:uri "cite:%k\\n") font-lock-fontified t src-block t mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 . org-ref-open-pdf-at-point) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face (font-lock-string-face org-block) display nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-num 254 selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations))) 100 101 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo nil htmlize-link (:uri "cite:%k\\n") font-lock-fontified t src-block t mouse-face highlight keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 . org-ref-open-pdf-at-point) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face (font-lock-string-face org-block) display nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-num 254 selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations))) 101 210 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block) display nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-num 254 selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations))) 210 211 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) display nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-num 254 selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)))) #("                 '(\"p\" \"Current tasks\"" 0 18 (selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations)) line-num 305 face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 18 19 (selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations)) line-num 305 face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 19 22 (selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations)) line-num 305 face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 22 23 (selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations)) line-num 305 face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 23 38 (selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations)) line-num 305 face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) #("                            '((:file-path \"habits.org\")" 0 5 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 5 23 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 23 29 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 29 30 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 30 31 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (rainbow-delimiters-depth-8-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 31 32 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 32 33 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 33 36 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 36 37 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 37 38 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 38 39 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 39 40 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 40 41 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 41 42 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 42 53 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 53 54 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 54 55 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 face (rainbow-delimiters-depth-8-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t)) #("               '(\"xr\" \"All trivial and to-refile tasks\"" 0 16 (selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations)) line-num 575 wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 16 17 (selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations)) line-num 575 wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 17 21 (selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations)) line-num 575 wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 21 22 (selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations)) line-num 575 wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 22 55 (selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations)) line-num 575 wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil)) #("@misc{caminhaLetterPeroVaz," 0 5 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 face font-lock-function-name-face fontified t) 5 6 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 fontified t) 6 26 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 face font-lock-constant-face fontified t) 26 27 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 fontified t)) #("#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:t todo:t |:t" 0 60 (selectrum-candidate-display-prefix #("L08: " 0 5 (face completions-annotations)) line-num 8 face org-meta-line font-lock-fontified t fontified t wrap-prefix "" line-prefix "")) #("+ =Noto Sans=" 0 1 (fontified t composition (2 1 [10148]) face org-superstar-item line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 2 3 (fontified t font-lock-multiline t org-emphasis t invisible org-link line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 3 12 (fontified t face (org-verbatim) font-lock-multiline t org-emphasis t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 12 13 (fontified t font-lock-multiline t org-emphasis t invisible org-link line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)))) #("The \"lecentia docendi\" (license to teach). This was how you got invited into the college. You had to show some sort of academic attainment" 0 138 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)) line-num 95 selectrum-candidate-display-prefix #("L095: " 0 6 (face completions-annotations)))) #("[[file:Oct092020-2325.org][The Middle East in the Middle Ages contributed to technology, not science]]" 0 26 (fontified nil help-echo "LINK: file:Oct092020-2325.org" htmlize-link (:uri "file:Oct092020-2325.org") line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)) line-num 546 selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations))) 26 27 (fontified nil help-echo "LINK: file:Oct092020-2325.org" htmlize-link (:uri "file:Oct092020-2325.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)) line-num 546 selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations))) 27 99 (fontified nil help-echo "LINK: file:Oct092020-2325.org" htmlize-link (:uri "file:Oct092020-2325.org") line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)) line-num 546 selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations))) 99 100 (fontified nil help-echo "LINK: file:Oct092020-2325.org" htmlize-link (:uri "file:Oct092020-2325.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)) line-num 546 selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations))) 100 101 (fontified nil help-echo "LINK: file:Oct092020-2325.org" htmlize-link (:uri "file:Oct092020-2325.org") line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)) line-num 546 selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations))) 101 102 (fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: file:Oct092020-2325.org" htmlize-link (:uri "file:Oct092020-2325.org") line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)) line-num 546 selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)))) #("*** Set default fonts" 0 2 (selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations)) line-num 4 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil) 2 3 (selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations)) line-num 4 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil) 3 4 (selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations)) line-num 4 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil) 4 21 (selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations)) line-num 4 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) #("                       (selectrum-minibuffer-bindings" 0 23 (selectrum-candidate-display-prefix #("L676: " 0 6 (face completions-annotations)) line-num 676 wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil display nil font-lock-fontified t fontified nil) 23 24 (selectrum-candidate-display-prefix #("L676: " 0 6 (face completions-annotations)) line-num 676 wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil display nil font-lock-fontified t fontified nil) 24 53 (selectrum-candidate-display-prefix #("L676: " 0 6 (face completions-annotations)) line-num 676 wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil display nil font-lock-fontified t fontified nil)) #("** Company-box" 0 1 (fontified t face org-hide line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 50 selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations))) 1 2 (fontified t face (org-superstar-header-bullet org-level-2) composition (1 1 [9679]) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 50 selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations))) 2 3 (fontified t face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 50 selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations))) 3 14 (fontified t face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 50 selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)))) #("    (company-require-match 'company-explicit-action-p)" 0 4 (selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)) line-num 27 wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 4 5 (selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)) line-num 27 wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 5 53 (selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)) line-num 27 wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 53 54 (selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)) line-num 27 wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) #("    (company-require-match 'never)" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 26 selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations))) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 26 selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations))) 5 33 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 26 selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations))) 33 34 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 26 selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations))))))
(setq ivy-bibtex-history '(#("🖋 🖇 Cipolla, Carlo Guns, Sails, and Empires book cipollaGunsSailsEmpires" 0 72 (idx 0 ivy-index 0)) #("guns" 0 4 (ivy-index 0)) #("buns" 0 4 (ivy-index 0)) #("🖇 Cipolla, Carlo Guns, Sails, and Empires book cipollaGunsSailsEmpires" 0 70 (idx 0 ivy-index 0)) "🖋 🖇 Caminha, Pero Letter of Pero Vaz de Caminha misc caminhaLetterPeroVaz" "🖋 🖇 1957 Haskins, Charles The Rise of Universities book haskinsRiseUniversities1957" "🖋 🖇 Caminha, Pero Letter of Pero Vaz de Caminha misc caminhaLetterPeroVaz" #("white" 0 5 (ivy-index 0)) "🖋 🖇 White, Landeg The Lusiads, Canto V book whiteLusiadsCanto" #("piga" 0 4 (ivy-index 0)) "🖋 🖇 Pigafetta, Antonio The First Voyage Around the World book pigafettaFirstVoyageWorld" #("lette" 0 5 (ivy-index 0)) "🖋 🖇 Caminha, Pero Letter of Pero Vaz de Caminha misc caminhaLetterPeroVaz" "🖋 🖇 Pigafetta, Antonio The First Voyage Around the World book pigafettaFirstVoyageWorld" #("camin" 0 5 (ivy-index 0)) "🖋 🖇 Caminha, Pero Letter of Pero Vaz de Caminha misc caminhaLetterPeroVaz" #("canto" 0 5 (ivy-index 0)) "🖋 🖇 White, Landeg The Lusiads, Canto V book whiteLusiadsCanto" "🖋 🖇 Pigafetta, Antonio The First Voyage Around the World book pigafettaFirstVoyageWorld" #("cami" 0 4 (ivy-index 0)) "🖋 🖇 Caminha, Pero Letter of Pero Vaz de Caminha misc caminhaLetterPeroVaz" "🖋 🖇 White, Landeg The Lusiads, Canto V book whiteLusiadsCanto"))
(setq counsel-git-grep-history '(#("org-roam-capture-templates" 0 26 (ivy-index 2)) "configs/second-brain.org:105:* Org-roam-capture-templates" #("spell-fu" 0 8 (ivy-index 0)) "configs/spelling-and-grammar.org:3:* Spell-fu" #("swoop" 0 5 (ivy-index 0)) "configs/completion-frameworks.org:915:     \"M-i\" 'helm-swoop-from-isearch)" #("helm-swoop-from" 0 15 (ivy-index 2)) "configs/completion-frameworks.org:915:     \"M-i\" 'helm-swoop-from-isearch)" #("\"n\" " 0 4 (ivy-index 17)) "configs/second-brain.org:272:     '((\"n\" \"Reference paired with notes\" plain (function org-roam-capture--get-point)" #("org-agenda-tags-column" 0 22 (ivy-index 4)) "configs/org-agenda.org:143:        org-agenda-tags-column 'auto" #("deft" 0 4 (ivy-index 1)) "configs/second-brain.org:154:* Deft" #("keyfreq" 0 7 (ivy-index 0)) "configs/qol-packages.org:272:* Keyfreq" #("org-capture-goto-last-stored" 0 28 (ivy-index 2)) "configs/second-brain.org:60:      \"ns\" '(org-capture-goto-last-stored :which-key \"Goto last stored note\")" #("cfw:fchar" 0 9 (ivy-index 0)) "configs/calendar-integration.org:38:    (setq cfw:fchar-junction ?╋" #("auctex" 0 6 (ivy-index 0)) "configs/latex.org:7:    :straight auctex" #("ace-jump" 0 8 (ivy-index 2)) "configs/qol-packages.org:256:* Ace-jump" #("evil org " 0 9 (ivy-index 0)) "configs/evil-packages.org:92:     [remap evil-first-non-blank] 'evil-org-beginning-of-line ; To respect visual-line-mode" #("evil bol" 0 8 (ivy-index 9)) "configs/shell.org:37:     [remap evil-first-non-blank] 'eshell-bol ; Jump after the prompt" #("save-hist" 0 9 (ivy-index 0)) "configs/base-config.org:563:  (use-package save-hist" #("master-lib.bib" 0 14 (ivy-index 3)) "configs/second-brain.org:190:    (bibtex-completion-bibliography (concat kb/roam-dir \"bibliographic/master-lib.bib\"))" "var/save-place.el:107: (\"/home/krisbalintona/Documents/org-database/roam/bibliographic/master-lib.bib\" . 10472)" #("line mode number" 0 16 (ivy-index 14)) "configs/base-config.org:98:    (add-hook mode (lambda () (display-line-numbers-mode 1))))" #("pdf-tools" 0 9 (ivy-index 0)) "configs/second-brain.org:294:** Pdf-tools" #("global-company-mode" 0 19 (ivy-index 13)) "configs/completion-frameworks.org:13:                             (add-hook 'window-setup-hook 'global-company-mode))" #("doom height" 0 11 (ivy-index 3)) "configs/base-config.org:139:    (doom-modeline-height 26)" #("ace-link" 0 8 (ivy-index 1)) "configs/qol-packages.org:243:* Ace-link" #("kb/default" 0 10 (ivy-index 2)) "configs/base-config.org:19:  (defvar kb/default-font \"Iosevka Term SS04\")" #("yt/quotes" 0 9 (ivy-index 0)) "configs/base-config.org:519:                yt/quotes)))" #("default font" 0 12 (ivy-index 0)) "configs/base-config.org:4:*** Set default fonts" #("mode line kb" 0 12 (ivy-index 12)) "configs/base-config.org:145:    (set-face-attribute 'mode-line nil :family kb/variable-pitch-font :height 0.75)" #("default-text-scal" 0 17 (ivy-index 5)) "configs/buffer-management.org:237:     ((\"-\" default-text-scale-decrease)" #("ibm plex" 0 8 (ivy-index 7)) "configs/base-config.org:20:  (setq kb/variable-pitch-font\"IBM Plex Sans\")" #("noto sans" 0 9 (ivy-index 8)) "var/savehist.el:5:(setq counsel-fonts-history '(\"Hack Nerd Font Mono\" \"IBM Plex Sans KR\" \"Noto Sans Mono\" \"iosevka term ss04\"))" "configs/org-agenda.org:717:    (set-face-attribute 'org-agenda-date nil :height 157 :font \"Noto Sans\" :foreground \"dodger blue\" :underline nil)" "configs/base-config.org:145:    (set-face-attribute 'mode-line-inactive nil :family \"Noto Sans\" :height 0.68)" "configs/org-packages.org:40:      (set-face-attribute 'org-level-1 nil :height 210 :font \"Noto Sans\")" "configs/base-config.org:144:    (set-face-attribute 'mode-line nil :family \"Noto Sans\" :height 0.75)" #("font def" 0 8 (ivy-index 0)) "configs/base-config.org:4:*** Set default fonts" #("writegood-mode hook" 0 19 (ivy-index 3)) "configs/spelling-and-grammar.org:59::hook (text-mode . writegood-mode)" #("writegood" 0 9 (ivy-index 0)) "var/amx-save.el:9: writegood-mode" #("counsel-projectile" 0 18 (ivy-index 20)) "configs/completion-frameworks.org:247:  (use-package counsel-projectile" #("which-key" 0 9 (ivy-index 2)) "configs/qol-packages.org:53:* Which-key" #("avoidance-mode" 0 14 (ivy-index 1)) "elisp/better-defaults-rcp.el:69:(mouse-avoidance-mode 'proteus)                     ; Avoid collision of mouse with point" #("all-theicons" 0 12 (ivy-index 0)) "configs/qol-packages.org:70:* All-the-icons" "configs/qol-packages.org:249:     \"M-o\" 'ace-link" #("ace link" 0 8 (ivy-index 0)) "var-old/amx-save.el:254: (ace-link . 2)" #("golden-ratio" 0 12 (ivy-index 1)) "configs/base-config.org:499:** Golden-ratio" #("company-box" 0 11 (ivy-index 8)) "configs/completion-frameworks.org:50:** Company-box" #("highlight-function-calls" 0 24 (ivy-index 2)) "configs/programming.org:131:* Highlight-function-calls" "var/amx-save.el:4: highlight-function-calls-mode" #("org- kb/" 0 8 (ivy-index 0)) "configs/org-agenda.org:217:   \"s\" 'kb/org-refile-to-reverse-datetree-archive ; Archiving tasks with org-reverse-datetree" #("efile \"" 0 7 (ivy-index 24)) "configs/org-agenda.org:217:   \"s\" 'kb/org-refile-to-reverse-datetree-archive ; Archiving tasks with org-reverse-datetree" #("refile to r" 0 11 (ivy-index 13)) "configs/org-agenda.org:213:   \"s\" 'kb/org-refile-to-reverse-datetree-archive ; Archiving tasks with org-reverse-datetree" #("\"nn" 0 3 (ivy-index 1)) "configs/org-packages.org:61:      \"nn\" '(org-capture :which-key \"Org-capture\")" #("\"M-o" 0 4 (ivy-index 3)) "configs/second-brain.org:325:                 \"M-o\" 'org-noter-insert-note)" #("sp-pair" 0 7 (ivy-index 1)) "configs/shell.org:178:    (sp-pair \"(\" \")\" :wrap \"C-(\") ; Doesn't work?" #("org-agenda key" 0 14 (ivy-index 8)) "configs/org-agenda.org:281:    (define-key org-agenda-mode-map (kbd \"j\") nil)" #("TAB" 0 3 (ivy-index 5)) "configs/completion-frameworks.org:45:     \"TAB\" #'company-select-next"))
(setq counsel-describe-symbol-history '(#("org-roam-capture-templates" 0 26 (ivy-index 0)) "org-agenda-include-diary" #("org-agenda-todo-ignore-time" 0 27 (ivy-index 1)) "org-agenda-todo-ignore-time-comparison-use-seconds" "no-littering-var-directory" #("orb template" 0 12 (ivy-index 0)) "orb-templates" #("bibtex template roam" 0 20 (ivy-index 1)) "org-roam-bibtex-templates" #("custom set variable" 0 19 (ivy-index 4)) "custom-set-variables" #("org-agenda-tags-co" 0 18 (ivy-index 0)) "org-agenda-tags-column" "kb/all-org-dir-files" "server-after-make-frame-hook" #("find-file-exist" 0 15 (ivy-index 0)) "find-file-existing-other-name" #("company org block edit" 0 22 (ivy-index 0)) "company-org-block-edit-mode" #("tex view program se" 0 19 (ivy-index 0)) "TeX-view-program-selection" #("savehist-additional-variables" 0 29 (ivy-index 2273)) #("kill-ring" 0 9 (ivy-index 3)) "latex-mode-hook" "kill-ring-max" "pdf-view-mode-map" #("global-company-mode-hook" 0 24 (ivy-index 0)) #("debug on error" 0 14 (ivy-index 1)) "debug-on-error" #("company-backends" 0 16 (ivy-index 0)) "kb/variable-pitch-font" "ace-jump-mode-case-fold" "ace-jump-mode-scope" #("ace-jump-back" 0 13 (ivy-index 0)) "ace-jump-background-overlay-list" #("custom-file" 0 11 (ivy-index 0)) #("ace-jump back" 0 13 (ivy-index 0)) "ace-jump-mode-gray-background" #("ace-jump-mode" 0 13 (ivy-index 2)) #("timer-idle-list" 0 15 (ivy-index 0)) #("idle list" 0 9 (ivy-index 0)) "run-with-idle-timer" #("idle timer list" 0 15 (ivy-index 0)) #("writegood weasel" 0 16 (ivy-index 0)) "writegood-weasel-words" #("ispell-sil" 0 10 (ivy-index 0)) "ispell-silently-savep" #("helm-ff-avfs-directory" 0 22 (ivy-index 0)) #("minibuffer-local-map" 0 20 (ivy-index 1)) "which-key-show-transient-maps" #("embark map file" 0 15 (ivy-index 0)) "embark-file-map" #("company-box-back" 0 16 (ivy-index 0)) "company-box-backends-colors" "window-setup-hook" #("helm-persist" 0 12 (ivy-index 0)) "helm-persistent-action-display-window" "org-agenda-mode-map" "org-capture-goto-last-stored" #("git-gutter-fringe" 0 17 (ivy-index 372)) #("org-noter-doc-mode-hook" 0 23 (ivy-index 1634)) "org-agenda-mode-map" #("recentf list" 0 12 (ivy-index 1)) "recentf-list" #("savehist" 0 8 (ivy-index 1)) #("noter doc hook" 0 14 (ivy-index 0))))
(setq file-name-history '(#("/home/krisbalintona/Documents/org-database/library/critical-reviews.org" 0 71 (ivy-index 0)) "~/Documents/org-database/library/critical-reviews.org" "~/Documents/org-database/library/critial-review.org" #("/home/krisbalintona/Documents/org-database/library/system-wide-package-groups.org" 0 81 (ivy-index 0)) #("/home/krisbalintona/Documents/org-database/library/critial-review.org" 0 69 (ivy-index 0)) "~/.config/i3/config" "~/i3/.config/" "~/Documents/org-database/agenda/school.org" "~/Documents/org-database/agenda/habits.org" "~/Documents/org-database/roam/bibliographic/master-lib.bib" #("/home/krisbalintona/Documents/org-database/agenda/habits.org" 0 60 (ivy-index 0)) "~/main-emacs/configs/org-agenda.org" "~/main-emacs/keyfreq.html" "~/Documents/org-database/roam/bibliographic/master-lib-temp.bib" "~/Documents/org-database/another.tex" "~/Documents/org-database/" "~/Documents/org-database/text.log" "~/Documents/org-database/" #("/home/krisbalintona/Documents/org-database/text.tex" 0 51 (ivy-index 0)) "~/Documents/org-database/text.tex" "~/main-emacs/straight/repos/auctex/auctex.info" "/etc/asusd/asusd.conf" "~/main-emacs/configs/completion-frameworks.org" "~/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/tapdance.c" #("~/main-emacs/configs/qol-packages.org" 1 37 (match-part "/home/krisbalintona/main-emacs/configs/qol-packages.org")) #("/home/krisbalintona/Documents/org-database/agenda/archive.org" 0 61 (ivy-index 0)) "~/main-emacs/configs/base-config.org" "~/main-emacs/configs/second-brain.org" "~/Documents/org-database/roam/Oct312020-140749-whitelusiadscanto.org" "~/Documents/org-database/agenda/inbox.org" "~/main-emacs/configs/evil-packages.org" "~/Documents/org-database/roam/Oct292020-130117.org" "~/Documents/Emails/Queue/cur/2020-11-01_19:12:46_1" "~/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/keymap.c" "~/main-emacs/configs/shell.org" "~/main-emacs/straight/build/golden-ratio/golden-ratio-autoloads.el" "~/main-emacs/elisp/better-defaults-rcp.el" "~/main-emacs/elisp/straight-package-management-rcp.el"))
(setq minibuffer-history '(#("(lit, article) Reading for the Zettelkasten Is Searching" 0 15 (face org-roam-tag)) "org-agenda" #("(tag) misconceptions" 0 6 (face org-roam-tag)) #("(zett) Intimate knowledge is the most important" 0 7 (face org-roam-tag)) #("(moc) Note-taking principles and techniques" 0 6 (face org-roam-tag)) "Intimate knowledge is the most important" #("(tag) mistakes" 0 6 (face org-roam-tag)) #("(tag) misconceptions" 0 6 (face org-roam-tag)) #("(moc) Note-taking principles and techniques" 0 6 (face org-roam-tag)) "I should spend more time writing rather than reading" #("(zett) Create permanent notes with the overarching picture in mind" 0 7 (face org-roam-tag)) #("(tag) mistakes" 0 6 (face org-roam-tag)) #("(moc) Note-taking principles and techniques" 0 6 (face org-roam-tag)) "Questions should drive my literature notes" #("(zett) Cluster your notes for long texts" 0 7 (face org-roam-tag)) #("(zett) Create permanent notes with the overarching picture in mind" 0 7 (face org-roam-tag)) "My Seedbox" "120" "20" #("(product) POBS0910 Rise of universities paper" 0 10 (face org-roam-tag)) #("ENGN1340" 0 7 (face org-level-3 fontified t) 7 8 (face org-level-3 fontified t rear-nonsticky t)) "review" "critical" "scrat" #("(lit, article) Reading for the Zettelkasten Is Searching" 0 15 (face org-roam-tag)) "org-agenda" "agenda" "25" "60" "buffer-expose" "lexical binding" "org-agen" "60" "20" "30" "90" "10" "20" "45" "25" "180" "60" "15" "30" "10" "600" "45" "15" "20" "60" "15" "51" "30" "scrat" "60" "40" "50" "25" "30" "Current page" "What ended up happening to guns towards the latter half of the 1600s?" "ordnance" "What happened to cannons? What was its effect?" "What was the deal with England and guns?" "/home/krisbalintona/Documents/Zotero/" "25" "45" "35" "600" "180" "80" "/home/krisbalintona/Documents/org-database/agenda/scho" "45" "25" "30" "15" "25" "32" "60" "35" "45" "30" "ispell-personal-dict-en" "spell-fu/" "rename" "30" "git@gitlab.com:PreciousPudding/zotero.git" "origin" "git@gitlab.com:PreciousPudding/zotero.git" "origin" "/home/krisbalintona/Documents/Zotero/" "15" "90" "10" "15" "60" "70" "15" "45"))
(setq counsel-M-x-history '(#("map des" 0 7 (ivy-index 0)) "describe-keymap" #("customize face" 0 14 (ivy-index 0)) "customize-face" #("group" 0 5 (ivy-index 1)) "customize-group" #("org-toggle-tags-groups" 0 22 (ivy-index 0)) #("rename file" 0 11 (ivy-index 0)) "rename-file" #("org-mode" 0 8 (ivy-index 1)) #("buffer-expose" 0 13 (ivy-index 0)) #("expose " 0 7 (ivy-index 0)) #("list dis" 0 8 (ivy-index 1)) "list-colors-display" #("garba" 0 5 (ivy-index 0)) "garbage-collect" #("refile" 0 6 (ivy-index 0)) "org-refile" #("kill se" 0 7 (ivy-index 0)) "org-noter-kill-session" #("visual-line-mode" 0 16 (ivy-index 0)) #("org-roam-bibtex-mode" 0 20 (ivy-index 0)) #("roam bibtex" 0 11 (ivy-index 0)) #("esup" 0 4 (ivy-index 0)) #("keyfre" 0 6 (ivy-index 1)) "keyfreq-html" #("keyfreq h" 0 9 (ivy-index 2)) "keyfreq-html-v2" "org-capture-goto-last-stored" "customize-group" #("selectrum-mode" 0 14 (ivy-index 0)) #("wikinforg" 0 9 (ivy-index 1)) #("ivy-mode" 0 8 (ivy-index 0)) #("wiki" 0 4 (ivy-index 0)) #("company-box-mode" 0 16 (ivy-index 0)) #("box" 0 3 (ivy-index 0)) #("company-org-block" 0 17 (ivy-index 0)) #("company org " 0 12 (ivy-index 0)) #("pdf mode" 0 8 (ivy-index 2)) "pdf-view-mode" #("counsel-yank-pop" 0 16 (ivy-index 0)) #("counsel yank" 0 12 (ivy-index 0)) #("diag" 0 4 (ivy-index 0)) "company-diag" #("helm-projectile-rg" 0 18 (ivy-index 1)) "customize-group" #("helm projectile rg" 0 18 (ivy-index 0)) #("latex-preview-pane-mode" 0 23 (ivy-index 0)) #("org-mode-restart" 0 16 (ivy-index 0)) #("restart" 0 7 (ivy-index 0)) #("preview" 0 7 (ivy-index 0)) "savehist-save" #("error" 0 5 (ivy-index 0)) "next-error" #("previe" 0 6 (ivy-index 0)) #("latex-mode" 0 10 (ivy-index 0)) #("LaTeX-mode" 0 10 (ivy-index 0)) #("latex mode" 0 10 (ivy-index 1)) #("imenu-add-menubar-index" 0 23 (ivy-index 0)) #("imenu add" 0 9 (ivy-index 1)) #("preview latex" 0 13 (ivy-index 0)) #("prev" 0 4 (ivy-index 0)) #("map desc" 0 8 (ivy-index 0)) "describe-keymap" #("copy subt" 0 9 (ivy-index 0)) "org-copy-subtree" "helm-find-files-up-one-level" #("latex preview" 0 13 (ivy-index 2)) #("empty" 0 5 (ivy-index 1)) "make-empty-file" "global-company-mode" #("library" 0 7 (ivy-index 1)) "find-library" #("doom-modeline-mode" 0 18 (ivy-index 0)) #("doom" 0 4 (ivy-index 0)) #("diag co" 0 7 (ivy-index 0)) "company-diag" #("face cou" 0 8 (ivy-index 0)) "counsel-describe-face" #("counsel f" 0 9 (ivy-index 0)) "counsel-fonts" #("coun" 0 4 (ivy-index 0)) "counsel-fonts" #("r" 0 1 (ivy-index 0)) #("res" 0 3 (ivy-index 0)) #("counsel-fonts" 0 13 (ivy-index 1)) #("describe-char" 0 13 (ivy-index 0)) #("char" 0 4 (ivy-index 0)) #("couns" 0 5 (ivy-index 0)) #("doo" 0 3 (ivy-index 0)) #("re" 0 2 (ivy-index 0)) #("counsel font" 0 12 (ivy-index 0)) #("char desc" 0 9 (ivy-index 0)) #("load " 0 5 (ivy-index 0)) "counsel-load-library" #("noter ki" 0 8 (ivy-index 0)) "org-noter-kill-session" #("grou" 0 4 (ivy-index 0)) "customize-group" #("gr" 0 2 (ivy-index 0)) "customize-group"))
(setq evil-jumps-history '((7534 "/home/krisbalintona/Documents/org-database/agenda/school.org") (5709 "/home/krisbalintona/main-emacs/configs/second-brain.org") (12050 "/home/krisbalintona/main-emacs/configs/base-config.org")))
