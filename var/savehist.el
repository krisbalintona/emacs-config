;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(ssh-history tmm--history custom-variable-history read-from-kill-ring-history consult--mode-command-history xref--read-identifier-history yes-or-no-p-history counsel-outline-history grep-regexp-history consult-imenu--history goto-line-history input-method-history consult--apropos-history consult--find-history consult--grep-history consult--line-history consult--buffer-history mu4e-views--mu4e-select-view-msg-method-history synosaurus--history wordnut-completion-hist consult-imenu-history consult-error-history consult-command-history counsel-locate-history consult-minibuffer-history consult-kmacro-history regexp-history pdf-annot-color-history TeX-command-history imenu--history-list extended-command-history consult-theme-history consult-minor-mode-history consult-apropos-history consult-buffer-history consult-outline-history consult-line-history consult-mark-history read-expression-history flycheck-read-checker-history counsel-flycheck-errors-history buffer-name-history eww-prompt-history Info-search-history read-char-history swiper-history org-agenda-search-history counsel-imenu-history evil-ex-history charset-history magit-revision-history transient--history org-read-date-history org-refile-history bibtex-completion-cite-command-history org-link--history keymap-name-history org-capture--prompt-history read-number-history mu4e~headers-search-hist query-replace-history counsel-fonts-history bookmark-history shell-command-history selectrum-rg-history face-name-history ivy-history counsel-org-goto-history counsel-apropos-history helm-apropos-history helm-occur-history helm-M-x-input-history org-tags-history selectrum-swiper-history empty-history ivy-bibtex-history counsel-git-grep-history counsel-describe-symbol-history file-name-history minibuffer-history counsel-M-x-history))
(setq ssh-history '("143.244.172.121"))
(setq tmm--history '("h==>Help" "y==>YASnippet" "p==>Projectile" "0==>Outshine" "O==>Outline" "E==>Emacs-Lisp" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq custom-variable-history '("org-use-tag-inheritance"))
(setq yes-or-no-p-history '("yes"))
(setq counsel-outline-history '(#("LoadRepos" 0 9 (fontified nil face "counsel-outline-1" idx 2 ivy-index 2)) #("Code: / Project management / Projectile" 0 5 (ivy-index 9 idx 9 face "counsel-outline-1" fontified nil) 5 8 (ivy-index 9 idx 9) 8 26 (ivy-index 9 idx 9 face "counsel-outline-2" fontified nil) 26 29 (ivy-index 9 idx 9) 29 39 (ivy-index 9 idx 9 face "counsel-outline-3" fontified nil)) #("Code: / Cousin packages / Consult-selectrum" 0 5 (fontified nil face "counsel-outline-1" idx 5 ivy-index 5) 5 8 (idx 5 ivy-index 5) 8 23 (fontified nil face "counsel-outline-2" idx 5 ivy-index 5) 23 26 (idx 5 ivy-index 5) 26 43 (fontified nil face "counsel-outline-3" idx 5 ivy-index 5)) #("project" 0 7 (ivy-index 0)) "Code: / Project management"))
(setq consult--find-history '("#company#rcp" "#pair" "#package" "#doom-modeline-segments" "#qol" "#org-agenda-rcp" "#package" "#default"))
(setq consult--grep-history '("#ultimate uncertainty" "#company#org-roam" "#ace-jump#use-" "#textlint" "#kb/personal-" "#straight#org-roam" "#ensure#package" "#flycheck#use-package" "#proselint" "#kb/default-font" "#disable-mouse#use pac" "#ace-jump#use" "#roam:" "#prefix-arg" "#prefix-arg " "#roam:" "#let\\*#\\:" "#let\\*" "#save-excursion" "#recentf#counsel" "#isync" "#prettify" "#036\\]" "#aspect#narrati" "#pf\"" "#general-define-key" "#google-translate" "#org-bullet" "#tab#company" "#proselint" "#abbrev" "#require 'cl" "#shackle#use-pack" "#Flycheck#errors" "#general-define-key" "#hide-mode-line-mode" "#org-agenda-files#setq" "#ace-jump#use-pack" "#shackle#use-package" "#pdf-tools#use-package" "#gz" "#pdf-tools#use-package" "#bb\"" "#org-ref#use-package" "#use-package consult" "#consult-history" "#project#ideas" "#issa" "#Tannen" "#Seligman" "#range#frequency" "#buffer-encoding#kb" "#kb/buffer-encoding" "#rcp" "#consult-flycheck" "#consult-history" "#consult-flycheck" "#consult-fly" "#sudoedit" "#sudo-edit" "#Consult-flycheck" "#Consult#swiper" "#sudo-edit" "#consult#buffer" "#sudoedit"))
(setq consult--line-history '("langua" "mohism" "draft" "micros" "tl dr" "creep" "4" "flycheck" "4" "not try to always acc" "autobiogra" "politics" "me" "interlude" "in a few" "moment" "feedback" "compl" "roam" "print" "loca" "print" "roam" "replace" "check" "let\\*" "excu" "consult" "after s" "^G" "mme" "template" "because" "7" "well" "concepts" "beause" "body" "image" "{{{" "fullscree" "engin" "like talking to people" "their posi" "daymon" "day" "daymon" "textcquo" "stove" "does not" "demonstr" "deconte" "inform" "autocite" "debary" "weake" "pac" "britt" "brittle" "study" "spaced" "prod" "conclu" "heavy" "effe" "quote" "xunzi" "thump" "thum" "introduction" "41" "26" "savv" "fixnum" "locke expl" "sexp" "org" "test" "mail" "kb/buffer" "kb buffer" "kb/ encoding" "kb" "kb/ buffer" "buffer encodin" "encoding" "kb/ encoding" "mu4e" "kb/ encod" "straig" "magit" "iterat" "slee" "a system will" "iteration" "differen" "tag" "#" "immedi" "if-new"))
(setq consult--buffer-history '(#("~/main-emacs/elisp/checking-grammar-rcp.el􀀂" 0 42 (face consult-file consult-multi (file . "~/main-emacs/elisp/checking-grammar-rcp.el")) 42 43 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("init.el􀀁" 0 7 (face consult-buffer consult-multi (buffer . "init.el")) 7 8 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("why_amazing_marvin_is_one_of_a_kind-Jun172021-201735.org􀀁" 0 56 (face consult-buffer consult-multi (buffer . "why_amazing_marvin_is_one_of_a_kind-Jun172021-201735.org")) 56 57 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/Documents/org-database/latex/rels0120-paper_1.tex􀀂" 0 51 (face consult-file consult-multi (file . "~/Documents/org-database/latex/rels0120-paper_1.tex")) 51 52 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/faces-rcp.el􀀂" 0 31 (face consult-file consult-multi (file . "~/main-emacs/elisp/faces-rcp.el")) 31 32 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("ace-jump-mode.el􀀁" 0 16 (face consult-buffer consult-multi (buffer . "ace-jump-mode.el")) 16 17 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("textlintrc.json􀀁" 0 15 (face consult-buffer consult-multi (buffer . "textlintrc.json")) 15 16 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/Documents/org-database/latex/POBS0910-niccolo-machiavelli.tex􀀂" 0 63 (face consult-file consult-multi (file . "~/Documents/org-database/latex/POBS0910-niccolo-machiavelli.tex")) 63 64 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("fleeting_notes-Jun092021-031415.org􀀁" 0 35 (face consult-buffer consult-multi (buffer . "fleeting_notes-Jun092021-031415.org")) 35 36 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/Documents/org-database/roam/engl0930-Jun042021-223134.org􀀂" 0 59 (face consult-file consult-multi (file . "~/Documents/org-database/roam/engl0930-Jun042021-223134.org")) 59 60 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("engl0930_essay_1-Jun072021-235609.org􀀁" 0 37 (face consult-buffer consult-multi (buffer . "engl0930_essay_1-Jun072021-235609.org")) 37 38 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*vterm*􀀁" 0 7 (face consult-buffer consult-multi (buffer . "*vterm*")) 7 8 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/init.el􀀂" 0 20 (face consult-file consult-multi (file . "~/main-emacs/init.el")) 20 21 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("init.el􀀁" 0 7 (consult-multi (buffer . "init.el") face consult-buffer) 7 8 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/init.el􀀂" 0 20 (consult-multi (file . "~/main-emacs/init.el") face consult-file) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*helpful function: ace-link--org-collect*􀀁" 0 41 (consult-multi (buffer . "*helpful function: ace-link--org-collect*") face consult-buffer) 41 42 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Messages*􀀁" 0 10 (consult-multi (buffer . "*Messages*") face consult-buffer) 10 11 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el") face consult-file) 42 43 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/latex-general-rcp.el􀀂" 0 39 (consult-multi (file . "~/main-emacs/elisp/latex-general-rcp.el") face consult-file) 39 40 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("05-06-2021.org􀀁" 0 14 (consult-multi (buffer . "05-06-2021.org") face consult-buffer) 14 15 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Messages*􀀁" 0 10 (consult-multi (buffer . "*Messages*") face consult-buffer) 10 11 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*helpful command: org-roam-doctor*􀀁" 0 34 (consult-multi (buffer . "*helpful command: org-roam-doctor*") face consult-buffer) 34 35 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*helpful function: ace-link--org-collect*􀀁" 0 41 (face consult-buffer consult-multi (buffer . "*helpful function: ace-link--org-collect*")) 41 42 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Messages*􀀁" 0 10 (face consult-buffer consult-multi (buffer . "*Messages*")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*helpful function: ace-link--org-collect*􀀁" 0 41 (face consult-buffer consult-multi (buffer . "*helpful function: ace-link--org-collect*")) 41 42 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*scratch*􀀁" 0 9 (face consult-buffer consult-multi (buffer . "*scratch*")) 9 10 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("org-roam-general-rcp.el􀀁" 0 23 (face consult-buffer consult-multi (buffer . "org-roam-general-rcp.el")) 23 24 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/completion-selectrum-rcp.el􀀂" 0 46 (face consult-file consult-multi (file . "~/main-emacs/elisp/completion-selectrum-rcp.el")) 46 47 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (face consult-file consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el")) 42 43 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/mu4e-rcp.el􀀂" 0 30 (face consult-file consult-multi (file . "~/main-emacs/elisp/mu4e-rcp.el")) 30 31 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el") face consult-file) 42 43 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-general-rcp.el􀀁" 0 23 (consult-multi (buffer . "org-roam-general-rcp.el") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/dotfiles/awesomewm/.config/awesome/rc.lua􀀂" 0 43 (consult-multi (file . "~/dotfiles/awesomewm/.config/awesome/rc.lua") face consult-file) 43 44 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("bui􀀁" 0 3 (consult-multi (buffer . "bui") face consult-buffer) 3 4 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("index.hbs􀀁" 0 9 (consult-multi (buffer . "index.hbs") face consult-buffer) 9 10 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Messages*􀀁" 0 10 (consult-multi (buffer . "*Messages*") face consult-buffer) 10 11 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/configs/qol-packages.org􀀂" 0 37 (consult-multi (file . "~/main-emacs/configs/qol-packages.org") face consult-file) 37 38 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("org-roam-general-rcp.el􀀁" 0 23 (consult-multi (buffer . "org-roam-general-rcp.el") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("+new-snippet+􀀁" 0 13 (consult-multi (buffer . "+new-snippet+") face consult-buffer) 13 14 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/buffer-and-window-management-rcp.el􀀂" 0 54 (consult-multi (file . "~/main-emacs/elisp/buffer-and-window-management-rcp.el") face consult-file) 54 55 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el") face consult-file) 42 43 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("README.md􀀁" 0 9 (face consult-buffer consult-multi (buffer . "README.md")) 9 10 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("default.hbs􀀁" 0 11 (face consult-buffer consult-multi (buffer . "default.hbs")) 11 12 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("header.hbs􀀁" 0 10 (face consult-buffer consult-multi (buffer . "header.hbs")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/ghost/content/themes/zvikov1/partials/navigation.hbs􀀂" 0 54 (face consult-file consult-multi (file . "~/ghost/content/themes/zvikov1/partials/navigation.hbs")) 54 55 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/Documents/roam/Nov302020-232025.org􀀂" 0 37 (face consult-file consult-multi (file . "~/Documents/roam/Nov302020-232025.org")) 37 38 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("template-chicago_manual.tex􀀁" 0 27 (face consult-buffer consult-multi (buffer . "template-chicago_manual.tex")) 27 28 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/Documents/org-database/latex/template-chicago_manual.tex􀀂" 0 58 (face consult-file consult-multi (file . "~/Documents/org-database/latex/template-chicago_manual.tex")) 58 59 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/Documents/org-database/roam/bibliographic/master-lib.bib􀀂" 0 58 (face consult-file consult-multi (file . "~/Documents/org-database/roam/bibliographic/master-lib.bib")) 58 59 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/dotfiles/qmk/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/keymap.c􀀂" 0 89 (face consult-file consult-multi (file . "~/dotfiles/qmk/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/keymap.c")) 89 90 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/dotfiles/awesomewm/.config/awesome/rc.lua􀀂" 0 43 (face consult-file consult-multi (file . "~/dotfiles/awesomewm/.config/awesome/rc.lua")) 43 44 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (face consult-file consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el")) 42 43 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/Documents/org-database/latex/rels0120-paper_1.tex􀀂" 0 51 (face consult-file consult-multi (file . "~/Documents/org-database/latex/rels0120-paper_1.tex")) 51 52 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("rels0120_paper_1-Jun062021-184410.org<4>􀀁" 0 40 (face consult-buffer consult-multi (buffer . "rels0120_paper_1-Jun062021-184410.org<4>")) 40 41 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Scratch for org-mode*􀀁" 0 22 (face consult-buffer consult-multi (buffer . "*Scratch for org-mode*")) 22 23 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("latexmk output􀀁" 0 14 (face consult-buffer consult-multi (buffer . "latexmk output")) 14 15 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/Documents/org-database/latex/example-cms.tex􀀂" 0 46 (face consult-file consult-multi (file . "~/Documents/org-database/latex/example-cms.tex")) 46 47 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("checking-words-rcp.el􀀁" 0 21 (face consult-buffer consult-multi (buffer . "checking-words-rcp.el")) 21 22 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("qol-packages.org􀀁" 0 16 (face consult-buffer consult-multi (buffer . "qol-packages.org")) 16 17 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("org-packages.org􀀁" 0 16 (face consult-buffer consult-multi (buffer . "org-packages.org")) 16 17 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/init.el􀀂" 0 20 (face consult-file consult-multi (file . "~/main-emacs/init.el")) 20 21 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("qol-packages.org􀀁" 0 16 (face consult-buffer consult-multi (buffer . "qol-packages.org")) 16 17 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("org-roam-general-rcp.el􀀁" 0 23 (face consult-buffer consult-multi (buffer . "org-roam-general-rcp.el")) 23 24 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (face consult-file consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el")) 42 43 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/data/abbrev.el􀀂" 0 27 (face consult-file consult-multi (file . "~/main-emacs/data/abbrev.el")) 27 28 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("themes-rcp.el􀀁" 0 13 (face consult-buffer consult-multi (buffer . "themes-rcp.el")) 13 14 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/themes-rcp.el􀀂" 0 32 (face consult-file consult-multi (file . "~/main-emacs/elisp/themes-rcp.el")) 32 33 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/configs/qol-packages.org􀀂" 0 37 (face consult-file consult-multi (file . "~/main-emacs/configs/qol-packages.org")) 37 38 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/dotfiles/qmk/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/keymap.c􀀂" 0 89 (face consult-file consult-multi (file . "~/dotfiles/qmk/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/keymap.c")) 89 90 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Backtrace*􀀁" 0 11 (consult-multi (buffer . "*Backtrace*") face consult-buffer) 11 12 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Messages*􀀁" 0 10 (consult-multi (buffer . "*Messages*") face consult-buffer) 10 11 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Warnings*􀀁" 0 10 (consult-multi (buffer . "*Warnings*") face consult-buffer) 10 11 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el") face consult-file) 42 43 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/themes-rcp.el􀀂" 0 32 (consult-multi (file . "~/main-emacs/elisp/themes-rcp.el") face consult-file) 32 33 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/elisp/mu4e-rcp.el􀀂" 0 30 (consult-multi (file . "~/main-emacs/elisp/mu4e-rcp.el") face consult-file) 30 31 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("~/main-emacs/init.el􀀂" 0 20 (consult-multi (file . "~/main-emacs/init.el") face consult-file) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Messages*􀀁" 0 10 (consult-multi (buffer . "*Messages*") face consult-buffer) 10 11 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("init.el􀀁" 0 7 (face consult-buffer consult-multi (buffer . "init.el")) 7 8 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Messages*􀀁" 0 10 (face consult-buffer consult-multi (buffer . "*Messages*")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Warnings*􀀁" 0 10 (face consult-buffer consult-multi (buffer . "*Warnings*")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/themes-rcp.el􀀂" 0 32 (face consult-file consult-multi (file . "~/main-emacs/elisp/themes-rcp.el")) 32 33 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/init.el􀀂" 0 20 (face consult-file consult-multi (file . "~/main-emacs/init.el")) 20 21 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Messages*􀀁" 0 10 (face consult-buffer consult-multi (buffer . "*Messages*")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/init.el􀀂" 0 20 (consult-multi (file . "~/main-emacs/init.el") face consult-file) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Warnings*􀀁" 0 10 (face consult-buffer consult-multi (buffer . "*Warnings*")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/mu4e-rcp.el􀀂" 0 30 (face consult-file consult-multi (file . "~/main-emacs/elisp/mu4e-rcp.el")) 30 31 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/init.el􀀂" 0 20 (face consult-file consult-multi (file . "~/main-emacs/init.el")) 20 21 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Messages*􀀁" 0 10 (face consult-buffer consult-multi (buffer . "*Messages*")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Warnings*􀀁" 0 10 (face consult-buffer consult-multi (buffer . "*Warnings*")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("programming-general-rcp.el􀀁" 0 26 (face consult-buffer consult-multi (buffer . "programming-general-rcp.el")) 26 27 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/init.el􀀂" 0 20 (face consult-file consult-multi (file . "~/main-emacs/init.el")) 20 21 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/elisp/org-roam-general-rcp.el􀀂" 0 42 (face consult-file consult-multi (file . "~/main-emacs/elisp/org-roam-general-rcp.el")) 42 43 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("temp.org􀀁" 0 8 (face consult-buffer consult-multi (buffer . "temp.org")) 8 9 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*scratch*􀀁" 0 9 (face consult-buffer consult-multi (buffer . "*scratch*")) 9 10 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("second-brain.org􀀁" 0 16 (face consult-buffer consult-multi (buffer . "second-brain.org")) 16 17 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("init.el􀀁" 0 7 (face consult-buffer consult-multi (buffer . "init.el")) 7 8 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("second-brain.org􀀁" 0 16 (face consult-buffer consult-multi (buffer . "second-brain.org")) 16 17 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/configs/second-brain.org􀀂" 0 37 (face consult-file consult-multi (file . "~/main-emacs/configs/second-brain.org")) 37 38 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("~/main-emacs/init.el􀀂" 0 20 (face consult-file consult-multi (file . "~/main-emacs/init.el")) 20 21 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("org-agenda-views-rcp.el􀀁" 0 23 (consult-multi (buffer . "org-agenda-views-rcp.el") face consult-buffer) 23 24 (cursor-intangible t rear-nonsticky t invisible t consult-strip t))))
(setq mu4e-views--mu4e-select-view-msg-method-history '("html"))
(setq synosaurus--history '("Offline"))
(setq wordnut-completion-hist '("ensure" "test" "hello"))
(setq counsel-locate-history '(#("con" 0 3 (ivy-index 0))))
(setq regexp-history '(":straight"))
(setq TeX-command-history '("Clean All" "LatexMk" "View" "Clean All" "View" "LatexMk" "View" "LatexMk" "View" "LatexMk" "Check" "LatexMk" "View" "LatexMk" "Clean All" "View" "LatexMk" "Clean All" "View" "LatexMk" "View" "LatexMk" "Clean All" "View" "LatexMk" "Clean All" "LatexMk" "View" "Clean All" "View" "Clean All" "View" "LatexMk" "View" "LatexMk" "View" "Clean All" "View" "LatexMk" "View" "LatexMk" "View" "Clean All" "Check" "View" "LaTeX" "View" "LatexMk" "View" "Clean All" "View" "Clean All" "View" "LatexMk" "View" "LatexMk" "View" "LatexMk" "View" "Clean All" "LatexMk" "Biber" "LatexMk" "View" "Clean All" "View" "Clean All" "Clean" "View" "Clean All" "View" "LatexMk" "View" "Biber" "LaTeX" "View" "LaTeX" "View" "LatexMk" "View" "Clean All" "Clean" "View" "LatexMk" "LaTeX" "View" "Clean All" "View" "Clean All" "View" "LatexMk" "View" "LaTeX" "LatexMk" "View" "Clean All" "Clean" "View" "Clean All" "LatexMk"))
(setq imenu--history-list '("article" "document" "*Rescan*"))
(setq extended-command-history '("kb/org-roam-update-link-desc" "clone-indirect-buffer-other-window" "kb/org-roam-update-link-desc" "flycheck-mode" "org-md-export-as-markdown" "count-words" "langtool-check-done" "langtool-correct-buffer" "langtool-check" "org-clone-subtree-with-time-shift" "count-words" "org-clone-subtree-with-time-shift" "edit-abbrevs" "count-words" "org-clone-subtree-with-time-shift" "writegood-mode" "straight-use-package" "writegood-mode" "straight-use-package" "clone-indirect-buffer-other-window" "counsel-describe-face" "org-mode-restart" "typo-mode" "counsel-describe-face" "flycheck-buffer" "flycheck-select-checker" "make-directory" "yas-global-mode" "yas-reload-all" "straight-use-package" "flycheck-buffer" "flycheck-select-checker" "flycheck-clear" "flycheck-disable-checker" "flycheck-verify-checker" "flycheck-describe-checker" "straight-use-package" "flycheck-describe-checker" "counsel-fonts" "org-mode-restart" "counsel-fonts" "describe-text-properties" "counsel-fonts" "kb/org-roam-update-link-desc" "count-words" "org-clone-subtree-with-time-shift" "disable-mouse-mode" "disable-mouse-global-mode" "kb/org-roam-update-link-desc" "describe-text-properties" "org-cut-subtree" "org-roam-version" "kb/org-roam-update-link-desc" "kb/org-roam-update-link-desc--action" "kb/org-roam-update-link-desc" "kb/org-roam-update-link-desc--action" "global-emojify-mode" "kb/org-roam-update-link-desc" "typo-mode" "org-roam-buffer" "foo" "eval-expression-to-kill-ring" "undo" "kb/org-roam-update-link-desc" "typo-mode" "kb/org-roam-update-link-desc" "consult-recent-file" "org-clone-subtree-with-time-shift" "yas-new-snippet" "yas-reload-all" "yas-new-snippet" "css-mode" "prettify-symbols-mode" "ssh" "straight-use-package" "yas-reload-all" "yas-new-snippet" "edit-abbrevs" "clone-indirect-buffer-other-window" "edit-abbrevs" "org-roam-doctor" "org-roam-db-diagnose-node" "org-roam-doctor" "org-roam-db-clear-all" "straight-normalize-package" "server-start" "org-roam-tag-add" "edit-abbrevs" "count-words" "css-mode" "markdown-view-mode" "markdown-mode" "markdown-view-mode" "css-mode" "handlebars-mode" "straight-use-package" "describe-face" "describe-text-properties" "edit-abbrevs" "org-export-dispatch"))
(setq consult-apropos-history '("selectrum-completion-annotation" "orb-insert-non-ref"))
(setq consult-buffer-history '(#("f​ ~/dotfiles/awesomewm/.config/awesome/rc.lua" 0 3 (display "") 3 46 (face consult-file)) #("b​ config.rasi" 0 3 (display "") 3 14 (face consult-buffer)) #("f​ ~/.config/rofi/config.rasi" 0 3 (display "") 3 29 (face consult-file)) #("m​ Zotero" 0 3 (display "") 3 9 (face consult-bookmark)) #("b​ .zotero" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ zotero" 0 3 (display "") 3 9 (face consult-buffer)) #("b​ Zotero" 0 3 (display "") 3 9 (face consult-buffer)) #("f​ ~/.config/rofi/config.rasi" 0 3 (display "") 3 29 (face consult-file)) #("f​ ~/main-emacs/elisp/mu4e-rcp.el" 0 3 (display "") 3 33 (face consult-file)) #("f​ ~/dotfiles/i3/.config/i3/config" 0 3 (display "") 3 34 (face consult-file)) #("f​ ~/.mbsyncrc" 0 3 (display "") 3 14 (face consult-file)) #("f​ ~/dotfiles/awesomewm/.config/awesome/rc.lua" 0 3 (display "") 3 46 (face consult-file)) #("f​ ~/main-emacs/elisp/mu4e-rcp.el" 0 3 (display "") 3 33 (face consult-file)) #("f​ ~/dotfiles/awesomewm/.config/awesome/rc.lua" 0 3 (display "") 3 46 (face consult-file)) #("b​ elisp" 0 3 (display "") 3 8 (face consult-buffer)) #("f​ ~/main-emacs/elisp/completion-selectrum-rcp.el" 0 3 (display "") 3 49 (face consult-file)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("f​ ~/Documents/org-database/roam/Oct242020-030215-pintogasparfrutuosoportuguese2003.org" 0 3 (display "") 3 87 (face consult-file)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("f​ ~/main-emacs/elisp/use-package-rcp.el" 0 3 (display "") 3 40 (face consult-file)) #("f​ ~/main-emacs/init.el" 0 3 (display "") 3 23 (face consult-file)) #("f​ ~/main-emacs/elisp/mu4e-rcp.el" 0 3 (display "") 3 33 (face consult-file)) #("b​ themes-rcp.el" 0 3 (display "") 3 16 (face consult-buffer)) #("b​ programming-general-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("f​ ~/main-emacs/elisp/early-packages-rcp.el" 0 3 (display "") 3 43 (face consult-file)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("f​ ~/main-emacs/elisp/themes-rcp.el" 0 3 (display "") 3 35 (face consult-file)) #("f​ ~/.mbsyncrc" 0 3 (display "") 3 14 (face consult-file)) #("b​ better-defaults-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("f​ ~/main-emacs/elisp/better-defaults-rcp.el" 0 3 (display "") 3 44 (face consult-file)) #("b​ shell-eshell-rcp.el" 0 3 (display "") 3 22 (face consult-buffer)) #("b​ programming-lua-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("b​ checking-spelling-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("b​ checking-words-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ checking-spelling-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("f​ ~/main-emacs/elisp/shell-vterm-rcp.el" 0 3 (display "") 3 40 (face consult-file)) #("b​ checking-spelling-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("b​ shell-eshell-rcp.el" 0 3 (display "") 3 22 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ checking-words-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ system-variables-rcp.el" 0 3 (display "") 3 26 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("f​ ~/main-emacs/elisp/system-variables-rcp.el" 0 3 (display "") 3 45 (face consult-file)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("f​ ~/main-emacs/elisp/early-packages-rcp.el" 0 3 (display "") 3 43 (face consult-file)) #("f​ ~/main-emacs/elisp/checking-words-rcp.el" 0 3 (display "") 3 43 (face consult-file)) #("f​ ~/main-emacs/elisp/checking-grammar-rcp.el" 0 3 (display "") 3 45 (face consult-file)) #("f​ ~/main-emacs/elisp/checking-spelling-rcp.el" 0 3 (display "") 3 46 (face consult-file)) #("f​ ~/main-emacs/elisp/shell-eshell-rcp.el" 0 3 (display "") 3 41 (face consult-file)) #("f​ ~/main-emacs/elisp/programming-lua-rcp.el" 0 3 (display "") 3 44 (face consult-file)) #("f​ ~/main-emacs/elisp/programming-elisp-rcp.el" 0 3 (display "") 3 46 (face consult-file)) #("f​ ~/Documents/org-database/roam/Oct292020-125345-caminhaletterperovaz.org" 0 3 (display "") 3 74 (face consult-file)) #("f​ ~/main-emacs/elisp/programming-general-rcp.el" 0 3 (display "") 3 48 (face consult-file)) #("f​ ~/main-emacs/elisp/programming-profiling-and-debug-rcp.el" 0 3 (display "") 3 60 (face consult-file)) #("f​ ~/main-emacs/init.el" 0 3 (display "") 3 23 (face consult-file)) #("f​ ~/.config/awesome/rc.lua" 0 3 (display "") 3 27 (face consult-file)) #("b​ programming-general-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("b​ buffer-and-window-management-rcp.el" 0 3 (display "") 3 38 (face consult-buffer)) #("b​ completion-helm-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("f​ ~/main-emacs/elisp/completion-selectrum-rcp.el" 0 3 (display "") 3 49 (face consult-file)) #("b​ checking-spelling-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("b​ completion-ivy-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ completion-company-rcp.el" 0 3 (display "") 3 28 (face consult-buffer)) #("b​ completion-general-rcp.el" 0 3 (display "") 3 28 (face consult-buffer)) #("b​ themes-rcp.el" 0 3 (display "") 3 16 (face consult-buffer)) #("b​ convenient-functions-rcp.el" 0 3 (display "") 3 30 (face consult-buffer)) #("b​ custom-directories-rcp.el" 0 3 (display "") 3 28 (face consult-buffer)) #("b​ keybinds-frameworks-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("b​ faces-rcp.el" 0 3 (display "") 3 15 (face consult-buffer)) #("b​ keybinds-frameworks-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("b​ better-defaults-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ undoing-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ auto-gc-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ undoing-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ straight-package-management-rcp.el" 0 3 (display "") 3 37 (face consult-buffer)) #("b​ auto-gc-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ buffer-management-rcp.el" 0 3 (display "") 3 27 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ straight-package-management-rcp.el" 0 3 (display "") 3 37 (face consult-buffer)) #("b​ better-defaults-rcp.el" 0 3 (display "") 3 25 (face consult-buffer)) #("b​ straight-package-management-rcp.el" 0 3 (display "") 3 37 (face consult-buffer)) #("b​ early-packages-rcp.el" 0 3 (display "") 3 24 (face consult-buffer)) #("b​ etc-config.org" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ keybinds-frameworks-rcp.el" 0 3 (display "") 3 29 (face consult-buffer)) #("f​ ~/main-emacs/elisp/early-packages-rcp.el" 0 3 (display "") 3 43 (face consult-file)) #("b​ auto-gc-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("f​ ~/main-emacs/straight/repos/doom-modeline/doom-modeline-segments.el" 0 3 (display "") 3 70 (face consult-file)) #("b​ themes-rcp.el" 0 3 (display "") 3 16 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ undoing-rcp.el" 0 3 (display "") 3 17 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("b​ system-variables-rcp.el" 0 3 (display "") 3 26 (face consult-buffer)) #("b​ init.el" 0 3 (display "") 3 10 (face consult-buffer)) #("f​ ~/main-emacs/init.el" 0 3 (display "") 3 23 (face consult-file)) #("f​ ~/dotfiles/awesomewm/.config/awesome/rc.lua" 0 3 (display "") 3 46 (face consult-file)) #("f​ ~/main-emacs/configs/buffer-management.org" 0 3 (display "") 3 45 (face consult-file))))
(setq read-expression-history '("(setq yas-snippet-dirs '(doom-snippets-dir \"/home/krisbalintona/main-emacs/etc/yasnippet/snippets/\"))" "(setq kb/variable-pitch-font \"Iosevka Etoile\")" "(re-search-forward (symbol-value 'org-link-bracket-re) nil t)" "(buffer-substring-no-properties ; Limit to only links with ids
                        (+ (match-beginning 0) 3)
                        (+ (match-beginning 0) 5))" "(buffer-substring-no-properties ; Limit to only links with ids
                        (+ (match-beginning 0) 2)
                        (+ (match-beginning 0) 4))" "(equal (buffer-substring-no-properties ; Limit to only links with ids
                        (+ (match-beginning 0) 2)
                        (+ (match-beginning 0) 4))
                       \"id\")" "(kb/org-roam-update-link-desc--action (current-buffer))" "(current-prefix-arg)" "(kb/org-roam-update-link-desc--action (current-buffer))" "(with-current-buffer)" "(find-file-noselect nil)" "(find-file-noselect f)" "(org-id-get 'point)" "(org-id-get)" "(org-id-copy)" "(org-id-get)" "(symbol-value (org-id-get))" "(org-id-get)" "(re-search-forward (symbol-value 'org-link-bracket-re) nil t)" "(org-id-get)" "(typep (org-roam-node-at-point) 'alist)" "(typep (org-roam-node-at-point))" "(type (org-roam-node-at-point))" "(org-roam-node-at-point)" "org-roam-node-at-point" "(org-element-at-point)" "(org-element-property :contents-begin (org-element-at-point))" "(org-element-at-point)" "(org-element-property :path (org-element-at-point))" "(defun eval-expression-to-kill-ring ()
    (interactive)
    (call-interactively 'eval-expression)
    (kill-new (car values)))" "(org-element-at-point)" "(org-element-property :path (org-element-at-point))" "(org-element-property :title (org-element-at-point))" " y" "(org-element-property :title (org-element-at-point))" "(org-element-at-point)" "(org-element-property :path (org-element-at-point))" "(org-element-property :format (org-element-at-point))" "(while
        (let* ((id (org-element-property :path (org-element-at-point)))
               ;; (node (org-roam-populate (org-roam-node-create :id id)))
               (node (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
               )
          (re-search-forward (symbol-value 'org-link-bracket-re) (window-end) \"hello\")
          (replace-match (org-link-make-string
                          (concat \"id:\" (org-roam-node-id node)) (org-roam-node-title node)
                          )))
        )" "(save-excursion
      (goto-char (window-start))
      (while
        (let* ((id (org-element-property :path (org-element-at-point)))
               ;; (node (org-roam-populate (org-roam-node-create :id id)))
               (node (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
               )
          (re-search-forward (symbol-value 'org-link-bracket-re) (window-end) \"hello\")
          (replace-match (org-link-make-string
                          (concat \"id:\" (org-roam-node-id node)) (org-roam-node-title node)
                          )))
        ))" "(re-search-forward (symbol-value 'org-link-bracket-re) (window-end) t)" "(save-excursion
      (goto-char (window-start))
      (while
          (let* ((id (org-element-property :path (org-element-at-point)))
                 ;; (node (org-roam-populate (org-roam-node-create :id id)))
                 (node (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
                 )
            (re-search-forward (symbol-value 'org-link-bracket-re) (window-end) t)
            (replace-match (org-link-make-string
                            (concat \"id:\" (org-roam-node-id node)) (org-roam-node-title node)
                            )))
        ))" "(re-search-forward (symbol-value 'org-link-bracket-re))" "(org-element-property :path (org-element-at-point))" "(replace-match (org-link-make-string
                        (concat \"id:\" (org-roam-node-id (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))) (org-roam-node-title (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
                        ))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             ;; (node (org-roam-populate (org-roam-node-create :id id)))
             (node (org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\")))
             )
           (print id node))" "(org-roam-populate (org-roam-node-create :id \"625aa2bc-de1e-4823-884d-4dff4520d41e\"))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
             )
           (print id node))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
             )
           (concat `id `node))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (concat `id `node)
             ))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (concat id node)
             ))" "      (let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           \"hello\"
             ))
" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (echo \"hello\")
             ))" "(let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (echo test)
             ))" "      (let* ((id (org-element-property :raw-link (org-element-at-point)))
             (node (org-roam-populate (org-roam-node-create :id id)))
           (echo id)
             ))
" "(org-element-property :raw-link (org-element-at-point))" "(org-element-property :type id (org-element-at-point))" "(org-element-property :path (org-element-at-point))" "(org-element-property :path `(org-element-at-point))" "(org-element-property :path ‘(org-element-at-point))" "(org-element-property :path '(org-element-at-point))" "(org-element-property :path (org-element-at-point))" "id" "(org-element-at-point)" "(org-element-property :id (org-element-at-point))" "(org-element-at-point)" "(org-element-property :path (org-element-at-point))" "(/ 1100 350)" "(* 3 (/ 16 5))"))
(setq flycheck-read-checker-history '("textlint" "proselint" "textlint" "proselint" "textlint" "proselint"))
(setq buffer-name-history '("init.el" "why_amazing_marvin_is_one_of_a_kind-Jun172021-201735.org" "ace-jump-mode.el" "textlintrc.json" "fleeting_notes-Jun092021-031415.org" "engl0930_essay_1-Jun072021-235609.org" "*vterm*" "init.el" "*helpful function: ace-link--org-collect*" "*Messages*" "05-06-2021.org" "*Messages*" "*helpful command: org-roam-doctor*" "*helpful function: ace-link--org-collect*" "*Messages*" "*helpful function: ace-link--org-collect*" "*scratch*" "org-roam-general-rcp.el" "bui" "index.hbs" "*Messages*" "org-roam-general-rcp.el" "+new-snippet+" "README.md" "default.hbs" "header.hbs" "template-chicago_manual.tex" "rels0120_paper_1-Jun062021-184410.org<4>" "*Scratch for org-mode*" "latexmk output" "rels0120-paper_1.pdf" "checking-words-rcp.el" "qol-packages.org" "org-packages.org" "qol-packages.org" "org-roam-general-rcp.el" "themes-rcp.el" "*Backtrace*" "*Messages*" "*Warnings*" "*Messages*" "init.el" "*Messages*" "*Warnings*" "*Messages*" "*Warnings*" "*Messages*" "*Warnings*" "programming-general-rcp.el" "temp.org" "*scratch*" "second-brain.org" "init.el" "second-brain.org" "org-agenda-views-rcp.el" "init.el" "latexmk output" "phil0360-midterm.pdf" "*esup*" "programming-general-rcp.el" "*scratch*" "*Scratch for org-mode*" "*scratch*" "programming-general-rcp.el" "completion-selectrum-rcp.el" "base-config.org" "latex.org"))
(setq eww-prompt-history '("google.com"))
(setq read-char-history '("all" "yes" "all"))
(setq swiper-history '("ration" #("etter" 0 5 (ivy-index 0)) #(" * Better-jumper" 0 1 (swiper-line-number 315 display "315 ") 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-superstar-header-bullet org-level-1) composition (0 1 [9885]) org-category "qol-packages") 2 3 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 org-category "qol-packages") 3 16 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 org-category "qol-packages")) #("habit" 0 5 (ivy-index 0)) #("         '((sequence \"TODO(t)\" \"HABIT(H)\" \"WAITING(w!)\" \"NEXT(n)\" \"PROG(p)\" \"|\" \"DONE(d!/@)\")" 0 1 (display "64  " swiper-line-number 64) 1 10 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 10 11 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 11 12 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 12 21 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 30 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 41 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 41 42 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 42 55 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 55 56 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 56 65 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 65 66 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 66 75 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 75 76 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 76 79 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 79 80 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 80 92 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 92 93 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t))))
(setq org-agenda-search-history '("GTD"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("264" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("210" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3))))
(setq magit-revision-history '("origin/master" "master" "origin/master"))
(setq org-read-date-history '("+4    " "fri 11:59pm    " "fri 10:10am    " "   " "+1    " "   " "may 9    " "+9    " "+8    " "tue    " "mon    " "sun    " "sat    " "+0    " "17    " "19    " "+0    " "fri    " "wed    " "tue    " "sun    " "wed    " "tue    " "mon    " "sun    " "   " "+1    " "sun    " "fri    " "thu    " "tue    " "+2    " "+1    " "sun    " "+0    " "fri    " "+1    " "+0    " "wed    " "mon    " "sun    " "sat    " "fri    " "+1    " "   " "thu    " "   " "+0    " "+1    " "   " "16 9am    " "5    " "+9    " "sun    " "thu    " "wed    " "tue    " "mon    " "sun    " "mon    " "+1    " "apr 11    " "   " "31    " "wed    " "27    " "thu    " "wed    " "+1    " "fri 10am    " "tue    " "+0    " "   " "22    " "   " "sun    " "thu    " "wed    " "tue    " "sun    " "   " "mon    " "sat    " "+1    " "   " "mon    " "fri    " "sat    " "+1    " "   " "sun    " "   " "+1    " "   " "wed    " "+0    " "tue    " "wed    " "thu    " "fri    "))
(setq org-refile-history '("school.org/Classes/CHIN0100/" "school.org/Classes/EAST0650/" "school.org/Classes/EAST0650/" "school.org/Classes/EAST0650/" "school.org/Classes/EAST0650/" "school.org/Classes/PHIL0360/" "school.org/Classes/PHIL0360/" "school.org/Classes/CHIN0100/" "school.org/Administration/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "housekeeping.org/" "inputs.org/Lectures/" "hobbies.org/Emacs/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "school.org/Classes/" "hobbies.org/Emacs/" "hobbies.org/Emacs/" "housekeeping.org/" "hobbies.org/Emacs/" "housekeeping.org/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "inputs.org/Reddit/" "inputs.org/Reddit/" "inputs.org/Reddit/" "inputs.org/Reddit/" "inputs.org/Reddit/" "hobbies.org/Personal knowledge management/" "hobbies.org/Linux/" "school.org/Classes/Write my final paper/" "school.org/Administration/Figure out how I'm going to pay for college/" "school.org/Classes/" "school.org/Classes/Write my final paper/" "school.org/Classes/" "school.org/Classes/Write my presentation paper/" "school.org/Administration/" "school.org/Clubs/" "school.org/Administration/" "inputs.org/Reddit/" "inputs.org/Reddit/" "inputs.org/Reddit/" "hobbies.org/" "school.org/Classes/" "school.org/Administration/Figure out how I'm going to pay for college/" "hobbies.org/Linux/" "habits.org/" "hobbies.org/Personal knowledge management/" "school.org/Administration/Figure out how I'm going to pay for college/" "hobbies.org/Linux/" "hobbies.org/" "hobbies.org/Emacs/" "habits.org/" "school.org/Classes/" "housekeeping.org/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "misc.org/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "school.org/Classes/POBS0910/Research Machiavelli/" "misc.org/" "school.org/Clubs/" "hobbies.org/Linux/" "school.org/Clubs/" "media.org/Regular/" "inputs.org/Articles/" "housekeeping.org/" "school.org/Administration/Figure out how I'm going to pay for college/" "housekeeping.org/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "housekeeping.org/" "school.org/Administration/Figure out how I'm going to pay for college/" "school.org/Administration/" "school.org/Administration/Figure out how I'm going to pay for college/" "hobbies.org/Emacs/" "school.org/Clubs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "hobbies.org/Emacs/" "hobbies.org/Personal knowledge management/" "housekeeping.org/" "hobbies.org/Emacs/" "misc.org/" "hobbies.org/Emacs/" "hobbies.org/Linux/" "misc.org/" "hobbies.org/Emacs/"))
(setq bibtex-completion-cite-command-history '("autocite" "textcquote" "autocite" "cite*" "cite" "cite*" "cite" "autocite" "cite" "autocite" "cite"))
(setq keymap-name-history '("lua-mode-map" "pdf-view-mode-map"))
(setq org-capture--prompt-history '("person"))
(setq read-number-history '("1" "200" "1" "2" "1" "271" "298" "1" "31" "80" "88" "9" "5" "4" "9" "1"))
(setq mu4e~headers-search-hist '("milk" "dr jing" "risla" "promissory note" "docusign" "risla" "paper onesimo" "paper" "rise of universities" "grade" "final grades" "access risla" "access" "dr lin" "fiscal" "stewardship" "steward" "PIN" "level 1" "pen pal" "burp" "owc" "first readings" "onesimo" "xiru" "corrin" "no labels"))
(setq query-replace-history '("Beau Haan" #("[[~Beau Haan]]" 3 11 (htmlize-link (:uri "~Beau Haan") org-category "implementing_a_digital_zettelkasten_using_block_references_in_roam_research-Jun042021-235544") 11 12 (htmlize-link (:uri "~Beau Haan") rear-nonsticky t org-category "implementing_a_digital_zettelkasten_using_block_references_in_roam_research-Jun042021-235544")) "*" "#" "*" "#" "*" "#" ":refine:" "refine" "+ " "- " "+" "-" "*" "#" "other" "general" "org-roam-general" "themes" "other" "views" "views" "general" "org-agenda" "latex" "pdf" "general" "John" "Interviewee" "Kristoffer" "Interviewer" "unset" "none" "--embedded-note-title" #("#8e98aa" 0 6 (face (:background #("#8e98aa" 0 6 (fontified t face ((:foreground "black") (:background "#8e98aa"))) 6 7 (rear-nonsticky t fontified t face ((:foreground "black") (:background "#8e98aa")))) :foreground "#ffffff" :box (:line-width -1))) 6 7 (face (:background #("#8e98aa" 0 6 (fontified t face ((:foreground "black") (:background "#8e98aa"))) 6 7 (rear-nonsticky t fontified t face ((:foreground "black") (:background "#8e98aa")))) :foreground "#ffffff" :box (:line-width -1)) rear-nonsticky t)) "center" "justify" " " #("	" 0 1 (rear-nonsticky t org-category "Feb242021-223754")) "passage" "Prompt" " " "	" "textbf" "emph" "--" "-" "Mom:" "Mom" "Dad:" "Dad" "\\ldots" "..." "Arnauld" "THIS PERSON" "EAST0650" "CHIN0100" "EAST0620" "CHIN0100" "PHIL0360" "CHIN0100" "CHIN0100" "POBS0910" "MY_USERNAME" "krisbalintona" "connected" "plugged" "Connected" "Plugged" "easystore" "keyboard" "prev" "tmp" "btrfs" "rofi -dmenu" "dmenu" "rofi" "mu4e-rcp" "use-package-rcp" "str" "string" "yay" "pacman" "use-package-rcp" "straight-package-management-rcp" "evil-rcp" "faces-rcp" "buffer-management-rcp" "undoing-rcp" "undoing-rcp" "shell-vterm-rcp" "vterm-rcp" "vterm-rcp" "eshell-rcp" "shell-eshell-rcp" "themes-rcp" "programming-profiling-and-debug-rcp" #("profiling-and-debug-rcp" 0 22 (face (font-lock-constant-face lisp-extra-font-lock-quoted)) 22 23 (face (font-lock-constant-face lisp-extra-font-lock-quoted) rear-nonsticky t)) "completion-helm-rcp"))
(setq counsel-fonts-history '("LiterationSerif Nerd Font" "Utopia" "Libre Bodoni" "Libre Caslon Text" "Iosevka Etoile" "Hack Nerd Font Mono" "IBM Plex Sans KR" "Noto Sans Mono" "iosevka term ss04"))
(setq bookmark-history '("QMK Keymap" #("q" 0 1 (ivy-index 0)) "QMK Keymap" "QMK Keymap" "Zotero" "QMK Keymap" #("qmk" 0 3 (ivy-index 0)) "QMK Keymap" "QMK Keymap" "QMK Keymap" #("Zotero" 0 6 (ivy-index 0)) "QMK Keymap" "QMK Keymap" #("qm" 0 2 (ivy-index 0)) "QMK Keymap" "QMK Keymap" "QMK Keymap" "QMK Keymap" #("keymap" 0 6 (ivy-index 0)) "QMK Keymap" "Org Database" #("Org Database" 0 12 (ivy-index 1)) "org-refile-last-stored" #("org-refile-last-stored" 0 22 (ivy-index 2)) "QMK Keymap" #("QMK Keymap" 0 10 (ivy-index 1)) #("refile" 0 6 (ivy-index 0)) "org-capture-last-stored" #("org-capture-last-stored" 0 23 (ivy-index 0))))
(setq shell-command-history '("ripgrep" "~/main-emacs/.gitignore" "lsb_release -sd"))
(setq face-name-history '(#("ace-jump" 0 8 (ivy-index 1)) "ace-jump-face-foreground" #("ace jump" 0 8 (ivy-index 1)) "ace-jump-face-foreground" "ace-jump-face-background" #("org link" 0 8 (ivy-index 0)) "org-link" #("cpc" 0 3 (ivy-index 0)) "company-preview-common" #("header-line" 0 11 (ivy-index 0)) "ivy-minibuffer-match-face-3" #("immf2" 0 5 (ivy-index 0)) "ivy-minibuffer-match-face-2" #("margin doc" 0 10 (ivy-index 0)) "marginalia-documentation" #("selectrum anno" 0 14 (ivy-index 0)) "selectrum-completion-annotation" "ivy-grep-info" "selectrum-completion-annotation" "ace-jump-face-foreground" "all-the-icons-ivy-rich-icon-face" "ivy-current-match" "ivy-minibuffer-match-face-2" "message-header-to" "message-header-cc" #("compose hea" 0 11 (ivy-index 0)) "mu4e-compose-header-face" "org-roam-link" #("variable-pit" 0 12 (ivy-index 0)) "variable-pitch" "bold"))
(setq ivy-history '(#("/home/krisbalintona/main-emacs/elisp/mu4e-rcp.el" 0 48 (ivy-index 0)) #("programming general" 0 19 (ivy-index 0)) "/home/krisbalintona/main-emacs/elisp/programming-general-rcp.el" #("init" 0 4 (ivy-index 0)) "/home/krisbalintona/main-emacs/init.el" #("selectrum" 0 9 (ivy-index 0)) "/home/krisbalintona/main-emacs/elisp/completion-selectrum-rcp.el" #("mu4e.rc" 0 7 (ivy-index 0)) #("~/main-emacs/elisp/" 0 19 (ivy-index 4)) #("/home/krisbalintona/.config/rofi/config.rasi" 0 44 (ivy-index 12)) #("sudo timeshift --create --comment \"After reaching my limit\"" 0 1 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-shell-command-face) 1 4 (ivy-index 0 face eshell-syntax-highlighting-shell-command-face) 4 5 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 5 6 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-shell-command-face) 6 14 (ivy-index 0 face eshell-syntax-highlighting-shell-command-face) 14 15 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 15 16 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 16 23 (ivy-index 0 face eshell-syntax-highlighting-default-face) 23 24 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 24 25 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 25 33 (ivy-index 0 face eshell-syntax-highlighting-default-face) 33 34 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 34 35 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-string-face) 35 58 (ivy-index 0 face eshell-syntax-highlighting-string-face) 58 59 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-string-face)) #("find ./roam -type f -exec sed -i 's/lindbergBeginningsWesternScience/lindbergBeginningsWesternScience2007/' {} \\;" 0 1 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-shell-command-face) 1 4 (ivy-index 0 face eshell-syntax-highlighting-shell-command-face) 4 5 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 5 6 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-file-arg-face) 6 11 (ivy-index 0 face eshell-syntax-highlighting-file-arg-face) 11 12 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 12 13 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 13 17 (ivy-index 0 face eshell-syntax-highlighting-default-face) 17 18 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 18 19 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 19 20 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 20 21 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 21 25 (ivy-index 0 face eshell-syntax-highlighting-default-face) 25 26 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 26 27 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 27 29 (ivy-index 0 face eshell-syntax-highlighting-default-face) 29 30 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 30 31 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 31 32 (ivy-index 0 face eshell-syntax-highlighting-default-face) 32 33 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 33 34 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-string-face) 34 107 (ivy-index 0 face eshell-syntax-highlighting-string-face) 107 108 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 108 109 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 109 110 (ivy-index 0 face eshell-syntax-highlighting-default-face) 110 111 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face) 111 112 (ivy-index 0 rear-nonsticky (arg-begin arg-end) arg-begin t face eshell-syntax-highlighting-default-face) 112 113 (ivy-index 0 rear-nonsticky (arg-end arg-begin) arg-end t face eshell-syntax-highlighting-default-face)) #("lind" 0 4 (ivy-index 0)) #("dele" 0 4 (ivy-index 0)) "sudo timeshift --delete" #("after" 0 5 (ivy-index 0)) #("sudo timeshift --create --comment \"Working on zsh\"" 0 50 (ivy-index 1)) #("de" 0 2 (ivy-index 2)) "sudo timeshift --delete" "sudo timeshift --delete 37" #("org-ref-insert-cite-with-completion" 0 35 (ivy-index 0 idx 0)) #("sudo" 0 4 (ivy-index 0)) #("global-prettier-mode" 0 20 (ivy-index 0 idx 0)) #("comple" 0 6 (ivy-index 0)) "/home/krisbalintona/main-emacs/configs/completion-frameworks.org" #("consult" 0 7 (ivy-index 0)) #("collection" 0 10 (ivy-index 0)) "evil-collection" #("evil" 0 4 (ivy-index 0)) #("change" 0 6 (ivy-index 0)) #("ma" 0 2 (ivy-index 1)) "Machiavelli" "instruction" "augments" "Roped" #("conqueror" 0 9 (ivy-index 1)) "conquerors" #("org-protocol" 0 1 (display "org/o" full-name "/usr/share/emacs/28.0.50/lisp/org/org-protocol.el" ivy-index 2) 1 12 (full-name "/usr/share/emacs/28.0.50/lisp/org/org-protocol.el" ivy-index 2)) #("org-proto" 0 9 (ivy-index 1)) #("doom modeline" 0 13 (ivy-index 0)) "doom-modeline" #("un" 0 2 (ivy-index 0)) "understanding" #("scru" 0 4 (ivy-index 0)) "scrutiny" #("the" 0 3 (ivy-index 0)) "BS" "Telecast" #("Purposeful" 0 10 (ivy-index 0)) #("Philosophy" 0 10 (ivy-index 0)) "upstart" #("protocol" 0 8 (ivy-index 4)) "org-roam-protocol" #("stc" 0 3 (ivy-index 1)) "sudo timeshift --create --comment \"After a lot of work on Minecraft and QMK keymap\"" #("sudo timeshift --create --comment \"After learning about student finances\"" 0 73 (ivy-index 1)) #("sudo timeshift --create --comment \"After successfully starting stow dotfile management\"" 0 87 (ivy-index 0)) #("s" 0 1 (ivy-index 0)) #("stow zsh" 0 8 (ivy-index 2)) "stow -Rv zsh" "qmk flash -kb kbdfans/kbd4x -km my-programmed-keymap" #("qmk" 0 3 (ivy-index 1)) "qmk flash -kb kbdfans/kbd4x -km my-programmed-keymap" #("sudo timeshift --create --comment \"After a lot of work on Minecraft and QMK keymap\"" 0 83 (ivy-index 0)) #("o" 0 1 (ivy-index 0)) #("org-transclusion" 0 16 (ivy-index 1 full-name "/home/krisbalintona/main-emacs/straight/build/org-transclusion/org-transclusion.el")) #("transclus" 0 9 (ivy-index 1)) "org-transclusion-autoloads" #("sudo timeshift --create --comment \"After adding a bit of stuff to my Emacs config\"" 0 82 (ivy-index 76)) #("sudo timeshift --create --comment \"After setting and messing around in virtualbox VM\"" 0 85 (ivy-index 77)) #("time" 0 4 (ivy-index 13)) #("unpackaged/org-refile-to-datetree-using-ts-in-entry" 0 51 (ivy-index 0 idx 0)) #("sudo timeshift --create --comment \"Before class\"" 0 48 (ivy-index 0)) #("rc.lua" 0 6 (ivy-index 0)) "/home/krisbalintona/.config/awesome/rc.lua" #("lua" 0 3 (ivy-index 1)) #("lua-mode" 0 8 (ivy-index 1)) "lua-mode-autoloads" #("smtpmail-queue-counter" 0 22 (idx 0 ivy-index 0)) #("sudo timeshift --create --comment \"After class\"" 0 47 (ivy-index 1)) #("ti" 0 2 (ivy-index 0)) #("timeshi" 0 7 (ivy-index 0)) #("message-header-cc" 0 17 (ivy-index 0 idx 0)) #("stimeshi" 0 8 (ivy-index 0)) #("tmeshif" 0 7 (ivy-index 0)) #("i" 0 1 (ivy-index 0)) "/home/krisbalintona/main-emacs/init.el" #("org-roam-capture-templates" 0 26 (ivy-index 0 idx 0)) "ENGN0900" #("atom" 0 4 (ivy-index 0)) "atom-one-dark" #("ink" 0 3 (ivy-index 0)) "inkpot" #("sime" 0 4 (ivy-index 0)) #("timer-idle-list" 0 15 (idx 0 ivy-index 0)) #("em mode" 0 7 (ivy-index 0)) "esh-mode"))
(setq counsel-org-goto-history '(#("Test" 0 4 (ivy-index 1 idx 1 fontified nil face "counsel-outline-1")) #("Org-roam-server" 0 15 (face "counsel-outline-1" fontified nil idx 2 ivy-index 2)) #("Org-roam" 0 8 (face "counsel-outline-1" fontified nil idx 0 ivy-index 0))))
(setq counsel-apropos-history '(#("org agenda skip function" 0 24 (ivy-index 1)) "org-agenda-skip-function"))
(setq helm-occur-history '("kbd"))
(setq org-tags-history '("video" "github" "book" "interview" "video" "article" "website" "book" "BOOK" "journal_article" "book" "journal_article" "book" "PACKAGE" "PROJECT" "TOP" "PROJECT" "TOP" "PROJECT" "TOP" "PROJECT" "URGENT" "TOP" "URGENT" "DEMANDING" "URGENT" "TOP" "TRANSITORY" "DEMANDING" "BACKGROUND" "DEMANDING" "TOP" "DEMANDING" "TRANSITORY" "DEMANDING" "TOP" "BACKGROUND" "DEMANDING" "BACKGROUND" "TOP" "DEMANDING" "URGENT" "TOP" "BACKGROUND" "DEMANDING" "BACKGROUND" "DEMANDING" "URGENT" "BACKGROUND" "DEMANDING" "TRANSITORY" "DEMANDING" "BACKGROUND" "DEMANDING" "BACKGROUND" "TRANSITORY" "BACKGROUND" "URGENT" "TOP" "URGENT" "TOP" "BACKGROUND" "TRANSITORY" "BACKGROUND" "TRANSITORY" "connection" "DEMANDING" "connection" "BACKGROUND" "DEMANDING" "TRANSITORY" "BACKGROUND" "TRANSITORY" "BACKGROUND" "DEMANDING" "BACKGROUND" "TRANSITORY" "BACKGROUND" "URGENT" "TOP" "URGENT" "DEMANDING" "TOP" "TRANSITORY" "TOP" "TRANSITORY" "URGENT" "TOP" "URGENT" "PROJECT" "URGENT" "BACKGROUND" "TOP" "sharp" "PROJECT" "URGENT" "BACKGROUND" "DEMANDING" "BACKGROUND" "PROJECT"))
(setq selectrum-swiper-history '(#("** PROG [#D] Configure ledger-mode and start using it [0/0]                                                                                                                                               :PROJECT:" 0 1 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 1 2 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 2 3 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 3 7 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 7 8 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 8 12 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" font-lock-fontified t display "🏃" fontified nil) 12 54 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 54 59 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "Emacs" fontified nil) 59 202 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "Emacs" fontified nil) 202 210 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "Emacs" fontified nil) 210 211 (selectrum-candidate-display-prefix #("L293: " 0 6 (face completions-annotations)) line-num 293 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "Emacs" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil)) #("* TODO [#A] Build my inklings" 0 1 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 composition (0 1 [9885]) face (org-superstar-header-bullet org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" org-category "habits" fontified t) 1 2 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face org-level-1 org-category "habits" org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified t wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "") 2 6 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face ((:foreground "orange" :underline t) org-level-1) org-category "habits" org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified t wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "") 6 7 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face org-level-1 org-category "habits" org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified t wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "") 7 11 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face (org-priority org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" org-category "habits" font-lock-fontified t display "💀" fontified t) 11 29 (selectrum-candidate-display-prefix #("L152: " 0 6 (face completions-annotations)) line-num 152 face org-level-1 org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" org-category "habits" fontified t)) #("    :straight (org-ql :type git :host github :repo \"alphapapa/org-ql\")" 0 4 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 13 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 13 14 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 14 15 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 15 21 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 22 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 22 27 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 27 32 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 37 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 45 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 45 50 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 50 51 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 51 69 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 69 70 (selectrum-candidate-display-prefix #("L324: " 0 6 (face completions-annotations)) line-num 324 org-category "org-agenda" face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("                                    (:name \"Projects without tasks\" :not (:children todo))" 0 36 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 36 37 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (rainbow-delimiters-depth-8-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 42 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (font-lock-builtin-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 42 43 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 43 67 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 67 68 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 68 72 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (font-lock-builtin-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 72 73 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 73 74 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (rainbow-delimiters-depth-9-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 74 83 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (font-lock-builtin-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 83 88 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 88 89 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (rainbow-delimiters-depth-9-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 89 90 (selectrum-candidate-display-prefix #("L498: " 0 6 (face completions-annotations)) line-num 498 display nil face (rainbow-delimiters-depth-8-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                          " 0 6 (face org-indent) 6 42 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("                                ((org-ql-block-header \"Projects without any tasks\")" 0 32 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 33 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (rainbow-delimiters-depth-5-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 33 34 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (rainbow-delimiters-depth-6-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 34 54 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 54 82 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 82 83 (selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)) line-num 454 display nil face (rainbow-delimiters-depth-6-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("                                      " 0 6 (face org-indent) 6 38 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("                                      (tags-local \"PROJECT\")" 0 38 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 38 39 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (rainbow-delimiters-depth-6-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 39 50 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 50 59 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 59 60 (selectrum-candidate-display-prefix #("L451: " 0 6 (face completions-annotations)) line-num 451 org-category "org-agenda" display nil face (rainbow-delimiters-depth-6-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("** Savehist" 0 1 (selectrum-candidate-display-prefix #("L659: " 0 6 (face completions-annotations)) line-num 659 org-category "base-config" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-hide fontified t) 1 2 (selectrum-candidate-display-prefix #("L659: " 0 6 (face completions-annotations)) line-num 659 org-category "base-config" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (selectrum-candidate-display-prefix #("L659: " 0 6 (face completions-annotations)) line-num 659 org-category "base-config" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 3 11 (selectrum-candidate-display-prefix #("L659: " 0 6 (face completions-annotations)) line-num 659 org-category "base-config" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t)) #("** Doom-modeline" 0 1 (selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)) line-num 126 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-hide fontified t) 1 2 (selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)) line-num 126 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)) line-num 126 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 3 16 (selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)) line-num 126 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t)) #("** Chapter 15 - Concerning things for which men, and especially princes, are praised or blamed :sharp:" 0 1 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 1 2 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-superstar-header-bullet org-level-2) composition (4 1 [9679]) line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 2 3 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 3 95 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 95 101 (fontified t org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-tag org-level-2) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations))) 101 102 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "Nov222020-211434-machiavelliprince" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-tag org-level-2) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) line-num 153 selectrum-candidate-display-prefix #("L153: " 0 6 (face completions-annotations)))) #("  - The books are thematic around Florence's \"remarkable party division, which, unlike the divisions in ancient Rome, kept the city weak and corrupt.\"" 0 2 (fontified nil org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 88 selectrum-candidate-display-prefix #("L088: " 0 6 (face completions-annotations))) 2 3 (fontified nil org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 88 selectrum-candidate-display-prefix #("L088: " 0 6 (face completions-annotations))) 3 150 (fontified nil org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 88 selectrum-candidate-display-prefix #("L088: " 0 6 (face completions-annotations)))) #("    (flycheck-standard-error-navigation t) ; Use standard M-g n/p error navigation keybindings" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 5 29 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 29 41 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 41 42 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 42 43 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 43 45 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (font-lock-comment-delimiter-face org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations))) 45 94 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "programming" font-lock-multiline t face (font-lock-comment-face org-block) display nil line-num 284 selectrum-candidate-display-prefix #("L284: " 0 6 (face completions-annotations)))) #("    (flycheck-check-syntax-automatically '(save mode-enabled idle-buffer-switch)) ; When to check" 0 4 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 4 5 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 5 41 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 41 42 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 42 43 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 43 79 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 79 80 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 80 81 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 81 82 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 82 84 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 84 97 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations)))) #("     \"TAB\" #'company-complete-selection" 0 5 (selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations)) line-num 39 org-category "completion-frameworks" wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 5 10 (selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations)) line-num 39 org-category "completion-frameworks" wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 10 39 (selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations)) line-num 39 org-category "completion-frameworks" wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) #("- State \"DONE\"       from \"TODO\"       [2020-11-26 Thu 01:38]" 0 1 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 face org-superstar-item composition (5 1 [8211]) fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 2 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 9 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 9 13 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 13 27 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 27 31 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t org-category "habits") 31 39 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 60 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 60 61 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) #("- State \"DONE\"       from \"TODO\"       [2020-11-25 Thu 01:38]" 0 1 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-superstar-item composition (5 1 [8211]) fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 2 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 9 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 9 13 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 13 27 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 27 31 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t org-category "habits") 31 39 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 49 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 49 50 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 50 60 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 60 61 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) #("- State \"DONE\"       from \"TODO\"       [2020-11-26 Thu 01:38]" 0 1 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-superstar-item composition (5 1 [8211]) fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 2 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 9 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 9 13 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 13 27 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 27 31 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t org-category "habits") 31 39 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 60 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 60 61 (selectrum-candidate-display-prefix #("L031: " 0 6 (face completions-annotations)) line-num 31 face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) #("** Lua-mode" 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "programming" line-num 377 selectrum-candidate-display-prefix #("L377: " 0 6 (face completions-annotations))) 1 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "programming" line-num 377 selectrum-candidate-display-prefix #("L377: " 0 6 (face completions-annotations))) 2 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "programming" line-num 377 selectrum-candidate-display-prefix #("L377: " 0 6 (face completions-annotations))) 3 11 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "programming" line-num 377 selectrum-candidate-display-prefix #("L377: " 0 6 (face completions-annotations)))) #("\3766983\377  Brown President Christin…         Brown’s financial stewardship in Fiscal Year 2020                                   11/19/2020    Brown        " 0 6 (invisible t docid 6983 msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 6 8 (msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 8 34 (face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 34 36 (help-echo "(seen)" face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 36 127 (face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 127 137 (help-echo "Thu 19 Nov 2020 10:05:25 AM CST" face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations))) 137 154 (face mu4e-header-face msg (:docid 6983 :thread (:path "034" :level 0) :subject "Brown’s financial stewardship in Fiscal Year 2020" :from (("Brown President Christina H. Paxson" . "president@messages.brown.edu")) :to (("kristoffer_balintona@brown.edu" . "kristoffer_balintona@brown.edu")) :date (24502 38853 0) :size 36524 :message-id "cm.0305252915553.juijiln.oiihdhikil.r@cmail19.com" :path "/home/krisbalintona/Documents/Emails/Brown/All-Mail/cur/1606361535.b9b5a07f3db4c441.PuddingMachine,U=2089:2,S" :maildir "/Brown/All-Mail" :priority normal :flags (seen)) docid 6983 line-num 78 selectrum-candidate-display-prefix #("L078: " 0 6 (face completions-annotations)))) #("** TODO Watch Treasure Planet with Winnie [0/0]                                                :Regular:" 0 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 3 7 (fontified nil face ((:foreground "orange" :underline t) org-level-1) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 7 41 (fontified nil face org-level-1 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 41 42 (fontified nil face org-level-1 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 42 95 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 95 103 (fontified nil face (org-tag org-level-1) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations))) 103 104 (fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face (org-tag org-level-1) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 62 selectrum-candidate-display-prefix #("L62: " 0 5 (face completions-annotations)))) #("               '(\"fe\" \"Entertainment time?\"" 0 15 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 15 16 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (highlight-quoted-quote org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 16 17 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 17 21 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 21 22 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (lisp-extra-font-lock-quoted org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations))) 22 43 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 811 selectrum-candidate-display-prefix #("L811: " 0 6 (face completions-annotations)))) #("*** Nvim" 0 2 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 face org-hide org-category "system-wide-package-groups" wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 composition (1 1 [9673]) face (org-superstar-header-bullet org-level-3) org-category "system-wide-package-groups" wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 face org-level-3 org-category "system-wide-package-groups" wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 8 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 face org-level-3 org-category "system-wide-package-groups" wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) #("mylauncher = awful.widget.launcher({ image = beautiful.awesome_icon," 0 34 (selectrum-candidate-display-prefix #("L098: " 0 6 (face completions-annotations)) line-num 98 fontified t) 34 35 (selectrum-candidate-display-prefix #("L098: " 0 6 (face completions-annotations)) line-num 98 face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (selectrum-candidate-display-prefix #("L098: " 0 6 (face completions-annotations)) line-num 98 face (rainbow-delimiters-depth-2-face) fontified t) 36 68 (selectrum-candidate-display-prefix #("L098: " 0 6 (face completions-annotations)) line-num 98 fontified t)) #("beautiful.init(gears.filesystem.get_themes_dir() .. \"default/theme.lua\")" 0 14 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 fontified t) 14 15 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face (rainbow-delimiters-depth-1-face) fontified t) 15 46 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 fontified t) 46 47 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face (rainbow-delimiters-depth-2-face) fontified t) 48 52 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 fontified t) 52 71 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face font-lock-string-face fontified t) 71 72 (selectrum-candidate-display-prefix #("L048: " 0 6 (face completions-annotations)) line-num 48 face (rainbow-delimiters-depth-1-face) fontified t)) #("** Doom-modeline" 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide org-category "base-config" line-num 126 selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations))) 1 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-superstar-header-bullet org-level-2) composition ((1 . 9679)) org-category "base-config" line-num 126 selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations))) 2 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 org-category "base-config" line-num 126 selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations))) 3 16 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 org-category "base-config" line-num 126 selectrum-candidate-display-prefix #("L126: " 0 6 (face completions-annotations)))) #("                                      (not (tags \"PROJECT\"))" 0 38 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 38 39 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 39 43 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 43 44 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 44 49 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 49 58 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 58 59 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations))) 59 60 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                                            " 0 6 (face org-indent) 6 44 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-6-face org-block) line-num 441 selectrum-candidate-display-prefix #("L441: " 0 6 (face completions-annotations)))) #("               '(\"p\" \"Personal tasks\"" 0 16 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations))) 16 17 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations))) 17 20 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations))) 20 21 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations))) 21 37 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-num 454 selectrum-candidate-display-prefix #("L454: " 0 6 (face completions-annotations)))) #("                               (:tag \"CHUNK\")" 0 31 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 32 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (rainbow-delimiters-depth-8-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 36 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (font-lock-builtin-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 36 37 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 44 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 44 45 (selectrum-candidate-display-prefix #("L466: " 0 6 (face completions-annotations)) line-num 466 org-category "org-agenda" display nil face (rainbow-delimiters-depth-8-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("   [remap org-agenda-archive] ' ; Archive" 0 3 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 3 4 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 28 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 28 29 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (highlight-quoted-quote org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 32 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 32 33 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-delimiter-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 33 34 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-delimiter-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 34 35 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 35 36 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 36 37 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 38 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 38 39 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 39 40 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 40 41 (selectrum-candidate-display-prefix #("L301: " 0 6 (face completions-annotations)) line-num 301 display nil face (font-lock-comment-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("  (defun kb/org-refile-to-reverse-datetree-archive ()" 0 2 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 2 3 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 3 8 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 8 9 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 9 50 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 50 51 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 51 52 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 52 53 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) #("   [remap org-agenda-archive] '(lambda () ((interactive)" 0 3 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 3 4 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 28 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 28 29 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (highlight-quoted-quote org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 32 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 39 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 39 40 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 40 41 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 41 42 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 42 43 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 43 44 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-4-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 44 55 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (font-lock-keyword-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 55 56 (selectrum-candidate-display-prefix #("L300: " 0 6 (face completions-annotations)) line-num 300 display nil face (rainbow-delimiters-depth-4-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("   [remap org-agenda-archive] '(lambda () (unpackaged/org-refile-to-datetree-using-ts-in-entry 'earliest (expand-file-name \"archive.org\" kb/agenda-dir) t))" 0 3 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 3 4 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 28 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 28 29 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (highlight-quoted-quote org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "org-agenda") 31 32 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 32 33 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 33 34 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 34 35 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 35 36 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 36 37 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 37 38 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 38 39 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 39 40 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 40 41 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 41 42 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 org-category "org-agenda" display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 42 43 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 43 93 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 93 94 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t rear-nonsticky t) 94 95 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 95 96 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (highlight-quoted-quote org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 96 97 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 97 98 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 98 99 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 99 101 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 101 102 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 102 103 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 103 104 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 104 105 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 105 106 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-4-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 106 107 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 107 108 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 108 109 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 109 110 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 110 111 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 111 112 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 112 113 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 113 114 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 114 115 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 115 116 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 116 117 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 117 122 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 122 123 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 123 124 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 124 125 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 125 126 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 126 127 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 127 128 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 128 129 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 129 130 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 130 131 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 131 132 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 132 133 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 133 135 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 135 136 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t rear-nonsticky t) 136 137 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 137 150 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 150 151 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-4-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 151 152 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 152 153 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 153 154 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-3-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" help-echo nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t) 154 155 (selectrum-candidate-display-prefix #("L294: " 0 6 (face completions-annotations)) line-num 294 display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("  (defun kb/org-refile-to-reverse-datetree-archive ()" 0 2 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 2 3 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 3 8 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (font-lock-keyword-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 8 9 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 9 50 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (font-lock-function-name-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 50 51 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 51 52 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 52 53 (selectrum-candidate-display-prefix #("L037: " 0 6 (face completions-annotations)) line-num 37 display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t org-category "org-agenda" wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("At every stage of an interview (contacted to interviewed to published) I should input pertinent information into [[https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0][this spreadsheet]]." 0 113 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t) 113 222 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 222 223 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 223 235 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 235 238 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 238 239 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 239 240 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" fontified t) 240 241 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" htmlize-link (:uri "https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0") help-echo "LINK: https://docs.google.com/spreadsheets/d/152ueyYMBk8sXm-kD_ZSAbu2i30oTIL2OyWjlSXspWdE/edit?ts=5fad795e#gid=0" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 241 242 (selectrum-candidate-display-prefix #("L069: " 0 6 (face completions-annotations)) line-num 69 wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t)) #("** Send a post-interview email" 0 1 (selectrum-candidate-display-prefix #("L110: " 0 6 (face completions-annotations)) line-num 110 face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t) 1 2 (selectrum-candidate-display-prefix #("L110: " 0 6 (face completions-annotations)) line-num 110 composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t) 2 3 (selectrum-candidate-display-prefix #("L110: " 0 6 (face completions-annotations)) line-num 110 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t) 3 30 (selectrum-candidate-display-prefix #("L110: " 0 6 (face completions-annotations)) line-num 110 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "brown-interviews-meeting-notes" fontified t)) #("** PROG Replace rofi with dmenu [0/0]                              :PROJECT:" 0 3 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 3 7 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" face ((:foreground "turquoise" :underline t) org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 7 8 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" face org-level-1 org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 8 31 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" face org-level-1 org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 31 32 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" face org-level-1 org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 32 67 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-category "inbox" fontified nil) 67 75 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "inbox" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) fontified nil) 75 76 (selectrum-candidate-display-prefix #("L316: " 0 6 (face completions-annotations)) line-num 316 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) org-stats 0 org-category "inbox" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) org-todo-head #("TODO" 0 4 (face (:foreground "orange" :underline t))) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil)) #("  title = {The {{Prince}}}," 0 27 (selectrum-candidate-display-prefix #("L161: " 0 6 (face completions-annotations)) line-num 161 fontified nil)) #("* Better-jumper" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-superstar-header-bullet org-level-1) composition (0 1 [9885]) org-category "qol-packages" line-num 313 selectrum-candidate-display-prefix #("L313: " 0 6 (face completions-annotations))) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 org-category "qol-packages" line-num 313 selectrum-candidate-display-prefix #("L313: " 0 6 (face completions-annotations))) 2 15 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 org-category "qol-packages" line-num 313 selectrum-candidate-display-prefix #("L313: " 0 6 (face completions-annotations)))) #("(org-babel-load-file (concat user-emacs-directory \"configs/\" \"org-agenda.org\"))" 0 1 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face (rainbow-delimiters-depth-1-face) fontified t) 1 21 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 fontified t) 21 22 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face (rainbow-delimiters-depth-2-face) fontified t) 22 50 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 fontified t) 50 60 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face font-lock-string-face fontified t) 60 61 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 fontified t) 61 77 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face font-lock-string-face fontified t) 77 78 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face (rainbow-delimiters-depth-2-face) fontified t) 78 79 (selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)) line-num 56 face (rainbow-delimiters-depth-1-face) fontified t)) #("               '(\"xr\" \"All trivial and to-refile tasks\"" 0 15 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 15 16 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (highlight-quoted-quote org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 16 17 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 17 21 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 22 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 22 55 (selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)) line-num 618 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("  -- Add titlebars to normal clients and dialogs" 0 48 (line-num 491 selectrum-candidate-display-prefix #("L491: " 0 6 (face completions-annotations)))) #("terminal = \"xterm\"" 0 11 (fontified t line-num 51 selectrum-candidate-display-prefix #("L051: " 0 6 (face completions-annotations))) 11 18 (fontified t face font-lock-string-face line-num 51 selectrum-candidate-display-prefix #("L051: " 0 6 (face completions-annotations)))) #("# Default inner/outer gaps" 0 2 (fontified t face font-lock-comment-delimiter-face line-num 155 selectrum-candidate-display-prefix #("L155: " 0 6 (face completions-annotations))) 2 26 (fontified t face font-lock-comment-face line-num 155 selectrum-candidate-display-prefix #("L155: " 0 6 (face completions-annotations)))) #("awful.layout.layouts = {" 0 23 (fontified t line-num 63 selectrum-candidate-display-prefix #("L063: " 0 6 (face completions-annotations))) 23 24 (fontified t face (rainbow-delimiters-depth-1-face) line-num 63 selectrum-candidate-display-prefix #("L063: " 0 6 (face completions-annotations)))) #("exec_always               picom -bc --backend xrender" 0 11 (fontified t face font-lock-variable-name-face line-num 229 selectrum-candidate-display-prefix #("L229: " 0 6 (face completions-annotations))) 11 53 (fontified t line-num 229 selectrum-candidate-display-prefix #("L229: " 0 6 (face completions-annotations)))) #("** PROG [#A] Figure out how I'm going to pay for college           :PROJECT:" 0 1 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 1 2 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 2 3 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 3 7 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face ((:foreground "turquoise" :underline t) org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 7 8 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 8 12 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face (org-priority org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" font-lock-fontified t display "💀" fontified t) 12 67 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 67 75 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" fontified t) 75 76 (selectrum-candidate-display-prefix #("L162: " 0 6 (face completions-annotations)) line-num 162 keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 60.0 effort "60" org-category "admin" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) #("*** PROG Figure out loans [[https://www.brown.edu/about/administration/loans/apply-loans][Loan Process - Application, Requirements, Disbursement | Loan Office]] " 0 2 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-hide org-stats 75 org-category "admin" fontified t) 2 3 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) composition (1 1 [9673]) face (org-superstar-header-bullet org-level-3) org-stats 75 org-category "admin" fontified t) 3 4 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 org-stats 75 org-category "admin" fontified t) 4 8 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face ((:foreground "turquoise" :underline t) org-level-3) org-stats 75 org-category "admin" fontified t) 8 26 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 org-stats 75 org-category "admin" fontified t) 26 89 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-3 org-stats 75 org-category "admin" htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 89 90 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-3 org-stats 75 org-category "admin" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 90 157 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-3) org-stats 75 org-category "admin" htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 157 158 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-3) org-stats 75 org-category "admin" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 158 159 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-3 org-stats 75 org-category "admin" htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" fontified t) 159 160 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-3 org-stats 75 org-category "admin" htmlize-link (:uri "https://www.brown.edu/about/administration/loans/apply-loans") help-echo "LINK: https://www.brown.edu/about/administration/loans/apply-loans" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 160 161 (selectrum-candidate-display-prefix #("L165: " 0 6 (face completions-annotations)) line-num 165 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 org-stats 75 org-category "admin" fontified t)) #("                 '(\"xr\" \"All trivial and to-refile tasks\"" 0 17 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 17 18 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (highlight-quoted-quote org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 18 19 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 19 23 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 23 24 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (lisp-extra-font-lock-quoted org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 24 57 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) font-lock-multiline t face (font-lock-string-face lisp-extra-font-lock-quoted org-block) display nil line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)))) #("** WAITING [#C] Waive SHIP (health insurance) with mom [[https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7][Gallagher Student Health and Special Risk]] [0/0] :SCHOOL:" 0 1 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 1 2 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 2 3 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 3 10 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 10 11 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 11 15 (fontified nil display "🌟" font-lock-fontified t org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 15 55 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 55 168 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 168 169 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 169 209 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 209 210 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 210 211 (fontified nil help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 211 212 (fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7" htmlize-link (:uri "https://www.gallagherstudent.com/students/form-select.php?idField=1375&KosterWebSID=7epsq5oakdvmnghlhcgn35ggq7") org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 212 213 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 213 218 (fontified nil org-category "admin" line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 218 219 (fontified nil org-category "admin" org-stats 0 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 219 226 (fontified nil org-category "admin" org-stats 0 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations))) 226 227 (fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "admin" org-stats 0 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-num 201 selectrum-candidate-display-prefix #("L201: " 0 6 (face completions-annotations)))) #("+ [[file:Oct212020-194244.org][The Zettelkasten Method]]" 0 1 (fontified t org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (2 1 [10148]) face org-superstar-item line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 1 2 (fontified t org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 2 30 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 30 31 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 31 53 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face org-roam-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 53 54 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face org-roam-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 54 55 (fontified t help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations))) 55 56 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: file:Oct212020-194244.org" htmlize-link (:uri "file:Oct212020-194244.org") org-category "index" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 13 selectrum-candidate-display-prefix #("L13: " 0 5 (face completions-annotations)))) #("    * [[file:Oct102020-0028.org][Universities of the Middle Ages encouraged free thought]]" 0 4 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 4 5 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" composition (3 1 [8226]) face org-superstar-item line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 5 6 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 6 32 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 32 33 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 33 87 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" face org-roam-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 87 88 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" face org-roam-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 88 89 (fontified t help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations))) 89 90 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: file:Oct102020-0028.org" htmlize-link (:uri "file:Oct102020-0028.org") line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) org-category "Oct282020-203047" invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t line-num 41 selectrum-candidate-display-prefix #("L41: " 0 5 (face completions-annotations)))) #("*** Habits" 0 2 (selectrum-candidate-display-prefix #("L633: " 0 6 (face completions-annotations)) line-num 633 face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (selectrum-candidate-display-prefix #("L633: " 0 6 (face completions-annotations)) line-num 633 composition (1 1 [9673]) face (org-superstar-header-bullet org-level-3) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (selectrum-candidate-display-prefix #("L633: " 0 6 (face completions-annotations)) line-num 633 face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 10 (selectrum-candidate-display-prefix #("L633: " 0 6 (face completions-annotations)) line-num 633 face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) #("** Habits" 0 1 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 3 9 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) #("        '((sequence \"TODO(t)\" \"HABIT(H)\" \"WAITING(w!)\" \"NEXT(n)\" \"PROG(p)\" \"|\" \"DONE(d!/@)\")" 0 9 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 9 10 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 10 11 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 11 20 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 20 29 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 40 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 40 41 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 41 54 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 54 55 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 55 64 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 64 65 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 65 74 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 74 75 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 75 78 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 78 79 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 79 91 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 91 92 (selectrum-candidate-display-prefix #("L064: " 0 6 (face completions-annotations)) line-num 64 face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("                               (:tag \"URGENT\")" 0 31 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 32 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (rainbow-delimiters-depth-8-face org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 32 36 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 36 37 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 37 45 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 45 46 (selectrum-candidate-display-prefix #("L380: " 0 6 (face completions-annotations)) line-num 380 face (rainbow-delimiters-depth-8-face org-block) font-lock-multiline t wrap-prefix #("                                     " 0 6 (face org-indent) 6 37 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("               '(\"p\" \"Personal tasks\"" 0 16 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 16 17 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 17 20 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 20 21 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 37 (selectrum-candidate-display-prefix #("L372: " 0 6 (face completions-annotations)) line-num 372 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("          `((\"Current projects\"" 0 11 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 11 12 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 12 13 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 13 31 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("             :title \"Current projects\"" 0 13 (selectrum-candidate-display-prefix #("L257: " 0 6 (face completions-annotations)) line-num 257 face (org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 13 19 (selectrum-candidate-display-prefix #("L257: " 0 6 (face completions-annotations)) line-num 257 face (font-lock-builtin-face org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 19 20 (selectrum-candidate-display-prefix #("L257: " 0 6 (face completions-annotations)) line-num 257 face (org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 20 38 (selectrum-candidate-display-prefix #("L257: " 0 6 (face completions-annotations)) line-num 257 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("          `((\"Current projects\"" 0 11 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 11 12 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 12 13 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 13 31 (selectrum-candidate-display-prefix #("L251: " 0 6 (face completions-annotations)) line-num 251 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("+ Became chancery (an office of public records or a public archives) of Florance in 1498 (?) at the age of 29" 0 1 (selectrum-candidate-display-prefix #("L42: " 0 5 (face completions-annotations)) line-num 42 face org-superstar-item composition (2 1 [10148]) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" fontified t) 1 109 (selectrum-candidate-display-prefix #("L42: " 0 5 (face completions-annotations)) line-num 42 wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) org-category "Nov172020-175430-mansfieldniccolomachiavellibiography" fontified t)) #("** Habits" 0 1 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 1 2 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 2 3 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 3 9 (selectrum-candidate-display-prefix #("L197: " 0 6 (face completions-annotations)) line-num 197 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) #("  (defun kb/org-agenda-process-inbox-item ()" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 3 8 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 8 9 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 9 41 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-function-name-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 41 42 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 42 43 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations))) 43 44 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 169 selectrum-candidate-display-prefix #("L169: " 0 6 (face completions-annotations)))) #("@book{capponiUnlikelyPrinceLife2010," 0 5 (fontified t face font-lock-function-name-face line-num 39 selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations))) 5 6 (fontified t line-num 39 selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations))) 6 35 (fontified t face font-lock-constant-face line-num 39 selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations))) 35 36 (fontified t line-num 39 selectrum-candidate-display-prefix #("L039: " 0 6 (face completions-annotations)))) #("  publisher = {{Da Capo Press}}," 0 2 (fontified t line-num 43 selectrum-candidate-display-prefix #("L043: " 0 6 (face completions-annotations))) 2 11 (fontified t face font-lock-variable-name-face line-num 43 selectrum-candidate-display-prefix #("L043: " 0 6 (face completions-annotations))) 11 32 (fontified t line-num 43 selectrum-candidate-display-prefix #("L043: " 0 6 (face completions-annotations)))) #("             :sort (deadline scheduled todo priority)" 0 13 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 13 18 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 18 19 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 19 20 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-5-face org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 20 52 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations))) 52 53 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-5-face org-block) line-num 258 selectrum-candidate-display-prefix #("L258: " 0 6 (face completions-annotations)))) #("     '((counsel-esh-history . ivy--regex-fuzzy) ; Fuzzy findings for counsel-esh-history" 0 6 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 6 7 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 7 8 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 8 46 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 46 47 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 47 48 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 48 50 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations))) 50 88 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-num 171 selectrum-candidate-display-prefix #("L171: " 0 6 (face completions-annotations)))) #("** PROG [#A] Express my concerns to Amelia [0/0]" 0 1 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 1 2 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-superstar-header-bullet org-level-2) composition (4 1 [9679]) line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 2 3 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 3 7 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face ((:foreground "turquoise" :underline t) org-level-2) line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 7 8 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 8 12 (display "💀" font-lock-fontified t org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-priority org-level-2) line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 12 43 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations))) 43 48 (org-category "clubs" fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-checkbox-statistics-done org-level-2) line-num 80 selectrum-candidate-display-prefix #("L080: " 0 6 (face completions-annotations)))) #("(org-babel-load-file (concat user-emacs-directory \"configs/\" \"org-agenda.org\"))" 0 1 (fontified t face (rainbow-delimiters-depth-1-face) line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 1 21 (fontified t line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 21 22 (fontified t face (rainbow-delimiters-depth-2-face) line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 22 50 (fontified t line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 50 60 (fontified t face font-lock-string-face line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 60 61 (fontified t line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 61 77 (fontified t face font-lock-string-face line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 77 78 (fontified t face (rainbow-delimiters-depth-2-face) line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations))) 78 79 (fontified t face (rainbow-delimiters-depth-1-face) line-num 56 selectrum-candidate-display-prefix #("L56: " 0 5 (face completions-annotations)))) #("@book{baconNovumOrganum," 0 5 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 face font-lock-function-name-face fontified t) 5 6 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 fontified t) 6 23 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 face font-lock-constant-face fontified t) 23 24 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 fontified t)) #("  (add-hook 'mu4e-compose-mode-hook 'org-mu4e-compose-org-mode)" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 195 selectrum-candidate-display-prefix #("L195: " 0 6 (face completions-annotations))) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 195 selectrum-candidate-display-prefix #("L195: " 0 6 (face completions-annotations))) 3 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 195 selectrum-candidate-display-prefix #("L195: " 0 6 (face completions-annotations))) 62 63 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 195 selectrum-candidate-display-prefix #("L195: " 0 6 (face completions-annotations)))) #("  (require 'org-mu4e)" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 3 10 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 10 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 12 20 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations))) 20 21 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block) line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-num 9 selectrum-candidate-display-prefix #("L009: " 0 6 (face completions-annotations)))) #("While animals are \"intelligent\", they cannot learn since they do not have the senses ([[file:Oct102020-1500.org][Aristotle# Our senses give us the ability to learn]])" 0 59 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 59 86 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 86 112 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 112 113 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 113 162 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-roam-link htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 162 163 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-roam-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 163 164 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 164 165 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link htmlize-link (:uri "file:Oct102020-1500.org") help-echo "LINK: file:Oct102020-1500.org" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 165 166 (selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)) line-num 35 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) #("TL;DR: Art is considered closer to knowledge than experience is because underlying causes are understood (theory) ([[file:Oct102020-1504.org][Aristotle claimed \"art\" is closer to knowledge than personal experience]])" 0 11 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 11 24 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 face (writegood-passive-voice-face) org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 24 90 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 90 104 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 face (writegood-passive-voice-face) org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 104 115 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 115 141 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 141 142 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 142 212 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-roam-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 212 213 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-roam-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 213 214 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" fontified t) 214 215 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) htmlize-link (:uri "file:Oct102020-1504.org") help-echo "LINK: file:Oct102020-1504.org" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 215 216 (selectrum-candidate-display-prefix #("L047: " 0 6 (face completions-annotations)) line-num 47 org-category "Sep162020-2152-aristotlemetaphysics" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) #("    (add-to-list 'company-frontends 'company-tng-frontend) ; Company-tng to use tab to cycle through suggestions" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 5 57 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 57 58 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 58 59 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 59 61 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations))) 61 112 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) line-num 35 selectrum-candidate-display-prefix #("L035: " 0 6 (face completions-annotations)))) #("    (org-ref-default-bibliography (concat kb/roam-dir \"bibliographic/master-lib.bib\"))" 0 4 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 5 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 5 34 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 34 35 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 35 54 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 54 84 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 84 85 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 85 86 (selectrum-candidate-display-prefix #("L231: " 0 6 (face completions-annotations)) line-num 231 face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("  (use-package ivy-bibtex" 0 2 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 2 3 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 3 14 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 14 15 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil) 15 25 (selectrum-candidate-display-prefix #("L184: " 0 6 (face completions-annotations)) line-num 184 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified nil)) #("@report{brownuniversitysteeringcommitteeonslaveryandjusticeSlaveryJustice2006," 0 7 (fontified t face font-lock-function-name-face line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 7 8 (fontified t line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 8 77 (fontified t face font-lock-constant-face line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 77 78 (fontified t line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)))) #("@book{sanchesThatNothingKnown," 0 5 (fontified t face font-lock-function-name-face line-num 205 selectrum-candidate-display-prefix #("L205: " 0 6 (face completions-annotations))) 5 6 (fontified t line-num 205 selectrum-candidate-display-prefix #("L205: " 0 6 (face completions-annotations))) 6 29 (fontified t face font-lock-constant-face line-num 205 selectrum-candidate-display-prefix #("L205: " 0 6 (face completions-annotations))) 29 30 (fontified t line-num 205 selectrum-candidate-display-prefix #("L205: " 0 6 (face completions-annotations)))) #("        :head \"#+TITLE: ${citekey}: ${title}\\n#+ROAM_KEY: ${ref}\\n#+ROAM_TAGS: bib_notes\\n- CREATED :: %T\\n- Time-stamp: <>\\n- KEYWORDS :: ${keywords}\\n- TAGS :: \\n- LINKS :: \\n\\n---\\n\\n* TODO Process ${title} :WAITING:\\n:PROPERTIES:\\n:CATEGORY: bib_notes\\n:ARCHIVE: %(concat kb/agenda-dir \\\"archive.org::datetree/* Bib Notes\\\")\\n:END:\\n\\n* ${title} Notes\\n:PROPERTIES:\\n:Custom_ID: ${citekey}\\n:URL: ${url}\\n:AUTHOR: ${author-or-editor}\\n:NOTER_DOCUMENT: %(orb-process-file-field \\\"${citekey}\\\")\\n:NOTER_PAGE:\\n:END:\\n\\n\"" 0 8 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 8 13 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 13 14 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations))) 14 522 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-num 276 selectrum-candidate-display-prefix #("L276: " 0 6 (face completions-annotations)))) #("** PROG [#A] Fill out housing questionnaire [[https://brown.starrezhousing.com/StarRezPortal][Home]] :ASSIGNMENT:" 0 1 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 1 2 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 2 3 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 3 7 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face ((:foreground "turquoise" :underline t) org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 7 8 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 8 12 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face (org-priority org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" font-lock-fontified t display "💀" fontified t) 12 44 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 44 93 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 93 94 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 94 97 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 97 98 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 98 99 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" fontified t) 99 100 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" htmlize-link (:uri "https://brown.starrezhousing.com/StarRezPortal") help-echo "LINK: https://brown.starrezhousing.com/StarRezPortal" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 100 101 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 101 112 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" fontified t) 112 113 (selectrum-candidate-display-prefix #("L366: " 0 6 (face completions-annotations)) line-num 366 keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) effort-minutes 15.0 effort "15" org-category "info" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) #("                             ((org-agenda-overriding-header \"High-priority items without next todo keyword\")" 0 29 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 29 30 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 30 31 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 31 60 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 60 107 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 107 108 (selectrum-candidate-display-prefix #("L595: " 0 6 (face completions-annotations)) line-num 595 face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("+ [[https://www.youtube.com/user/TheLinsharon/videos][Dr. Jingjing Lin - YouTube]]" 0 1 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 face org-superstar-item composition (2 1 [10148]) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" fontified t) 1 2 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" fontified t) 2 53 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 53 54 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 54 79 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 79 80 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 80 81 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" fontified t) 81 82 (selectrum-candidate-display-prefix #("L204: " 0 6 (face completions-annotations)) line-num 204 font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) effort-minutes 180.0 effort "180" org-stats 0 org-category "community" htmlize-link (:uri "https://www.youtube.com/user/TheLinsharon/videos") help-echo "LINK: https://www.youtube.com/user/TheLinsharon/videos" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) #("+ Zotero (with zotfile and better-bibtex)" 0 1 (fontified t org-category "system-wide-package-groups" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (2 1 [10148]) face org-superstar-item line-num 83 selectrum-candidate-display-prefix #("L83: " 0 5 (face completions-annotations))) 1 41 (fontified t org-category "system-wide-package-groups" line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-num 83 selectrum-candidate-display-prefix #("L83: " 0 5 (face completions-annotations)))) #("               '(\"xr\" \"All trivial and to-refile tasks\"" 0 15 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 15 16 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (highlight-quoted-quote org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 16 17 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (rainbow-delimiters-depth-2-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 17 21 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 21 22 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 22 55 (selectrum-candidate-display-prefix #("L579: " 0 6 (face completions-annotations)) line-num 579 display nil face (font-lock-string-face lisp-extra-font-lock-quoted org-block) font-lock-multiline t wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) #("       \"* TODO %y - %t\\n :PROPERTIES:\\n  :CUSTOM_ID: %k\\n  :NOTER_DOCUMENT: %F\\n :ROAM_KEY: cite:%k\\n  :AUTHOR: %9a\\n  :JOURNAL: %j\\n  :YEAR: %y\\n  :VOLUME: %v\\n  :PAGES: %p\\n  :DOI: %D\\n  :URL: %U\\n :END:\\n\\n\")" 0 7 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 7 92 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 92 100 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 . org-ref-open-pdf-at-point) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "cite:%k\\n") help-echo nil fontified t) 100 101 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 . org-ref-open-pdf-at-point) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "cite:%k\\n") help-echo nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 101 210 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 210 211 (selectrum-candidate-display-prefix #("L254: " 0 6 (face completions-annotations)) line-num 254 wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) display nil face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) #("                 '(\"p\" \"Current tasks\"" 0 18 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations))) 18 19 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations))) 19 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations))) 22 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations))) 23 38 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block) line-num 305 selectrum-candidate-display-prefix #("L305: " 0 6 (face completions-annotations)))) #("                            '((:file-path \"habits.org\")" 0 5 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 5 23 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 23 29 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 29 30 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (rainbow-delimiters-depth-7-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 30 31 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (rainbow-delimiters-depth-8-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 31 32 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 32 33 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 33 36 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 36 37 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 37 38 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 38 39 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 39 40 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 40 41 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 41 42 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 42 53 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 53 54 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations))) 54 55 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) help-echo nil font-lock-multiline t face (rainbow-delimiters-depth-8-face org-block) line-num 618 selectrum-candidate-display-prefix #("L618: " 0 6 (face completions-annotations)))) #("               '(\"xr\" \"All trivial and to-refile tasks\"" 0 16 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations))) 16 17 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations))) 17 21 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations))) 21 22 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations))) 22 55 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) line-num 575 selectrum-candidate-display-prefix #("L575: " 0 6 (face completions-annotations)))) #("@misc{caminhaLetterPeroVaz," 0 5 (fontified t face font-lock-function-name-face line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 5 6 (fontified t line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 6 26 (fontified t face font-lock-constant-face line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations))) 26 27 (fontified t line-num 15 selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)))) #("#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:t todo:t |:t" 0 60 (line-prefix "" wrap-prefix "" fontified t font-lock-fontified t face org-meta-line line-num 8 selectrum-candidate-display-prefix #("L08: " 0 5 (face completions-annotations)))) #("+ =Noto Sans=" 0 1 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) face org-superstar-item composition (2 1 [10148]) fontified t) 1 2 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 3 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) invisible org-link org-emphasis t font-lock-multiline t fontified t) 3 12 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) org-emphasis t font-lock-multiline t face (org-verbatim) fontified t) 12 13 (selectrum-candidate-display-prefix #("L015: " 0 6 (face completions-annotations)) line-num 15 wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) invisible org-link org-emphasis t font-lock-multiline t fontified t)) #("The \"lecentia docendi\" (license to teach). This was how you got invited into the college. You had to show some sort of academic attainment" 0 138 (selectrum-candidate-display-prefix #("L095: " 0 6 (face completions-annotations)) line-num 95 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified nil)) #("[[file:Oct092020-2325.org][The Middle East in the Middle Ages contributed to technology, not science]]" 0 26 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 26 27 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 27 99 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 99 100 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 100 101 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" fontified nil) 101 102 (selectrum-candidate-display-prefix #("L546: " 0 6 (face completions-annotations)) line-num 546 wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) htmlize-link (:uri "file:Oct092020-2325.org") help-echo "LINK: file:Oct092020-2325.org" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil)) #("*** Set default fonts" 0 2 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 4 selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations))) 2 3 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 4 selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations))) 3 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 4 selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations))) 4 21 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-num 4 selectrum-candidate-display-prefix #("L004: " 0 6 (face completions-annotations)))) #("                       (selectrum-minibuffer-bindings" 0 23 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) line-num 676 selectrum-candidate-display-prefix #("L676: " 0 6 (face completions-annotations))) 23 24 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) line-num 676 selectrum-candidate-display-prefix #("L676: " 0 6 (face completions-annotations))) 24 53 (fontified nil font-lock-fontified t display nil help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) line-num 676 selectrum-candidate-display-prefix #("L676: " 0 6 (face completions-annotations)))) #("** Company-box" 0 1 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-hide fontified t) 1 2 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) composition (1 1 [9679]) face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 3 14 (selectrum-candidate-display-prefix #("L050: " 0 6 (face completions-annotations)) line-num 50 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t)) #("    (company-require-match 'company-explicit-action-p)" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 27 selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations))) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 27 selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations))) 5 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 27 selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations))) 53 54 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block) line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-num 27 selectrum-candidate-display-prefix #("L027: " 0 6 (face completions-annotations)))) #("    (company-require-match 'never)" 0 4 (selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations)) line-num 26 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 4 5 (selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations)) line-num 26 face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 5 33 (selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations)) line-num 26 face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 33 34 (selectrum-candidate-display-prefix #("L026: " 0 6 (face completions-annotations)) line-num 26 face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t))))
(setq ivy-bibtex-history '("🖋 🖇 2001 Graham, A. C. and Zhuangzi Chuang-Tzu: The Inner Chapters book grahamChuangtzuInnerChapters2001 =has-pdf= =has-note=" #("alexan" 0 6 (ivy-index 0)) "🖇 2018 Chee, Alexander How to Write an Autobiographical Novel: Essays book cheeHowWriteAutobiographical2018 =has-pdf= " #("graha" 0 5 (ivy-index 0)) "🖇 2001 Graham, A. C. and Zhuangzi Chuang-Tzu: The Inner Chapters book grahamChuangtzuInnerChapters2001 =has-pdf= " #("tell it" 0 7 (ivy-index 0)) "🖋 🖇 2019 Miller, Brenda and Paola, Suzanne and Safari, an O'Reilly Media Company Tell It Slant, Third Edition, 3rd Edition book millerTellItSlant2019 =has-pdf= =has-note=" #("graham" 0 6 (ivy-index 0)) "🖇 2001 Zhuangzi and Graham, A. C. Chuang-Tzu: The Inner Chapters book zhuangziChuangtzuInnerChapters2001 =has-pdf= " "🖇 2001 Zhuangzi and Graham, A. C. Chuang-Tz\\uu: The Inner Chapters book zhuangziChuangtzuInnerChapters2001 =has-pdf= " "🖋 🖇 2019 Miller, Brenda and Paola, Suzanne and Safari, an O'Reilly Media Company Tell It Slant, Third Edition, 3rd Edition book millerTellItSlant2019 =has-pdf= =has-note=" "🖋 🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= =has-note=" #("ahren" 0 5 (ivy-index 0)) "2017 Ahrens, S\\onke How to Take Smart Notes: One Simple Technique to Boost Writing, Learning and Thinking: For Students, Academics and Nonfiction Book Writers book ahrensHowTakeSmart2017  " #("little" 0 6 (ivy-index 0)) "2014 Littlejohn, Ronnie L Daoism: An Introduction book littlejohnDaoismIntroduction2014  " "🖋 🖇 China,Civilization,Sources 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 🖇 Confucianism 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= =has-note=" "🖋 🖇 China,Civilization,Sources 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" #("debary" 0 6 (ivy-index 0)) "🖋 🖇 China,Civilization,Sources 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" #("make it" 0 7 (ivy-index 0)) "Cognition,Learning,Research,Study skills 2014 Brown, Peter C. Make It Stick: The Science of Successful Learning book brownMakeItStick2014  " "Cognition,Learning,Research,Study skills 2014 Brown, Peter C. Make It Stick: The Science of Successful Learning book brownMakeItStick2014  " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= =has-note=" "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖋 🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= =has-note=" #("yao" 0 3 (ivy-index 0)) "🖋 🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= =has-note=" "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " #("defoort" 0 7 (ivy-index 0)) "🖋 🖇 2001 Defoort, Carine Is There Such a Thing as Chinese Philosophy? Arguments of an Implicit Debate article defoortThereSuchThing2001 =has-pdf= =has-note=" #("foort" 0 5 (ivy-index 0)) "🖋 🖇 2001 Defoort, Carine Is There Such a Thing as Chinese Philosophy? Arguments of an Implicit Debate article defoortThereSuchThing2001 =has-pdf= =has-note=" #("poetry" 0 6 (ivy-index 0)) "🖇 2014 Li, Wai-Yee Poetry and Diplomacy in the Zuozhuan article liPoetryDiplomacyZuozhuan2014 =has-pdf= " #("mille" 0 5 (ivy-index 0)) "🖇 2019 Miller, Brenda and Paola, Suzanne and Safari, an O'Reilly Media Company Tell It Slant, Third Edition, 3rd Edition book millerTellItSlant2019 =has-pdf= " "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " #("mill" 0 4 (ivy-index 0)) "🖇 2019 Miller, Brenda and Paola, Suzanne and Safari, an O'Reilly Media Company Tell It Slant, Third Edition, 3rd Edition book millerTellItSlant2019 =has-pdf= " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖇 2014 Li, Wai-Yee Poetry and Diplomacy in the Zuozhuan article liPoetryDiplomacyZuozhuan2014 =has-pdf= " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " "🖋 🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= =has-note=" "🖇 2001 Defoort, Carine Is There Such a Thing as Chinese Philosophy? Arguments of an Implicit Debate article defoortThereSuchThing2001 =has-pdf= " "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " "🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " "🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= " "🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= " "🖇 1999 De Bary, Wm Theodore and Bloom, Irene and Chan, Wing-tsit and Adler, Joseph and Lufrano, Richard John Sources of Chinese Tradition book debarySourcesChineseTradition1999 =has-pdf= " #("🖇 2000 Yao, Xinzhong An Introduction to Confucianism book yaoIntroductionConfucianism2000 =has-pdf= " 0 100 (ivy-index 0 idx 0)) #("🖋 🖇 2007 Lindberg, David C. The Beginnings of Western Science: The European Scientific Tradition in Philosophical, Religious, and Institutional Context, Prehistory to A.D. 1450 book lindbergBeginningsWesternScience2007" 0 218 (idx 2 ivy-index 2)) #("1986 Cottingham, John Descartes book cottinghamDescartes1986" 0 60 (ivy-index 0 idx 0)) #("🖋 🖇 1997 Crosby, Alfred W. The Measure of Reality: Quantification and Western Society, 1250-1600 book crosbyMeasureRealityQuantification1997" 0 140 (idx 2 ivy-index 2)) #("descar" 0 6 (ivy-index 0)) "🖇 1996 Conway, Anne and Coudert, Allison and Corse, Taylor The Principles of the Most Ancient and Modern Philosophy book conwayPrinciplesMostAncient1996" #("conway" 0 6 (ivy-index 0)) #("🖇 1996 Conway, Anne and Coudert, Allison and Corse, Taylor The Principles of the Most Ancient and Modern Philosophy book conwayPrinciplesMostAncient1996" 0 152 (ivy-index 1 idx 1)) #("book zotero-141" 0 15 (ivy-index 4 idx 4)) #("the principles" 0 14 (ivy-index 0)) #("🖇 2007 Lindberg, David C. The Beginnings of Western Science: The European Scientific Tradition in Philosophical, Religious, and Institutional Context, Prehistory to A.D. 1450 book lindbergBeginningsWesternScience2007" 0 216 (idx 4 ivy-index 4)) #("🖇 1997 Crosby, Alfred W. The Measure of Reality: Quantification and Western Society, 1250-1600 book crosbyMeasureRealityQuantification1997" 0 138 (idx 5 ivy-index 5)) #("mach" 0 4 (ivy-index 3)) "🖇 1944 Ferguson, Blanche The Influence of Machiavelli on Francis Bacon: A Critical Examination article fergusonInfluenceMachiavelliFrancis1944" #("🖇 2011 Machiavelli, Niccol\\`o The Prince book machiavelliPrince2011" 0 67 (idx 6 ivy-index 6)) #("🖋 🖇 White, Landeg The Lusiads, Canto V book whiteLusiadsCanto" 0 61 (idx 5 ivy-index 5)) "🖇 1992 Augustine and Oates, Whitney Jennings Basic Writings of Saint Augustine book augustineBasicWritingsSaint1992" #("great" 0 5 (ivy-index 0)) "🖇 1955 Hutchins, Robert Maynard and Encyclopaedia Britannica, Inc Great Books of the Western World book hutchinsGreatBooksWestern1955" #("that no" 0 7 (ivy-index 0)) "🖇 1988 Sánchez, Francisco and Limbrick, Elaine and Thomson, D. F. S. That nothing is known =: Quod nihil scitur book sanchezThatNothingKnown1988" #("augu" 0 4 (ivy-index 0)) "🖇 1992 Augustine and Oates, Whitney Jennings Basic Writings of Saint Augustine book augustineBasicWritingsSaint1992" #("crosby" 0 6 (ivy-index 0)) #("crosb" 0 5 (ivy-index 1)) "🖇 1997 Crosby, Alfred W. The Measure of Reality: Quantification and Western Society, 1250-1600 book crosbyMeasureRealityQuantification19971997" "Crosby, Alfred The Measure of Reality: Quantification and Western Society book crosbyMeasureRealityQuantification1997" "Harris, Sam The Edge of Humanity, A Conversation with Yuval Noah Harari audio harrisEdgeHumanityConversation" #("sam" 0 3 (ivy-index 0)) "Harris, Sam The Edge of Humanity, A Conversation with Yuval Noah Harari audio harrisEdgeHumanityConversation" "🖋 🖇 Augustine Basic Writings of Saint Augustine book augustineBasicWritingsSaint" #("basic" 0 5 (ivy-index 0)) "🖋 🖇 Augustine Basic Writings of Saint Augustine book augustineBasicWritingsSaint" #("lind" 0 4 (ivy-index 0)) #("mac the prin" 0 12 (ivy-index 0)) "🖋 🖇 2011 Machiavelli, Niccolò The Prince book machiavelliPrince2011" #("sanch" 0 5 (ivy-index 0)) "🖋 🖇 Sanches, Francisco That Nothing Is Known book sanchesThatNothingKnown" "🖋 🖇 2011 Machiavelli, Niccolò The Prince book machiavelliPrince2011" #("quan" 0 4 (ivy-index 0)) "🖋 🖇 Crosby, Alfred The Measure of Reality: Quantification and Western Society book crosbyMeasureRealityQuantification"))
(setq counsel-git-grep-history '(#("libvterm" 0 8 (ivy-index 1)) "elisp/shell-vterm-rcp.el:13:  :ensure-system-package ((libvterm)" #(":p " 0 3 (ivy-index 0)) "elisp/early-packages-rcp.el:18:  :p" #("evil-normalize-keymaps" 0 22 (ivy-index 1)) "elisp/completion-company-rcp.el:14:         (company-mode . evil-normalize-keymaps)" #("require keybind" 0 15 (ivy-index 7)) "elisp/programming-lua-rcp.el:10:(require 'keybinds-frameworks-rcp)" "elisp/shell-eshell-rcp.el:10:(require 'keybinds-frameworks-rcp)" #("keybind require" 0 15 (ivy-index 0)) "elisp/checking-words-rcp.el:10:(require 'keybinds-frameworks-rcp)" "elisp/checking-words-rcp.el:10:(require 'keybinds-frameworks-rcp)" #("require ke" 0 10 (ivy-index 8)) "elisp/email-rcp.el:10:(require 'keybinds-frameworks-rcp)" #("embark-keymap" 0 13 (ivy-index 10)) "elisp/completion-selectrum-rcp.el:162:        (embark-keymap '((\"h\" . embark-helpful-callable-or-symbol) ; Replace default embark-describe-*" #("do list" 0 7 (ivy-index 8)) "init.el:26:    (dolist (f (directory-files base))" #("auto-sudo" 0 9 (ivy-index 0)) "configs/etc-config.org:168:* Auto-sudo-edit" #("langtool" 0 8 (ivy-index 5)) "elisp/checking-grammar-rcp.el:19:(use-package langtool" #("pdf-tools" 0 9 (ivy-index 0)) "configs/second-brain.org:326:** Pdf-tools" #("doom-snipp" 0 10 (ivy-index 1)) "elisp/programming-general-rcp.el:22:;;;;; Doom-snippets" #(":funcction" 0 10 (ivy-index 0)) "elisp/early-packages-rcp.el:22:  :funcction exec-path-from-shell-initialize" #(":function" 0 9 (ivy-index 0)) "configs/email.org:40:                 :function" #("pretty-hydra " 0 13 (ivy-index 0)) "elisp/keybinds-frameworks-rcp.el:57:;;;;; Pretty-hydra" #("exec-path" 0 9 (ivy-index 2)) "configs/qol-packages.org:432:  (use-package exec-path-from-shell" #(":requires" 0 9 (ivy-index 0)) "elisp/evil-rcp.el:80:  :requires evil-org-agenda" #("no-littering-var-directory" 0 26 (ivy-index 1)) "elisp/early-packages-rcp.el:31:  (add-to-list 'recentf-exclude no-littering-var-directory)" #("modeline font" 0 13 (ivy-index 7)) "elisp/themes-rcp.el:62:  (set-face-attribute 'mode-line nil :family kb/modeline-font :height 0.75)" #("utf" 0 3 (ivy-index 0)) "elisp/themes-rcp.el:163:UTF-8.\"" #("eyebro" 0 6 (ivy-index 0)) "configs/buffer-management.org:173:* Eyebrowse" #("pinentry" 0 8 (ivy-index 0)) "elisp/better-defaults-rcp.el:123:;;;; Pinentry (pin-entry)" #("programming-profiling-and-debug-rcp" 0 35 (ivy-index 2)) "init.el:77:(require 'programming-profiling-and-debug-rcp)" "configs/buffer-management.org:173:* Eyebrowse" #("eyebrop" 0 7 (ivy-index 0)) "configs/buffer-management.org:173:* Eyebrowse" #("display-time-mode" 0 17 (ivy-index 0)) "elisp/themes-rcp.el:259:  (display-time-mode t) ; Enable time in the mode-line" #("eyebrow" 0 7 (ivy-index 4)) "configs/buffer-management.org:173:* Eyebrowse" #("hide-modeline" 0 13 (ivy-index 0)) "configs/qol-packages.org:98:* Hide-mode-line" #("hide modeline" 0 13 (ivy-index 0)) "var/savehist.el:35:[Omitted long matching line]" #("transien" 0 8 (ivy-index 0)) "configs/qol-packages.org:453:* Transient-dwim" #("apropos" 0 7 (ivy-index 21)) "elisp/completion-selectrum-rcp.el:91:    \"ha\" '(consult-apropos :which-key \"Consult apropos\")" #("describe-variable" 0 17 (ivy-index 5)) "configs/qol-packages.org:14:    ([remap describe-variable] . helpful-variable)" #("describe" 0 8 (ivy-index 65)) "elisp/completion-ivy-rcp.el:200:    ;; \"hf\" '(counsel-describe-function :which-key \"Desc func\")" #("helpful" 0 7 (ivy-index 0)) "configs/qol-packages.org:3:* Helpful" #("\"ho\"" 0 4 (ivy-index 1)) "elisp/completion-selectrum-rcp.el:35:    \"ho\" '(describe-symbol :which-key \"Desc sym\")" #("which-key" 0 9 (ivy-index 2)) "configs/qol-packages.org:44:* Which-key" "configs/qol-packages.org:3:* Helpful" #("\"hv\"" 0 4 (ivy-index 0)) "elisp/completion-selectrum-rcp.el:34:    \"hv\" '(describe-variable :which-key \"Desc var\")" #("ivy-prescient" 0 13 (ivy-index 7)) "elisp/completion-ivy-rcp.el:151:  :hook (after-init . ivy-prescient-mode)" #("all-the-icons" 0 13 (ivy-index 0)) "configs/qol-packages.org:79:* All-the-icons" #("kb/ sudo" 0 8 (ivy-index 5)) "elisp/convenient-functions-rcp.el:44:  \"fu\" '(kb/sudo-find-file :which-key \"Sudo find file\")" #("etc-config-file" 0 15 (ivy-index 1)) "elisp/custom-directories-rcp.el:32:(defvar kb/emacs-etc-config-file (concat user-emacs-directory \"configs/etc-config.org\"))" "configs/file-and-directory-nav.org:58:    \"fcb\" '((lambda () (interactive) (find-file kb/emacs-etc-config-file)) :which-key \"Open Emacs base config\")" #("base-config-file" 0 16 (ivy-index 2)) "configs/file-and-directory-nav.org:58:    \"fcb\" '((lambda () (interactive) (find-file kb/emacs-base-config-file)) :which-key \"Open Emacs base config\")" #("base-config.org" 0 15 (ivy-index 10)) "elisp/custom-directories-rcp.el:32:(defvar kb/emacs-base-config-file (concat user-emacs-directory \"configs/base-config.org\"))" #("outshine" 0 8 (ivy-index 0)) "elisp/early-packages-rcp.el:34:;;;; Outshine" "configs/qol-packages.org:41:* Which-key" "elisp/early-packages-rcp.el:34:;;;; Outshine" #("flycheck-mode" 0 13 (ivy-index 8)) "elisp/programming-general-rcp.el:254:  :hook (after-init . global-flycheck-mode)" #("M-#" 0 3 (ivy-index 0)) "elisp/early-packages-rcp.el:44:  (defvar outline-minor-mode-prefix (kbd \"M-#\"))" #("general-define-key" 0 18 (ivy-index 0)) "configs/shell.org:67:    (general-define-key" #("all-the-" 0 8 (ivy-index 0)) "configs/qol-packages.org:76:* All-the-icons"))
(setq counsel-describe-symbol-history '(#("js--tmp-location" 0 16 (ivy-index 0)) #("embark map file" 0 15 (ivy-index 0)) "embark-file-map" #("alist embark key" 0 16 (ivy-index 0)) "embark-keymap-alist" "selectrum-minibuffer-map" "selectrum-prescient-toggle-map" #("ivy rich mode" 0 13 (ivy-index 1)) "ivy-rich-mode-hook" #("ivy rich mode hook" 0 18 (ivy-index 1)) "ivy-rich-mode-hook" #("outshine speed commands" 0 23 (ivy-index 2)) "outshine-speed-commands-user" #("outshine speed" 0 14 (ivy-index 3)) "outshine-speed-commands-default" #("prog-mode-hook" 0 14 (ivy-index 16388)) #("text-mode-hook" 0 14 (ivy-index 0)) #("completion-styles" 0 17 (ivy-index 2)) #("completion style" 0 16 (ivy-index 0)) "completion--styles" #("consult-mod" 0 11 (ivy-index 0)) "consult-mode-histories" "c-mode-hook" #("project switch commands" 0 23 (ivy-index 0)) "project-switch-commands" #("expand-region sub" 0 17 (ivy-index 0)) "expand-region-subword-enabled" #("expand-region skip" 0 18 (ivy-index 0)) "expand-region-skip-whitespace" #("expand-region " 0 14 (ivy-index 3)) "expand-region-smart-cursor" "org-follow-link-hook" #("update method" 0 13 (ivy-index 0)) "org-roam-db-update-method" "consult-preview-outline" "org-roam-db-update-idle-seconds" #("org roam idle sec" 0 17 (ivy-index 0)) "org-roam-update-db-idle-seconds" #("threshold gc" 0 12 (ivy-index 1)) "gc-cons-threshold" #("LaTeX-length-list" 0 17 (ivy-index 0)) #("outshine-mode-hook" 0 18 (ivy-index 10750)) #("outshine-mode-" 0 14 (ivy-index 0)) #("evil-normalize" 0 14 (ivy-index 0)) "evil-normalize-keymaps" "customize-set-variable" "after-focus-change-function" "kb/modeline-font" "org-roam-server-default-exclude-filters" "better-jumper-use-savehist" "LaTeX-mode-map" "TeX-command-list" "with-eval-after-load" #("classi mar" 0 10 (ivy-index 0)) "marginalia-classifiers" #("marg command " 0 13 (ivy-index 0)) "marginalia-command-categories" #("latex-mode-hook" 0 15 (ivy-index 0)) #("TeX-after-compilation-finished-functions" 0 40 (ivy-index 13844)) "LaTeX-mode-hook" #("tex correlate mode" 0 18 (ivy-index 0)) "TeX-source-correlate-mode" #("tex view program list" 0 21 (ivy-index 0)) "TeX-view-program-list" "pdf-latex-command" "tex-compile-commands" "LaTeX-mode-hook" "LaTeX-mode-hook" "latex-preview-pane-enable" #("org-roam-server-mode-hook" 0 25 (ivy-index 8853)) "flyspell-lazy-use-flyspell-word" "flyspell-lazy-window-idle-seconds" "flyspell-lazy-idle-seconds" "flyspell-lazy-changes-threshold" "flyspell-mode-hook" #("flyspell mode ma" 0 16 (ivy-index 0)) "flyspell-mode-map" #("ispell personal" 0 15 (ivy-index 0)) "ispell-personal-dictionary" "no-littering-var-directory" "flyspell-mode-hook" "ispell-change-dictionary" "spell-fu-mode-hook" "user-emacs-directory" "ispell-program-name" #("ispell-local-dictionary" 0 23 (ivy-index 1)) #("flyspell default di" 0 19 (ivy-index 0)) "flyspell-default-dictionary" #("ispell-progra" 0 13 (ivy-index 0)) "ispell-program-name" #("ispell current" 0 14 (ivy-index 1)) "ispell-current-personal-dictionary" #("ispell chang " 0 13 (ivy-index 0)) "ispell-change-dictionary" "LaTeX-mode-hook" "outshine-show-hidden-lines-cookies-p" "outshine-use-speed-commands" "LaTeX-mode-hook" "latex-outline-regexp" "LaTeX-mode-hook"))
(setq file-name-history '("~/main-emacs/elisp/checking-grammar-rcp.el" "~/Documents/org-database/roam/bibliographic/master-lib.bib" "~/Documents/org-database/latex/rels0120-paper_1.tex" "~/main-emacs/elisp/faces-rcp.el" "~/Documents/org-database/latex/POBS0910-niccolo-machiavelli.tex" "~/Documents/org-database/roam/engl0930-Jun042021-223134.org" "/tmp/languagetool-5.3/install.sh" "~/.config/textlint/" "~/.config/textlint/textlintrc.json" "~/main-emacs/etc/snippets/org-mode/blog" "~/main-emacs/init.el" #("/home/krisbalintona/Documents/org-database/library/brown-interviews-emails.org" 0 78 (ivy-index 0)) "~/main-emacs/init.el" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/main-emacs/elisp/latex-general-rcp.el" "~/main-emacs/elisp/completion-selectrum-rcp.el" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/main-emacs/elisp/mu4e-rcp.el" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/Music/BUI/Protesilaos Stavrou/edited_prot.docx" "~/dotfiles/awesomewm/.config/awesome/rc.lua" "~/main-emacs/straight/build/doom-snippts/org-mode/bui" "~/main-emacs/snippets/my email" "~/main-emacs/snippets/my_email" "~/main-emacs/snippets/org-mode/blog" "~/main-emacs/snippets/my_email" "~/ghost/content/themes/personal/index.hbs" "~/ghost/content/themes/personal" "~/ghost/content/themes/zvikov-master/" "~/main-emacs/configs/qol-packages.org" "~/main-emacs/snippets/blog" "~/main-emacs/elisp/buffer-and-window-management-rcp.el" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/ghost/versions/4.7.0/content/themes/casper/assets/css/global.css" "~/ghost/versions/4.7.0/content/themes/casper/assets/built/global.css.map" "~/ghost/versions/4.7.0/content/themes/casper/default.hbs" "~/ghost/versions/4.7.0/content/themes/casper/index.hbs" "~/ghost/content/themes/casper/default.hbs" "~/ghost/content/themes/Dawn-master/partials/content.hbs" "~/ghost/content/themes/Dawn-master/assets/css/general/icons.css" "~/ghost/content/themes/Dawn-master/README.md" "~/ghost/content/themes/zvikov1/partials/navigation.hbs" "~/ghost/content/themes/Dawn-master/partials/header.hbs" "~/ghost/content/themes/Dawn-master/default.hbs" "~/ghost/content/themes/Dawn-master/post.hbs" "~/ghost/content/themes/Dawn-master/index.hbs" "~/ghost/content/themes/Dawn-master/" #("/home/krisbalintona/Documents/org-database/library/possible-courses.org" 0 71 (ivy-index 0)) "~/Documents/roam/Feb242021-224035.org" "~/Documents/roam/Feb242021-223919.org" "~/Documents/roam/Apr192021-135406.org" "~/Documents/roam/Mar212021-234859.org" "~/Documents/roam/Apr192021-144603.org" "~/Documents/roam/Apr192021-144506.org" "~/Documents/roam/Apr022021-232939.org" "~/Documents/roam/Feb242021-224156.org" "~/Documents/roam/Feb262021-213619.org" "~/Documents/roam/Feb242021-224420.org" "~/Documents/roam/Feb242021-224542.org" "~/Documents/roam/Feb242021-223754.org" "~/Documents/roam/Apr192021-144506.org" "~/Documents/roam/Nov302020-232025.org" "~/Documents/org-database/latex/template-chicago_manual.tex" "~/Documents/roam/Nov302020-232025.org" "~/Documents/roam/Oct202020-232007.org" "~/Documents/roam/Nov302020-231618.org" "~/Documents/roam/Nov302020-230421.org" "~/Documents/roam/Nov302020-223130.org" "~/Documents/roam/Nov202020-132015.org" "~/Documents/roam/Dec032020-212009.org" "~/Documents/roam/Mar232021-152749.org" "~/Documents/org-database/latex/POBS0910-final-paper.tex" "~/Documents/org-database/latex/phil0360-midterm.tex" "~/Documents/org-database/latex/east0650-tannen_gendered_language.tex" "~/Documents/org-database/roam/bibliographic/master-lib.bib" "~/dotfiles/qmk/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/keymap.c" "~/dotfiles/awesomewm/.config/awesome/rc.lua" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/Documents/org-database/latex/rels0120-paper_1.tex" "~/Documents/org-database/latex/template-chicago_manual.tex" "~/Documents/org-database/latex/example-cms.tex" "~/main-emacs/configs/file-and-directory-nav.org" "~/main-emacs/init.el" "~/main-emacs/configs/org-packages.org" "~/Downloads/test.org" "~/Downloads/(Gentleman Basterd Book 1) Scott Lynch - The Lies of Locke Lamora-Gollancz (2007).epub" "~/dotfiles/qmk/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps//etc/X11/xorg.conf.d/00-keyboard.conf" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/main-emacs/data/abbrev.el" "~/main-emacs/elisp/themes-rcp.el" "~/main-emacs/configs/qol-packages.org" "~/dotfiles/qmk/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/keymap.c" #("/home/krisbalintona/main-emacs/configs/etc-config.org" 0 53 (ivy-index 1)) "~/main-emacs/etc/abbrev.el" "~/main-emacs/elisp/org-roam-general-rcp.el" "~/Documents/org-database/roam/temp.org" "~/main-emacs/elisp/themes-rcp.el" "~/main-emacs/elisp/mu4e-rcp.el" "~/main-emacs/init.el"))
(setq minibuffer-history '("My post" #("Daoism believes language induces self-confinement                                                                                                                                                     #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "138fe770-1476-4984-80f9-b0567132e86b" nil 4869 nil nil nil nil "Daoism believes language induces self-confinement" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ID" . "138fe770-1476-4984-80f9-b0567132e86b") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B") ("ITEM" . "Daoism believes language induces self-confinement")) ("Part One: Chang-tzu and the origins of Taoism (pg 3-40)" "Notes" "Zettels") ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "138fe770-1476-4984-80f9-b0567132e86b" nil 4869 nil nil nil nil "Daoism believes language induces self-confinement" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ID" . "138fe770-1476-4984-80f9-b0567132e86b") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B") ("ITEM" . "Daoism believes language induces self-confinement")) ("Part One: Chang-tzu and the origins of Taoism (pg 3-40)" "Notes" "Zettels") ("refine") nil nil))) #("RELS0120                                                                                                                                                                                                        " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "d27b7703c4f86d633ac68c5863c34c77a5e9f9aa" (24789 27254 581377 16000) (24789 27254 564377 348000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" nil 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil))) #("Daoism believes language induces self-confinement                                                                                                                                                     #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "138fe770-1476-4984-80f9-b0567132e86b" nil 4869 nil nil nil nil "Daoism believes language induces self-confinement" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ID" . "138fe770-1476-4984-80f9-b0567132e86b") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B") ("ITEM" . "Daoism believes language induces self-confinement")) ("Part One: Chang-tzu and the origins of Taoism (pg 3-40)" "Notes" "Zettels") ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "138fe770-1476-4984-80f9-b0567132e86b" nil 4869 nil nil nil nil "Daoism believes language induces self-confinement" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ID" . "138fe770-1476-4984-80f9-b0567132e86b") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B") ("ITEM" . "Daoism believes language induces self-confinement")) ("Part One: Chang-tzu and the origins of Taoism (pg 3-40)" "Notes" "Zettels") ("refine") nil nil))) #("Daoism is concerned not with truth but the best way to live                                                                                                                                           #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "c9e059cb-8e80-44f5-9717-f366d0155a5e" nil 4377 nil nil nil nil "Daoism is concerned not with truth but the best way to live" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ID" . "c9e059cb-8e80-44f5-9717-f366d0155a5e") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B") ("ITEM" . "Daoism is concerned not with truth but the best way to live")) ("Part One: Chang-tzu and the origins of Taoism (pg 3-40)" "Notes" "Zettels") ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "c9e059cb-8e80-44f5-9717-f366d0155a5e" nil 4377 nil nil nil nil "Daoism is concerned not with truth but the best way to live" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ID" . "c9e059cb-8e80-44f5-9717-f366d0155a5e") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B") ("ITEM" . "Daoism is concerned not with truth but the best way to live")) ("Part One: Chang-tzu and the origins of Taoism (pg 3-40)" "Notes" "Zettels") ("refine") nil nil))) #("Daoism claims language is incapable of representing reality                                                                                                                                           #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "875bb336-21f7-425b-9e0b-3df39bbb5023" nil 7115 nil nil nil nil "Daoism claims language is incapable of representing reality" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ID" . "875bb336-21f7-425b-9e0b-3df39bbb5023") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B") ("ITEM" . "Daoism claims language is incapable of representing reality")) ("Part One: Chang-tzu and the origins of Taoism (pg 3-40)" "Notes" "Zettels") ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "875bb336-21f7-425b-9e0b-3df39bbb5023" nil 7115 nil nil nil nil "Daoism claims language is incapable of representing reality" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ID" . "875bb336-21f7-425b-9e0b-3df39bbb5023") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B") ("ITEM" . "Daoism claims language is incapable of representing reality")) ("Part One: Chang-tzu and the origins of Taoism (pg 3-40)" "Notes" "Zettels") ("refine") nil nil))) #("What is the difference between Western and Chinese philosophy?                                                                                                                                                  " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "d27b7703c4f86d633ac68c5863c34c77a5e9f9aa" (24789 27254 581377 16000) (24789 27254 564377 348000) "8a9989ab-a187-4114-bba4-770e8260b021" nil 32827 nil nil nil nil "What is the difference between Western and Chinese philosophy?" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "8a9989ab-a187-4114-bba4-770e8260b021") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "What is the difference between Western and Chinese philosophy?")) ("Zettels") nil nil nil))) "refine" #("Practicality drove the philosophy of Ancient Chinese traditions                                                                                                                                       #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "115d0144c80c0667d2d1b4410590d005497c7cd6" (24789 27216 363124 543000) (24789 27216 295125 873000) "bbc0b4ca-c498-4c52-85dc-d1e598f86199" nil 32109 nil nil nil nil "Practicality drove the philosophy of Ancient Chinese traditions" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "bbc0b4ca-c498-4c52-85dc-d1e598f86199") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "Practicality drove the philosophy of Ancient Chinese traditions")) ("Zettels") ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "115d0144c80c0667d2d1b4410590d005497c7cd6" (24789 27216 363124 543000) (24789 27216 295125 873000) "bbc0b4ca-c498-4c52-85dc-d1e598f86199" nil 32109 nil nil nil nil "Practicality drove the philosophy of Ancient Chinese traditions" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "bbc0b4ca-c498-4c52-85dc-d1e598f86199") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "Practicality drove the philosophy of Ancient Chinese traditions")) ("Zettels") ("refine") nil nil))) #("grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters                                                                                                                                       #book     #book" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "de96605f-f280-414c-bee4-6d536b45d7b6" nil 1 nil nil nil nil "grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ROAM_REFS" . "cite:grahamChuangtzuInnerChapters2001") ("ID" . "de96605f-f280-414c-bee4-6d536b45d7b6") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B")) nil ("book") nil nil)) 208 213 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "ee89d93727d938e11c6c697feb261e91d1b44111" (24789 26496 614196 731000) (24789 26496 597197 63000) "de96605f-f280-414c-bee4-6d536b45d7b6" nil 1 nil nil nil nil "grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ROAM_REFS" . "cite:grahamChuangtzuInnerChapters2001") ("ID" . "de96605f-f280-414c-bee4-6d536b45d7b6") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B")) nil ("book") nil nil))) #("Daoism claims language is incapable of representing reality                                                                                                                                           #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "3f1b10ab70fcd09b1989b925fe9c1b48161af927" (24789 26189 76208 113000) (24789 26189 38208 856000) "875bb336-21f7-425b-9e0b-3df39bbb5023" nil 34510 nil nil nil nil "Daoism claims language is incapable of representing reality" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "875bb336-21f7-425b-9e0b-3df39bbb5023") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "Daoism claims language is incapable of representing reality")) ("Zettels") ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "3f1b10ab70fcd09b1989b925fe9c1b48161af927" (24789 26189 76208 113000) (24789 26189 38208 856000) "875bb336-21f7-425b-9e0b-3df39bbb5023" nil 34510 nil nil nil nil "Daoism claims language is incapable of representing reality" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "875bb336-21f7-425b-9e0b-3df39bbb5023") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "Daoism claims language is incapable of representing reality")) ("Zettels") ("refine") nil nil))) "refine" "claims" #("Daoism believes language induces self-confinement                                                                                                                                                               " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "e784434e0ce932b39e697d4b6c0521d561eb2f7b" (24789 26091 493115 550000) (24789 26091 480115 804000) "138fe770-1476-4984-80f9-b0567132e86b" nil 32873 nil nil nil nil "Daoism believes language induces self-confinement" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "138fe770-1476-4984-80f9-b0567132e86b") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "Daoism believes language induces self-confinement")) ("Zettels") nil nil nil))) #("grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters                                                                                                                                       #book     #book" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "2953069217faa7346d191b62574c179ed34460d1" (24789 25106 934437 204000) (24789 25106 899437 894000) "de96605f-f280-414c-bee4-6d536b45d7b6" nil 1 nil nil nil nil "grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ROAM_REFS" . "cite:grahamChuangtzuInnerChapters2001") ("ID" . "de96605f-f280-414c-bee4-6d536b45d7b6") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B")) nil ("book") nil nil)) 208 213 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "2953069217faa7346d191b62574c179ed34460d1" (24789 25106 934437 204000) (24789 25106 899437 894000) "de96605f-f280-414c-bee4-6d536b45d7b6" nil 1 nil nil nil nil "grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ROAM_REFS" . "cite:grahamChuangtzuInnerChapters2001") ("ID" . "de96605f-f280-414c-bee4-6d536b45d7b6") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B")) nil ("book") nil nil))) #("BUI | Transcript Protesilaos Stavrou                                                                                                                                                                            " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/transcript_protesilaos_stavrou-Jun152021-214137.org" "e51855582c8cc406eaab7aff4339ebcbd45a3929" (24785 12647 780026 572000) (24785 12647 763026 875000) "edf1f02d-07de-45d7-8277-c0326a9b9e7d" nil 1 nil nil nil nil "BUI | Transcript Protesilaos Stavrou" (("CATEGORY" . "transcript_protesilaos_stavrou-Jun152021-214137") ("ID" . "edf1f02d-07de-45d7-8277-c0326a9b9e7d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/transcript_protesilaos_stavrou-Jun152021-214137.org") ("PRIORITY" . "B")) nil nil nil nil))) #("Daoism is concerned not with truth but the best way to live                                                                                                                                           #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "32437196570e154bb9644142b8ae0fc2d32e34ca" (24789 25081 645935 888000) (24789 25081 629936 204000) "c9e059cb-8e80-44f5-9717-f366d0155a5e" nil 32388 nil nil nil nil "Daoism is concerned not with truth but the best way to live" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "c9e059cb-8e80-44f5-9717-f366d0155a5e") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "Daoism is concerned not with truth but the best way to live")) ("Zettels") ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "32437196570e154bb9644142b8ae0fc2d32e34ca" (24789 25081 645935 888000) (24789 25081 629936 204000) "c9e059cb-8e80-44f5-9717-f366d0155a5e" nil 32388 nil nil nil nil "Daoism is concerned not with truth but the best way to live" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "c9e059cb-8e80-44f5-9717-f366d0155a5e") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "Daoism is concerned not with truth but the best way to live")) ("Zettels") ("refine") nil nil))) "refine" #("Meno’s Paradox                                                                                                                                                                                        #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/phil0650-Jun192021-230443.org" "566b4543a84ae08586e2442282cd60cfbb2c3091" (24782 54626 428576 387000) (24782 54626 425576 443000) "84710055-e815-42a0-ad0a-c407f279067c" nil 87 nil nil nil nil "Meno’s Paradox" (("CATEGORY" . "phil0650-Jun192021-230443") ("ID" . "84710055-e815-42a0-ad0a-c407f279067c") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/phil0650-Jun192021-230443.org") ("PRIORITY" . "B") ("ITEM" . "Meno’s Paradox")) nil ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/phil0650-Jun192021-230443.org" "566b4543a84ae08586e2442282cd60cfbb2c3091" (24782 54626 428576 387000) (24782 54626 425576 443000) "84710055-e815-42a0-ad0a-c407f279067c" nil 87 nil nil nil nil "Meno’s Paradox" (("CATEGORY" . "phil0650-Jun192021-230443") ("ID" . "84710055-e815-42a0-ad0a-c407f279067c") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/phil0650-Jun192021-230443.org") ("PRIORITY" . "B") ("ITEM" . "Meno’s Paradox")) nil ("refine") nil nil))) #("Practicality drove the philosophy of Ancient Chinese traditions                                                                                                                                       #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "1d32f48047f85490076eb9ae7f36f716b621b9c6" (24789 24759 43327 779000) (24789 24759 32327 998000) "bbc0b4ca-c498-4c52-85dc-d1e598f86199" nil 32066 nil nil nil nil "Practicality drove the philosophy of Ancient Chinese traditions" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "bbc0b4ca-c498-4c52-85dc-d1e598f86199") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "Practicality drove the philosophy of Ancient Chinese traditions")) ("Zettels") ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "1d32f48047f85490076eb9ae7f36f716b621b9c6" (24789 24759 43327 779000) (24789 24759 32327 998000) "bbc0b4ca-c498-4c52-85dc-d1e598f86199" nil 32066 nil nil nil nil "Practicality drove the philosophy of Ancient Chinese traditions" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "bbc0b4ca-c498-4c52-85dc-d1e598f86199") ("BLOCKED" . "") ("ALLTAGS" . ":refine:") ("TAGS" . ":refine:") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B") ("ITEM" . "Practicality drove the philosophy of Ancient Chinese traditions")) ("Zettels") ("refine") nil nil))) "refine" #("A strong filter is necessary for an overwhelming number of tasks                                                                                                                                      #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org" "c55bd835d73fd68b6aaac68f0b8be038866b8500" (24787 40529 659821 742000) (24787 40529 652821 881000) "203edcac-57b1-4c3c-b32c-328a9d143cf0" nil 1 nil nil nil nil "A strong filter is necessary for an overwhelming number of tasks" (("CATEGORY" . "a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913") ("ID" . "203edcac-57b1-4c3c-b32c-328a9d143cf0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org") ("PRIORITY" . "B")) nil ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org" "c55bd835d73fd68b6aaac68f0b8be038866b8500" (24787 40529 659821 742000) (24787 40529 652821 881000) "203edcac-57b1-4c3c-b32c-328a9d143cf0" nil 1 nil nil nil nil "A strong filter is necessary for an overwhelming number of tasks" (("CATEGORY" . "a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913") ("ID" . "203edcac-57b1-4c3c-b32c-328a9d143cf0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org") ("PRIORITY" . "B")) nil ("refine") nil nil))) "similar" #("Production should be separated from editing when writing                                                                                                                                              #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/production_should_be_separated_from_editing_when_writing-Jun212021-181743.org" "d50a03bf7f0a3fba621214778cc775793e75e0fd" (24785 4171 432365 834000) (24785 4171 429365 887000) "fc78aa0e-1bc0-48c7-bb8c-8c9172e1d306" nil 1 nil nil nil nil "Production should be separated from editing when writing" (("CATEGORY" . "production_should_be_separated_from_editing_when_writing-Jun212021-181743") ("ID" . "fc78aa0e-1bc0-48c7-bb8c-8c9172e1d306") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/production_should_be_separated_from_editing_when_writing-Jun212021-181743.org") ("PRIORITY" . "B")) nil ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/production_should_be_separated_from_editing_when_writing-Jun212021-181743.org" "d50a03bf7f0a3fba621214778cc775793e75e0fd" (24785 4171 432365 834000) (24785 4171 429365 887000) "fc78aa0e-1bc0-48c7-bb8c-8c9172e1d306" nil 1 nil nil nil nil "Production should be separated from editing when writing" (("CATEGORY" . "production_should_be_separated_from_editing_when_writing-Jun212021-181743") ("ID" . "fc78aa0e-1bc0-48c7-bb8c-8c9172e1d306") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/production_should_be_separated_from_editing_when_writing-Jun212021-181743.org") ("PRIORITY" . "B")) nil ("refine") nil nil))) #("Blog | An Amazing Marvin Starter Pack                                                                                                                                                                           " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_amazing_marvin_starter_pack-Jun172021-014024.org" "1d067c784706c1982f456a468fd5da5b7d2e8eb4" (24789 10682 703380 22000) (24789 10682 652381 25000) "c8e39b5c-87df-49ed-bb0b-142d90be5744" nil 1 nil nil nil nil "Blog | An Amazing Marvin Starter Pack" (("CATEGORY" . "blog_amazing_marvin_starter_pack-Jun172021-014024") ("ID" . "c8e39b5c-87df-49ed-bb0b-142d90be5744") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_amazing_marvin_starter_pack-Jun172021-014024.org") ("PRIORITY" . "B")) nil nil nil nil))) "violently" #("000 Index                                                                                                                                                                                                       " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" "94853e411febe6bd2ee94e42765f9aa71da4ac16" (24787 40604 832327 520000) (24787 40604 822327 719000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" nil 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil nil nil nil))) #("RELS0120                                                                                                                                                                                                        " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "27cc131642d5fc6f653e80ca7d99d3ec128df084" (24787 22622 126572 84000) (24787 22622 117572 246000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" nil 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil))) "critical" "enthusiastic" "positive" "[ACCEPT (buffer)]" "peculiarities" "components" "foundation" "gears" "langtool-java-classpath" "demanding" "manipulated" "metaphysical" "philosophy" "sobering" #("grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters                                                                                                                                       #book     #book" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "b2c28d6b87558ccfc67e3e119131ff485ae2943d" (24786 46576 879221 385000) (24786 46576 854221 869000) "de96605f-f280-414c-bee4-6d536b45d7b6" nil 1 nil nil nil nil "grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ROAM_REFS" . "cite:grahamChuangtzuInnerChapters2001") ("ID" . "de96605f-f280-414c-bee4-6d536b45d7b6") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B")) nil ("book") nil nil)) 208 213 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "b2c28d6b87558ccfc67e3e119131ff485ae2943d" (24786 46576 879221 385000) (24786 46576 854221 869000) "de96605f-f280-414c-bee4-6d536b45d7b6" nil 1 nil nil nil nil "grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ROAM_REFS" . "cite:grahamChuangtzuInnerChapters2001") ("ID" . "de96605f-f280-414c-bee4-6d536b45d7b6") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B")) nil ("book") nil nil))) "company-backends" "[ACCEPT (buffer)]" #("RELS0120 | Paper 2                                                                                                                                                                                              " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120_paper_2-Jun152021-151653.org" "5ec08a9cce25eb7c9f7c6c6cee2731a1faa3edae" (24780 13740 494072 468000) (24776 65058 165777 721000) "63542ec9-5be0-4a15-a2dc-ebd310767cb1" nil 1 nil nil nil nil "RELS0120 | Paper 2" (("CATEGORY" . "rels0120_paper_2-Jun152021-151653") ("ID" . "63542ec9-5be0-4a15-a2dc-ebd310767cb1") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120_paper_2-Jun152021-151653.org") ("PRIORITY" . "B")) nil nil nil nil))) "accuse" "points" "spectacle" "leverage" #("003 BUI                                                                                                                                                                                                         " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/bui-Jun152021-212918.org" "8d10c06abd5ad5f1d4d28b19887b0e9aaae1da12" (24785 6462 744984 85000) (24785 6462 726984 399000) "1bec6788-30bb-462a-a530-f0e72667edbd" nil 1 nil nil nil nil "003 BUI" (("CATEGORY" . "bui-Jun152021-212918") ("ID" . "1bec6788-30bb-462a-a530-f0e72667edbd") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/bui-Jun152021-212918.org") ("PRIORITY" . "B")) nil nil nil nil))) #("Eisenhower Method                                                                                                                                                                                     #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/eisenhower_method-Jun232021-164959.org" "4e041a14a5c69b19327c061d244c4c0eca7b7ff5" (24787 40571 896982 184000) (24787 40571 889982 323000) "39be2a19-cfe5-4624-b945-28ce38abd3c1" nil 1 nil nil nil nil "Eisenhower Method" (("CATEGORY" . "eisenhower_method-Jun232021-164959") ("ID" . "39be2a19-cfe5-4624-b945-28ce38abd3c1") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/eisenhower_method-Jun232021-164959.org") ("PRIORITY" . "B")) nil ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/eisenhower_method-Jun232021-164959.org" "4e041a14a5c69b19327c061d244c4c0eca7b7ff5" (24787 40571 896982 184000) (24787 40571 889982 323000) "39be2a19-cfe5-4624-b945-28ce38abd3c1" nil 1 nil nil nil nil "Eisenhower Method" (("CATEGORY" . "eisenhower_method-Jun232021-164959") ("ID" . "39be2a19-cfe5-4624-b945-28ce38abd3c1") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/eisenhower_method-Jun232021-164959.org") ("PRIORITY" . "B")) nil ("refine") nil nil))) "Eisenhower Method" #("A strong filter is necessary for an overwhelming number of tasks                                                                                                                                      #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org" "c55bd835d73fd68b6aaac68f0b8be038866b8500" (24787 40529 659821 742000) (24787 40529 652821 881000) "203edcac-57b1-4c3c-b32c-328a9d143cf0" nil 1 nil nil nil nil "A strong filter is necessary for an overwhelming number of tasks" (("CATEGORY" . "a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913") ("ID" . "203edcac-57b1-4c3c-b32c-328a9d143cf0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org") ("PRIORITY" . "B")) nil ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org" "c55bd835d73fd68b6aaac68f0b8be038866b8500" (24787 40529 659821 742000) (24787 40529 652821 881000) "203edcac-57b1-4c3c-b32c-328a9d143cf0" nil 1 nil nil nil nil "A strong filter is necessary for an overwhelming number of tasks" (("CATEGORY" . "a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913") ("ID" . "203edcac-57b1-4c3c-b32c-328a9d143cf0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org") ("PRIORITY" . "B")) nil ("refine") nil nil))) "A strong filter is necessary for an overwhelming number of tasks" #("A system will always perfectly produce the results it is structured for                                                                                                                               #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/a_system_will_always_perfectly_produce_the_results_it_is_structured_for-Jun052021-010720.org" "6fd41e3da1b041ed60cce129fd047929ff5c5179" (24780 13740 489072 574000) (24763 1759 676465 329000) "3b34c6b2-4018-4a74-8bd6-8e09053ea17d" nil 1 nil nil nil nil "A system will always perfectly produce the results it is structured for" (("CATEGORY" . "a_system_will_always_perfectly_produce_the_results_it_is_structured_for-Jun052021-010720") ("ID" . "3b34c6b2-4018-4a74-8bd6-8e09053ea17d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/a_system_will_always_perfectly_produce_the_results_it_is_structured_for-Jun052021-010720.org") ("PRIORITY" . "B")) nil ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/a_system_will_always_perfectly_produce_the_results_it_is_structured_for-Jun052021-010720.org" "6fd41e3da1b041ed60cce129fd047929ff5c5179" (24780 13740 489072 574000) (24763 1759 676465 329000) "3b34c6b2-4018-4a74-8bd6-8e09053ea17d" nil 1 nil nil nil nil "A system will always perfectly produce the results it is structured for" (("CATEGORY" . "a_system_will_always_perfectly_produce_the_results_it_is_structured_for-Jun052021-010720") ("ID" . "3b34c6b2-4018-4a74-8bd6-8e09053ea17d") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/a_system_will_always_perfectly_produce_the_results_it_is_structured_for-Jun052021-010720.org") ("PRIORITY" . "B")) nil ("refine") nil nil))) #("Your actions will perfectly reflect your thoughts                                                                                                                                                     #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/your_actions_will_perfectly_reflect_your_thoughts-Jun052021-010812.org" "178728da7ce7910d264774c22ecfb9ca893e0ba4" (24780 13740 489072 574000) (24763 1759 571467 279000) "61e990a7-9dcc-446b-a4fb-d4fad3e24048" nil 1 nil nil nil nil "Your actions will perfectly reflect your thoughts" (("CATEGORY" . "your_actions_will_perfectly_reflect_your_thoughts-Jun052021-010812") ("ID" . "61e990a7-9dcc-446b-a4fb-d4fad3e24048") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/your_actions_will_perfectly_reflect_your_thoughts-Jun052021-010812.org") ("PRIORITY" . "B")) nil ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/your_actions_will_perfectly_reflect_your_thoughts-Jun052021-010812.org" "178728da7ce7910d264774c22ecfb9ca893e0ba4" (24780 13740 489072 574000) (24763 1759 571467 279000) "61e990a7-9dcc-446b-a4fb-d4fad3e24048" nil 1 nil nil nil nil "Your actions will perfectly reflect your thoughts" (("CATEGORY" . "your_actions_will_perfectly_reflect_your_thoughts-Jun052021-010812") ("ID" . "61e990a7-9dcc-446b-a4fb-d4fad3e24048") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/your_actions_will_perfectly_reflect_your_thoughts-Jun052021-010812.org") ("PRIORITY" . "B")) nil ("refine") nil nil))) #("000 Index                                                                                                                                                                                                       " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" "6bd7b349b1a981e6392869efa67bc7614b32e00b" (24785 6481 627654 376000) (24785 6481 605654 761000) "3afc2177-ee7f-4878-8f17-97a6da280fe5" nil 1 nil nil nil nil "000 Index" (("CATEGORY" . "index-Jun042021-183426") ("ID" . "3afc2177-ee7f-4878-8f17-97a6da280fe5") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org") ("PRIORITY" . "B")) nil nil nil nil))) #("Prepare for when your plan fails                                                                                                                                                                      #refine   #refine" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/prepare_for_when_your_plan_fails-Jun232021-164517.org" "df7d6eb59ba7fd5b396f120f4035d64f432aba64" (24787 40382 725737 15000) (24787 40382 721737 93000) "2567eb78-9804-430c-bee0-446c018f7a46" nil 1 nil nil nil nil "Prepare for when your plan fails" (("CATEGORY" . "prepare_for_when_your_plan_fails-Jun232021-164517") ("ID" . "2567eb78-9804-430c-bee0-446c018f7a46") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/prepare_for_when_your_plan_fails-Jun232021-164517.org") ("PRIORITY" . "B")) nil ("refine") nil nil)) 208 215 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/prepare_for_when_your_plan_fails-Jun232021-164517.org" "df7d6eb59ba7fd5b396f120f4035d64f432aba64" (24787 40382 725737 15000) (24787 40382 721737 93000) "2567eb78-9804-430c-bee0-446c018f7a46" nil 1 nil nil nil nil "Prepare for when your plan fails" (("CATEGORY" . "prepare_for_when_your_plan_fails-Jun232021-164517") ("ID" . "2567eb78-9804-430c-bee0-446c018f7a46") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/prepare_for_when_your_plan_fails-Jun232021-164517.org") ("PRIORITY" . "B")) nil ("refine") nil nil))) #("~Me                                                                                                                                                                                                             " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/me-Jun042021-225522.org" "5b366891e40ad72b866ecb908ad61f47fcb4c47a" (24780 13740 486072 638000) (24762 59293 73370 670000) "1c255269-775d-4512-8451-416aedab6edb" nil 1 nil nil nil nil "~Me" (("CATEGORY" . "me-Jun042021-225522") ("ID" . "1c255269-775d-4512-8451-416aedab6edb") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/me-Jun042021-225522.org") ("PRIORITY" . "B")) nil nil nil nil))) "Prepare for when your plan fails" #("001 Fleeting notes                                                                                                                                                                                              " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" "a33f559de0d942bc506da659d7e5196caf0dafca" (24787 22202 714136 247000) (24787 22202 696136 574000) "6561d39b-64e5-48f0-b903-7f519b588317" nil 1 nil nil nil nil "001 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil nil nil nil))) #("Blog                                                                                                                                                                                                            " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" "a40b5ebd55e20ecd67eff9b4625af5f562832a12" (24784 58737 603273 65000) (24784 58737 584273 399000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" nil 1 nil nil nil nil "Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil nil nil nil))) "valence" #("RELS0120                                                                                                                                                                                                        " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "32cf8c6119ff49bb886955076fb725357a43e968" (24787 21894 506733 329000) (24787 21894 483733 747000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" nil 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil))) #("001 Fleeting notes                                                                                                                                                                                              " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" "4390b99d8c8607e489100d76dad83a5bf205a093" (24786 1592 635797 768000) (24786 1592 624797 965000) "6561d39b-64e5-48f0-b903-7f519b588317" nil 1 nil nil nil nil "001 Fleeting notes" (("CATEGORY" . "fleeting_notes-Jun092021-031415") ("ID" . "6561d39b-64e5-48f0-b903-7f519b588317") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org") ("PRIORITY" . "B")) nil nil nil nil))) "becoming" "than" "perception" #("RELS0120                                                                                                                                                                                                        " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "26ef4b21ea24994db13a490ddf0ba46820439231" (24786 20695 724296 293000) (24786 20695 704296 882000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" nil 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil))) "your" "almost" "[ACCEPT (buffer)]" "solutions" "really" "implement" "Marvin" "Bering" "often" "[ACCEPT (buffer)]" #("Blog | Why Amazing Marvin is one-of-a-kind                                                                                                                                                                      " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/why_amazing_marvin_is_one_of_a_kind-Jun172021-201735.org" "5a3fedae2f6b8b060026f3e49146c5c532c4429b" (24781 18630 413967 500000) (24781 18630 403967 676000) "22a012f9-c913-4c3c-8be5-444340e7c933" nil 1 nil nil nil nil "Blog | Why Amazing Marvin is one-of-a-kind" (("CATEGORY" . "why_amazing_marvin_is_one_of_a_kind-Jun172021-201735") ("ID" . "22a012f9-c913-4c3c-8be5-444340e7c933") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/why_amazing_marvin_is_one_of_a_kind-Jun172021-201735.org") ("PRIORITY" . "B")) nil nil nil nil))) #("Blog                                                                                                                                                                                                            " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" "a40b5ebd55e20ecd67eff9b4625af5f562832a12" (24784 58737 603273 65000) (24784 58737 584273 399000) "c19a6de4-e893-4eba-bf11-e4de1c75cf3c" nil 1 nil nil nil nil "Blog" (("CATEGORY" . "blog-Jun172021-013937") ("ID" . "c19a6de4-e893-4eba-bf11-e4de1c75cf3c") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org") ("PRIORITY" . "B")) nil nil nil nil))) "differences" "strengths" "interested" #("Blog | Amazing Marvin Starter Pack                                                                                                                                                                              " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/blog_amazing_marvin_starter_pack-Jun172021-014024.org" "c424e4a392cd7a2104fc6ec162f96742c742fb7a" (24782 18766 28698 314000) (24782 18766 11698 622000) "c8e39b5c-87df-49ed-bb0b-142d90be5744" nil 1 nil nil nil nil "Blog | Amazing Marvin Starter Pack" (("CATEGORY" . "blog_amazing_marvin_starter_pack-Jun172021-014024") ("ID" . "c8e39b5c-87df-49ed-bb0b-142d90be5744") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/blog_amazing_marvin_starter_pack-Jun172021-014024.org") ("PRIORITY" . "B")) nil nil nil nil))) "together" "scratched" "thought" "remembers" "TeX-pdf-tools-sync-view" "European" "advising" #("grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters                                                                                                                                       #book     #book" 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "813a6c0aaa6de532aba30a73610abf94967b8cee" (24784 44208 18302 84000) (24784 44208 16302 120000) "de96605f-f280-414c-bee4-6d536b45d7b6" nil 1 nil nil nil nil "grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ROAM_REFS" . "cite:grahamChuangtzuInnerChapters2001") ("ID" . "de96605f-f280-414c-bee4-6d536b45d7b6") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B")) nil ("book") nil nil)) 208 213 (invisible t node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "813a6c0aaa6de532aba30a73610abf94967b8cee" (24784 44208 18302 84000) (24784 44208 16302 120000) "de96605f-f280-414c-bee4-6d536b45d7b6" nil 1 nil nil nil nil "grahamChuangtzuInnerChapters2001 Chuang-tzu: the inner chapters" (("CATEGORY" . "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233") ("ROAM_REFS" . "cite:grahamChuangtzuInnerChapters2001") ("ID" . "de96605f-f280-414c-bee4-6d536b45d7b6") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org") ("PRIORITY" . "B")) nil ("book") nil nil))) #("RELS0120                                                                                                                                                                                                        " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "58fd5bef19a1af7bea0ae1e109d4bbc642c9c982" (24784 46792 663386 765000) (24784 46792 653386 936000) "9910b3b5-b19c-4e16-94b6-1171485a9c42" nil 1 nil nil nil nil "RELS0120" (("CATEGORY" . "rels0120-Jun042021-203655") ("ID" . "9910b3b5-b19c-4e16-94b6-1171485a9c42") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org") ("PRIORITY" . "B")) nil nil nil nil))) "happened" "testament" #("ENGL0930 | Paper 1                                                                                                                                                                                              " 0 208 (node #s(org-roam-node "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" "9af48d405da2ec3f52a59572ae226d56ec2379f5" (24785 40109 105074 736000) (24785 40109 102074 790000) "8345720e-aa12-4e7f-8474-b4d97bbb70b0" nil 1 nil nil nil nil "ENGL0930 | Paper 1" (("CATEGORY" . "engl0930_essay_1-Jun072021-235609") ("ID" . "8345720e-aa12-4e7f-8474-b4d97bbb70b0") ("BLOCKED" . "") ("FILE" . "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org") ("PRIORITY" . "B")) nil nil nil nil))) "interdisciplinary" "communication"))
(setq counsel-M-x-history '(#("counsel mode" 0 12 (ivy-index 0)) "counsel-mode" "execute-extended-command" #("flimenu" 0 7 (ivy-index 1)) "flimenu-mode" #("counsel des" 0 11 (ivy-index 2)) "counsel-describe-symbol" #("theme" 0 5 (ivy-index 2)) "consult-theme" #("selec mode" 0 10 (ivy-index 6)) "selectrum-mode" #("selectrum mode" 0 14 (ivy-index 2)) "selectrum-mode" #("customize group" 0 15 (ivy-index 4)) "customize-group" #("group customize" 0 15 (ivy-index 4)) "customize-group" #("desc face" 0 9 (ivy-index 0)) "describe-face" "customize-group" "describe-face" #("counsel faces" 0 13 (ivy-index 0)) "counsel-faces" "customize-group" "counsel-faces" #("faces" 0 5 (ivy-index 4)) "counsel-faces" #("cg group" 0 8 (ivy-index 5)) "customize-group" #("embark-act" 0 10 (ivy-index 1)) #("which-key-mode" 0 14 (ivy-index 0)) #("embark-.ct" 0 10 (ivy-index 1)) #("extended e" 0 10 (ivy-index 1)) "execute-extended-command" #("embark act" 0 10 (ivy-index 4)) #("bookmark load" 0 13 (ivy-index 0)) "bookmark-load" "bookmark-save" #("bookmark save" 0 13 (ivy-index 0)) "bookmark-save" #("which-key" 0 9 (ivy-index 8)) #("embark-key" 0 10 (ivy-index 0)) "embark-keymap-help" "embark-act-noexit" #("visual line mode" 0 16 (ivy-index 0)) "visual-line-mode" #("visual li" 0 9 (ivy-index 2)) "visual-line-mode" #("ivy pr" 0 6 (ivy-index 3)) "ivy-prescient-mode" #("eww-buffer-select" 0 17 (ivy-index 0)) "ivy-prescient-mode" #("prescient" 0 9 (ivy-index 3)) "prescient--load" #("ivy rich mode" 0 13 (ivy-index 0)) "ivy-rich-mode" "ivy-rich-mode" #("esup" 0 4 (ivy-index 0)) #("bug-hunter" 0 10 (ivy-index 1)) "bug-hunter-init-file" "all-the-icons-ivy-rich-mode" #("ivy mode" 0 8 (ivy-index 1)) "all-the-icons-ivy-rich-mode" #("helm-find-file" 0 14 (ivy-index 1)) "helm-find-files" #("copy-file" 0 9 (ivy-index 3)) #("bug hunt" 0 8 (ivy-index 1)) "bug-hunter-init-file" #("bug hunter" 0 10 (ivy-index 1)) "bug-hunter-init-file" #("bug hun" 0 7 (ivy-index 1)) "bug-hunter-init-file" #("selectrum rg" 0 12 (ivy-index 1)) "selectrum-rg" #("ivy pre" 0 7 (ivy-index 3)) "ivy-prescient-mode" #("ivy rich" 0 8 (ivy-index 1)) "ivy-rich-mode" #("all the icons ivy rich mode" 0 27 (ivy-index 0)) "all-the-icons-ivy-rich-mode" #("all the icons mode" 0 18 (ivy-index 0)) "all-the-icons-ivy-rich-mode" "ivy-rich-mode" #("ivy rich mo" 0 11 (ivy-index 0)) "ivy-rich-mode" #("^counsel mode" 0 13 (ivy-index 0)) "counsel-mode" #("amx" 0 3 (ivy-index 2)) #("execute-extended-command" 0 24 (ivy-index 1)) #("amx-mode" 0 8 (ivy-index 1)) #("execute ex" 0 10 (ivy-index 0)) #("global" 0 6 (ivy-index 0)) "global-company-mode" #("global company" 0 14 (ivy-index 0)) "global-company-mode" #("consult-file-externally" 0 23 (ivy-index 0)) #("consult file exter" 0 18 (ivy-index 0)) #("copy" 0 4 (ivy-index 0)) #("narrow sub" 0 10 (ivy-index 2)) "outshine-narrow-to-subtree" #("narrow tree" 0 11 (ivy-index 0))))
(setq evil-jumps-history 'nil)
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq kill-ring '(#("it is possible to understand the universe" 0 41 (fontified t)) #(" " 0 1 (fontified t)) #("Humans don’t know much in the first place.
" 0 10 (fontified t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" yank-handler (evil-yank-line-handler nil t)) 10 42 (fontified t yank-handler (evil-yank-line-handler nil t)) 42 43 (fontified t yank-handler (evil-yank-line-handler nil t))) #("2) Random: What does the Professor do with this knowledge? How is it useful to him? Is it purely for one’s intellectual satiation?
" 0 131 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #(" " 0 1 (org-category "rels0120-Jun042021-203655" fontified t)) #(" " 0 1 (org-category "rels0120-Jun042021-203655" fontified t rear-nonsticky t)) #("I" 0 1 (org-category "rels0120-Jun042021-203655" fontified t)) #("*" 0 1 (org-category "rels0120-Jun042021-203655" fontified t font-lock-multiline t org-emphasis t invisible org-link)) #(" " 0 1 (org-category "rels0120-Jun042021-203655" fontified t)) #("-" 0 1 (org-category "rels0120-Jun042021-203655" fontified t composition (2 1 [8211]) face org-superstar-item)) #("  - *It doesn’t disagree with it wholesale but thinks that a more powerful alternative to see the world is to understand the dao. In words, because our minds has natural tendencies to think in a certain way, we see an incomplete picture*
" 0 2 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-superstar-item composition (2 1 [8211]) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (invisible org-link org-emphasis t font-lock-multiline t org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 5 151 (org-emphasis t font-lock-multiline t face (bold) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 151 236 (org-emphasis t font-lock-multiline t face (bold) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 236 237 (invisible org-link org-emphasis t font-lock-multiline t org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 237 238 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("ebib" 0 4 (fontified t font-lock-fontified t font-lock-multiline t face org-quote)) #("  #+begin_quote
  The rivalry between Confucians and Mohists continued until the end of the age of the philosophers. For Chuang-tzŭ, it only confirmed that moralists arguing from different standpoints can never reach agreement, and encouraged him in his uncompromising moral relativism. (10)
  #+end_quote
" 0 16 (face org-block-begin-line font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 16 275 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 275 292 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 292 305 (face org-block-end-line font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 305 306 (face org-block-end-line org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t))) "Who arbitrates our ‘philosophical discoveries’? Daoism says we will never know" #("+ Many modern thinkers (e.g. Hegel, Nietzsche, Leibniz, etc.) were inspired by and read the Zhuangzi!
" 0 1 (org-category "rels0120-Jun042021-203655" face org-superstar-item composition (1 1 [10148]) fontified t yank-handler (evil-yank-line-handler nil t)) 1 102 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("#+end_quote
" 0 11 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 11 12 (face org-block-end-line org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (face org-quote font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("#+end_quote
" 0 11 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 11 12 (face org-block-end-line org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (face org-quote font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #(" 
" 0 1 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #(" 
" 0 1 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) "https://canvas.brown.edu/courses/1085388/discussion_topics/3803491" "Firstly, I have been really engaged with Graham’s commentary which likens many aspects of Daoist thinking to modern ‘Western’ philosophy. Graham frequently explains how these ideas interact with ‘Western’ philosophy in more familiar terms.

 

Secondly, is it correct that Daoism derives its personal ethic from its metaphysical theory? Graham explains that

Taoists do share one basic insight – that, while all other things move spontaneously on the course proper to them, man has stunted and maimed his spontaneous aptitude by the habit of distinguishing alternatives… (11).

In this way, Daoists have differing metaphysical views yet the personal ethic which is core to all Daoists is supposed to be derived from the metaphysical understanding. Doesn't this suggest that their personal ethic inspires their view on metaphysics—and if so, isn't that a bit backwards?

 

Thirdly, does Daoism believe that we all have an innate power (that we should return to by embodying wu-wei) or not? This is the question point Keenan asks. I ask this because of the following passage:

Chuang-tzŭ is interested not in the nature which a man inherits at birth but in the Power which he develops by intensive training. We do not possess from birth that selfless mirror-like objectivity which ensures that every prompting is the ‘impulse from Heaven’. To quote a writer in the Outer chapters who does speak of nature, ‘By the training of the nature we recover the Power’ (20).

From this it seems that Zhuangzi believes that the power needs to be cultivated, contradicting my previous understanding. Is the Daoist understanding of innateness closer to an ‘innate potential’ rather than ‘innate ability’? The final sentence states that we need to ‘recover’ that power but the first half states that we ‘do not possess [it] from birth’." #("**** 
" 0 3 (face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (composition (7 1 [9675]) face (org-superstar-header-bullet org-level-4) fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (face org-level-4 fontified t yank-handler (evil-yank-line-handler nil t)) 5 6 (face org-level-4 org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("+ We cage ourselves. But, from our own perception, that cage can be the entire world—however big you want. Similarly, you can be physically free but not mentally
  - This is why /definitions are/ pernicious to Daoists. They cage us by limiting our perceptions. Personal pressures and externally enforced norms
" 0 1 (face org-superstar-item composition (1 1 [10148]) fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1 39 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 39 49 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 49 84 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 84 161 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 161 162 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 162 164 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 164 165 (face org-superstar-item composition (2 1 [8211]) fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 165 178 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 178 179 (invisible org-link org-emphasis t font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 179 194 (org-emphasis t font-lock-multiline t face (italic) fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 194 195 (invisible org-link org-emphasis t font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 195 309 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 309 310 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("  - The Zhuangzi has a vision of /contextualized, fluid knowledge/
  - Rather than repressing the self, it conveys that there is something /underneath that should be revealed/
    * Discover what’s already there rather than trying to progress to something that isn’t
" 0 2 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-superstar-item composition (2 1 [8211]) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 4 33 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 33 34 (invisible org-link org-emphasis t font-lock-multiline t org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 34 65 (org-emphasis t font-lock-multiline t face (italic) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 65 66 (invisible org-link org-emphasis t font-lock-multiline t org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 66 67 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 67 69 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 69 70 (face org-superstar-item composition (2 1 [8211]) fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 70 78 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 78 82 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 82 139 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 139 140 (invisible org-link org-emphasis t font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 140 174 (org-emphasis t font-lock-multiline t face (italic) fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 174 175 (invisible org-link org-emphasis t font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 175 176 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 176 180 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 180 181 (org-category "rels0120-Jun042021-203655" face org-superstar-item composition (3 1 [8226]) fontified t yank-handler (evil-yank-line-handler nil t)) 181 195 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 195 264 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 264 266 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 266 267 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("ebib" 0 4 (fontified t font-lock-fontified t font-lock-multiline t face org-quote)) #("[" 0 1 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t org-category "rels0120-Jun042021-203655" font-lock-multiline t face org-quote)) #("[" 0 1 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-fontified t org-category "rels0120-Jun042021-203655" font-lock-multiline t face org-quote)) #("[id:de96605f-f280-414c-bee4-6d536b45d7b6]" 0 1 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t font-lock-multiline t face org-quote org-category "rels0120-Jun042021-203655") 1 39 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t org-category "rels0120-Jun042021-203655") 39 40 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t org-category "rels0120-Jun042021-203655") 40 41 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t font-lock-multiline t face org-quote org-category "rels0120-Jun042021-203655")) #(" chapters]]" 0 8 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 8 9 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-fontified t face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 9 10 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t invisible org-link face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 10 11 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t invisible org-link face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) #(" inner" 0 6 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) #(" the" 0 4 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) #(" Chuang-tzu:" 0 12 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) #("grahamChuangtzuInnerChapters2001" 0 32 (fontified t help-echo "LINK: id:de96605f-f280-414c-bee4-6d536b45d7b6" htmlize-link (:uri "id:de96605f-f280-414c-bee4-6d536b45d7b6") font-lock-fontified t face (org-link org-quote) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) #("
" 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t))) #("  ‘
" 0 2 (fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (yank-handler (evil-yank-line-handler nil t))) #("  #+begin_quote
  There is a notable difference between the conceptualizations of this underlying ground in Chinese and in Western thought. The goal which Western philosophy has pursued has been the reality beyond appearances, on the assumption (until doubts arose as to the possibility of inferring from ‘is’ to ‘ought’) that once we know the truth about the cosmos we shall know how to live in it. The mystical tradition in the West therefore identifies the ground of things as pure Being or ultimate Reality, the vision of which is also a personal salvation. But the goal of Chinese philosophy is the Way by which to live and die, achievement of which may or may not incidentally involve exposure of illusion in our everyday vision of the world in which we act. (24)
  #+end_quote
" 0 16 (face org-block-begin-line font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 16 234 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 234 500 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 500 734 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 734 770 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 770 783 (face org-block-end-line font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 783 784 (face org-block-end-line org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t))) #("+ What can I make of this?
" 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" face org-superstar-item composition (1 1 [10148]) fontified t yank-handler (evil-yank-line-handler nil t)) 1 27 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t))) #("** Daoism is concerned not with truth but the best way to live                                  :refine:
:PROPERTIES:
:ID:       c9e059cb-8e80-44f5-9717-f366d0155a5e
:END:

    #+begin_quote
    … but Taoists, as we have noticed already, do not think in terms of discovering Truth or Reality. They merely have the good sense to remind us of the limitations of the language which they use to guide us towards that altered perspective on the world and that knack of living. (27)
    #+end_quote

** Daoism believes language induces self-confinement                                            :refine:
:PROPERTIES:
:ID:       138fe770-1476-4984-80f9-b0567132e86b
:END:

[[id:875bb336-21f7-425b-9e0b-3df39bbb5023][Daoism claims language is incapable of representing reality]]

for the escape of our own self-confinement from the limiting cages of our own language

Firstly, language limits us (specifically, it is deleterious to our own inherent capacities) and are failures to represent that which we claim they represent (hence they think that we should think of the thing itself when referring to it). 

This connects to why Daoists don’t believe language holds value beyond communicating based on a set of definitions which are all misrepresented or insufficient. In other words, language is a vain plane:
#+begin_quote
The crucial point for Chuang-tzŭ is that words have no fixed meanings except in the artificial conditions of intellectual debate, in which one may as well accept the opponent’s definitions, since they are no more or less arbitrary than any others. (cite:grahamChuangtzuInnerChapters2001 28)
#+end_quote
+ Daoism claims that the medium of language instrumentalizes thinking categorically which is only an unnecessary intermediate step to doing whatever we want to do
  - Think about trying to verbally teach someone a skill: it’s too difficult. The solution, according to Daoism, is to get rid of thinking in these discrete steps, coming closer to our inherent ability to act spontaneously without thinking—to ‘accomplish without doing’. This is why Daoism is anti-rationalist.
    - This connects to why Daoists don’t believe language holds value beyond communicating based on a set of definitions which are all misrepresented or insufficient. In other words, language is a vain plane:
      #+begin_quote
      The crucial point for Chuang-tzŭ is that words have no fixed meanings except in the artificial conditions of intellectual debate, in which one may as well accept the opponent’s definitions, since they are no more or less arbitrary than any others. (28)
      #+end_quote

Secondly, Daoism says when we escape those boundaries we are free from the cages that we’ve placed on ourselves by our very own language

** Daoism claims language is incapable of representing reality                                  :refine:
:PROPERTIES:
:ID:       875bb336-21f7-425b-9e0b-3df39bbb5023
:END:

He cites a reasoning very similar that of [[id:84710055-e815-42a0-ad0a-c407f279067c][Meno’s Paradox]], namely that we cannot confirm that we’ve learned the unknown we set out to discover:
    #+begin_quote
    The only assurances we can have or should want is that of organic process and analyzed knacks and skills, of whatever we confidently do without knowing how we do it. We have to ‘know how to know by depending on that which the wits do not know’, otherwise we are projected into ‘the ultimate uncertainty’. (16)
    #+end_quote
    * Similarly, he cites the continual disagreement and multitude of stances between Confucianism, Mohism, etc. as proof
" 0 1 (face org-hide org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-2 org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 3 96 (face org-level-2 org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 96 103 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 103 104 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) org-category "rels0120-Jun042021-203655" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t yank-handler (evil-yank-line-handler nil t)) 104 105 (face org-level-2 org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 105 117 (org-category "rels0120-Jun042021-203655" font-lock-fontified t face org-drawer fontified t yank-handler (evil-yank-line-handler nil t)) 117 118 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 118 119 (org-category "rels0120-Jun042021-203655" face org-special-keyword fontified t yank-handler (evil-yank-line-handler nil t)) 119 121 (org-category "rels0120-Jun042021-203655" face org-special-keyword fontified t yank-handler (evil-yank-line-handler nil t)) 121 122 (org-category "rels0120-Jun042021-203655" face org-special-keyword fontified t yank-handler (evil-yank-line-handler nil t)) 122 124 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 124 125 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 125 127 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 127 128 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 128 129 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 129 165 (org-category "rels0120-Jun042021-203655" face org-property-value fontified t yank-handler (evil-yank-line-handler nil t)) 165 166 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 166 171 (org-category "rels0120-Jun042021-203655" font-lock-fontified t face org-drawer fontified t yank-handler (evil-yank-line-handler nil t)) 171 172 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 172 173 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 173 176 (face org-block-begin-line font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 176 177 (face org-block-begin-line font-lock-multiline t rear-nonsticky t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 177 191 (face org-block-begin-line font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 191 274 (face org-quote font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 274 477 (face org-quote font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 477 492 (face org-block-end-line font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 492 493 (face org-block-end-line org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 493 494 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 494 495 (face org-hide org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 495 496 (composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 496 497 (face org-level-2 org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 497 534 (face org-level-2 org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 534 590 (face org-level-2 org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 590 597 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 597 598 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) org-category "rels0120-Jun042021-203655" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t yank-handler (evil-yank-line-handler nil t)) 598 599 (face org-level-2 org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 599 611 (org-category "rels0120-Jun042021-203655" font-lock-fontified t face org-drawer fontified t yank-handler (evil-yank-line-handler nil t)) 611 612 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 612 613 (org-category "rels0120-Jun042021-203655" face org-special-keyword fontified t yank-handler (evil-yank-line-handler nil t)) 613 615 (org-category "rels0120-Jun042021-203655" face org-special-keyword fontified t yank-handler (evil-yank-line-handler nil t)) 615 616 (org-category "rels0120-Jun042021-203655" face org-special-keyword fontified t yank-handler (evil-yank-line-handler nil t)) 616 618 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 618 619 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 619 621 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 621 622 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 622 623 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 623 659 (org-category "rels0120-Jun042021-203655" face org-property-value fontified t yank-handler (evil-yank-line-handler nil t)) 659 660 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 660 665 (org-category "rels0120-Jun042021-203655" font-lock-fontified t face org-drawer fontified t yank-handler (evil-yank-line-handler nil t)) 665 666 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 666 667 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 667 709 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link invisible org-link org-category "rels0120-Jun042021-203655" htmlize-link (:uri "id:875bb336-21f7-425b-9e0b-3df39bbb5023") help-echo "LINK: id:875bb336-21f7-425b-9e0b-3df39bbb5023" fontified t yank-handler (evil-yank-line-handler nil t)) 709 710 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link invisible org-link org-category "rels0120-Jun042021-203655" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "id:875bb336-21f7-425b-9e0b-3df39bbb5023") help-echo "LINK: id:875bb336-21f7-425b-9e0b-3df39bbb5023" fontified t yank-handler (evil-yank-line-handler nil t)) 710 768 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link org-category "rels0120-Jun042021-203655" htmlize-link (:uri "id:875bb336-21f7-425b-9e0b-3df39bbb5023") help-echo "LINK: id:875bb336-21f7-425b-9e0b-3df39bbb5023" fontified t yank-handler (evil-yank-line-handler nil t)) 768 769 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link org-category "rels0120-Jun042021-203655" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "id:875bb336-21f7-425b-9e0b-3df39bbb5023") help-echo "LINK: id:875bb336-21f7-425b-9e0b-3df39bbb5023" fontified t yank-handler (evil-yank-line-handler nil t)) 769 770 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link invisible org-link org-category "rels0120-Jun042021-203655" htmlize-link (:uri "id:875bb336-21f7-425b-9e0b-3df39bbb5023") help-echo "LINK: id:875bb336-21f7-425b-9e0b-3df39bbb5023" fontified t yank-handler (evil-yank-line-handler nil t)) 770 771 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link invisible org-link org-category "rels0120-Jun042021-203655" htmlize-link (:uri "id:875bb336-21f7-425b-9e0b-3df39bbb5023") help-echo "LINK: id:875bb336-21f7-425b-9e0b-3df39bbb5023" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t yank-handler (evil-yank-line-handler nil t)) 771 772 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 772 773 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 773 803 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 803 859 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 859 860 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 860 861 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 861 889 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 889 952 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 952 1019 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 1019 1098 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 1098 1101 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 1101 1102 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 1102 1103 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 1103 1104 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1104 1105 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1105 1305 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1305 1306 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1306 1320 (face org-block-begin-line font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 1320 1366 (face org-quote font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 1366 1569 (face org-quote font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 1569 1573 (font-lock-multiline t htmlize-link (:uri "cite:grahamChuangtzuInnerChapters2001") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-ref-cite-face org-quote) fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 1573 1605 (org-category "rels0120-Jun042021-203655" font-lock-multiline t htmlize-link (:uri "cite:grahamChuangtzuInnerChapters2001") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-ref-cite-face org-quote) font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 1605 1606 (org-category "rels0120-Jun042021-203655" font-lock-multiline t htmlize-link (:uri "cite:grahamChuangtzuInnerChapters2001") help-echo (lambda (window object position) (when org-ref-show-citation-on-enter (save-excursion (goto-char position) (let ((s (org-ref-format-entry (org-ref-get-bibtex-key-under-cursor)))) (with-temp-buffer (insert s) (fill-paragraph) (buffer-string)))))) keymap (keymap (tab lambda nil (interactive) (funcall org-ref-insert-cite-function)) (S-up . org-ref-sort-citation-link) (S-right lambda nil (interactive) (org-ref-swap-citation-link 1)) (S-left lambda nil (interactive) (org-ref-swap-citation-link -1)) (C-right . org-ref-next-key) (C-left . org-ref-previous-key) (16777337 lambda nil "Paste key at point. Assumes the first thing in the killring is a key." (interactive) (org-ref-insert-key-at-point (car kill-ring))) (16777303 lambda nil "Copy all the keys at point." (interactive) (kill-new (org-element-property :path (org-element-context)))) (16777335 lambda nil (interactive) (kill-new (car (org-ref-get-bibtex-key-and-file)))) (16777318 lambda nil (interactive) (save-excursion (org-ref-open-citation-at-point) (kill-new (org-ref-format-bibtex-entry-at-point)))) (16777319 . org-ref-google-scholar-at-point) (16777317 lambda nil "Email entry at point" (interactive) (org-ref-open-citation-at-point) (org-ref-email-bibtex-entry)) (16777315 . org-ref-wos-citing-at-point) (16777330 . org-ref-wos-related-at-point) (16777326 . org-ref-open-notes-at-point) (16777328 lambda nil (interactive) (funcall org-ref-open-pdf-function)) (16777333 . org-ref-open-url-at-point) (16777314 . org-ref-open-citation-at-point) (16777327 . org-ref-cite-hydra/body) (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-ref-cite-face org-quote) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 1606 1607 (org-category "rels0120-Jun042021-203655" face org-quote font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 1607 1611 (face org-quote font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 1611 1617 (face org-block-end-line font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 1617 1622 (face org-block-end-line font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 1622 1623 (face org-block-end-line fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1623 1624 (face org-superstar-item composition (1 1 [10148]) fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1624 1786 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1786 1788 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1788 1789 (face org-superstar-item composition (2 1 [8211]) fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 1789 2092 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 2092 2097 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 2097 2100 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 2100 2101 (rear-nonsticky t fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 2101 2102 (face org-superstar-item composition (2 1 [8211]) fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 2102 2103 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 2103 2305 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 2305 2306 (fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 2306 2326 (face org-block-begin-line font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 2326 2378 (face org-quote font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 2378 2585 (face org-quote font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 2585 2597 (face org-block-end-line font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 2597 2602 (face org-block-end-line font-lock-multiline t fontified t org-category "rels0120-Jun042021-203655" font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 2602 2603 (face org-block-end-line fontified t org-category "rels0120-Jun042021-203655" yank-handler (evil-yank-line-handler nil t)) 2603 2604 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2604 2614 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2614 2692 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2692 2740 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2740 2741 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2741 2742 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2742 2743 (org-category "rels0120-Jun042021-203655" face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 2743 2744 (org-category "rels0120-Jun042021-203655" composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) fontified t yank-handler (evil-yank-line-handler nil t)) 2744 2745 (org-category "rels0120-Jun042021-203655" face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 2745 2752 (org-category "rels0120-Jun042021-203655" face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 2752 2758 (org-category "rels0120-Jun042021-203655" face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 2758 2838 (org-category "rels0120-Jun042021-203655" face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 2838 2845 (org-category "rels0120-Jun042021-203655" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) fontified t yank-handler (evil-yank-line-handler nil t)) 2845 2846 (org-category "rels0120-Jun042021-203655" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-2) fontified t yank-handler (evil-yank-line-handler nil t)) 2846 2847 (org-category "rels0120-Jun042021-203655" face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 2847 2859 (org-category "rels0120-Jun042021-203655" font-lock-fontified t face org-drawer fontified t yank-handler (evil-yank-line-handler nil t)) 2859 2860 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2860 2861 (org-category "rels0120-Jun042021-203655" face org-special-keyword fontified t yank-handler (evil-yank-line-handler nil t)) 2861 2863 (org-category "rels0120-Jun042021-203655" face org-special-keyword fontified t yank-handler (evil-yank-line-handler nil t)) 2863 2864 (org-category "rels0120-Jun042021-203655" face org-special-keyword fontified t yank-handler (evil-yank-line-handler nil t)) 2864 2866 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2866 2867 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2867 2869 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2869 2870 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2870 2871 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2871 2907 (org-category "rels0120-Jun042021-203655" face org-property-value fontified t yank-handler (evil-yank-line-handler nil t)) 2907 2908 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2908 2913 (org-category "rels0120-Jun042021-203655" font-lock-fontified t face org-drawer fontified t yank-handler (evil-yank-line-handler nil t)) 2913 2914 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2914 2915 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2915 2957 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 2957 2999 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link invisible org-link org-category "rels0120-Jun042021-203655" htmlize-link (:uri "id:84710055-e815-42a0-ad0a-c407f279067c") help-echo "LINK: id:84710055-e815-42a0-ad0a-c407f279067c" fontified t yank-handler (evil-yank-line-handler nil t)) 2999 3000 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link invisible org-link org-category "rels0120-Jun042021-203655" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "id:84710055-e815-42a0-ad0a-c407f279067c") help-echo "LINK: id:84710055-e815-42a0-ad0a-c407f279067c" fontified t yank-handler (evil-yank-line-handler nil t)) 3000 3013 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link org-category "rels0120-Jun042021-203655" htmlize-link (:uri "id:84710055-e815-42a0-ad0a-c407f279067c") help-echo "LINK: id:84710055-e815-42a0-ad0a-c407f279067c" fontified t yank-handler (evil-yank-line-handler nil t)) 3013 3014 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link org-category "rels0120-Jun042021-203655" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "id:84710055-e815-42a0-ad0a-c407f279067c") help-echo "LINK: id:84710055-e815-42a0-ad0a-c407f279067c" fontified t yank-handler (evil-yank-line-handler nil t)) 3014 3015 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link invisible org-link org-category "rels0120-Jun042021-203655" htmlize-link (:uri "id:84710055-e815-42a0-ad0a-c407f279067c") help-echo "LINK: id:84710055-e815-42a0-ad0a-c407f279067c" fontified t yank-handler (evil-yank-line-handler nil t)) 3015 3016 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link invisible org-link org-category "rels0120-Jun042021-203655" htmlize-link (:uri "id:84710055-e815-42a0-ad0a-c407f279067c") help-echo "LINK: id:84710055-e815-42a0-ad0a-c407f279067c" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t yank-handler (evil-yank-line-handler nil t)) 3016 3102 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 3102 3103 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 3103 3121 (face org-block-begin-line font-lock-multiline t org-category "rels0120-Jun042021-203655" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 3121 3415 (face org-quote font-lock-multiline t org-category "rels0120-Jun042021-203655" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 3415 3435 (face org-quote font-lock-multiline t org-category "rels0120-Jun042021-203655" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 3435 3450 (face org-block-end-line font-lock-multiline t org-category "rels0120-Jun042021-203655" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 3450 3451 (face org-block-end-line org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 3451 3455 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 3455 3456 (face org-superstar-item composition (3 1 [8226]) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 3456 3571 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 3571 3572 (org-category "rels0120-Jun042021-203655" rear-nonsticky t fontified t yank-handler (evil-yank-line-handler nil t)) 3572 3573 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) #("** Questions

1) 

" 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" composition (4 1 [9679]) face (org-superstar-header-bullet org-level-2) fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 3 13 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 13 14 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 14 17 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 17 18 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 18 19 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t))) #("    - This connects to why Daoists don’t believe language holds value beyond communicating based on a set of definitions which are all misrepresented or insufficient. In other words, language is a vain plane:
      #+begin_quote
      The crucial point for Chuang-tzŭ is that words have no fixed meanings except in the artificial conditions of intellectual debate, in which one may as well accept the opponent’s definitions, since they are no more or less arbitrary than any others. (28)
      #+end_quote
" 0 4 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" face org-superstar-item composition (2 1 [8211]) fontified t yank-handler (evil-yank-line-handler nil t)) 5 6 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 6 208 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 208 209 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 209 229 (face org-block-begin-line font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 229 281 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 281 488 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 488 500 (face org-block-end-line font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 500 505 (face org-block-end-line font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 505 506 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" face org-block-end-line fontified t yank-handler (evil-yank-line-handler nil t))) #("    #+begin_quote
    … but Taoists, as we have noticed already, do not think in terms of discovering Truth or Reality. They merely have the good sense to remind us of the limitations of the language which they use to guide us towards that altered perspective on the world and that knack of living. (27)
    #+end_quote
" 0 18 (face org-block-begin-line font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 18 101 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 101 304 (face org-quote font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 304 319 (face org-block-end-line font-lock-multiline t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 319 320 (face org-block-end-line org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t))) #("93" 0 2 (fontified t font-lock-fontified t org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" font-lock-multiline t face org-quote)) #("    * Similarly, he cites the continual disagreement and multitude of stances between Confucianism, Mohism, etc. as proof
" 0 4 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (face org-superstar-item composition (3 1 [8226]) org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 5 120 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t)) 120 121 (org-category "rels0120-Jun042021-203655" rear-nonsticky t fontified t yank-handler (evil-yank-line-handler nil t)) 121 122 (org-category "rels0120-Jun042021-203655" fontified t yank-handler (evil-yank-line-handler nil t))) "He cites a reasoning very similar that of [[id:84710055-e815-42a0-ad0a-c407f279067c][Meno’s Paradox]], namely that we cannot confirm that we’ve learned the unknown we set out to discover:
    #+begin_quote
    The only assurances we can have or should want is that of organic process and analyzed knacks and skills, of whatever we confidently do without knowing how we do it. We have to ‘know how to know by depending on that which the wits do not know’, otherwise we are projected into ‘the ultimate uncertainty’. (16)
    #+end_quote
    * Similarly, he cites the continual disagreement and multitude of stances between Confucianism, Mohism, etc. as proof" #("+ Daoism claims that the medium of language instrumentalizes thinking categorically which is only an unnecessary intermediate step to doing whatever we want to do
  - Think about trying to verbally teach someone a skill: it’s too difficult. The solution, according to Daoism, is to get rid of thinking in these discrete steps, coming closer to our inherent ability to act spontaneously without thinking—to ‘accomplish without doing’. This is why Daoism is anti-rationalist.
" 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" face org-superstar-item composition (1 1 [10148]) fontified t yank-handler (evil-yank-line-handler nil t)) 1 163 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 163 165 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 165 166 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" face org-superstar-item composition (2 1 [8211]) fontified t yank-handler (evil-yank-line-handler nil t)) 166 469 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 469 474 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t))) #("+ The author in this chapter mentions how, despite reaching surprisingly ‘modern European’ thought, Zhuangzi leaves it at that and drops the inquiry, seeming not to return to finding out ‘an answer’
" 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" face org-superstar-item composition (1 1 [10148]) fontified t yank-handler (evil-yank-line-handler nil t)) 1 73 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 73 81 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 81 89 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 89 187 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 187 197 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 197 198 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t)) 198 199 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t yank-handler (evil-yank-line-handler nil t))) #("ebib" 0 4 (fontified t font-lock-fontified t font-lock-multiline t face org-quote)) #(" " 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t rear-nonsticky t)) #(" " 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t)) #(" " 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t)) #(" " 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t)) #("T" 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t)) #(" " 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t rear-nonsticky t)) #(" " 0 1 (org-category "grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233" fontified t))))
(setq recentf-list '("/home/krisbalintona/main-emacs/configs/qol-packages.org" "/home/krisbalintona/Documents/org-database/roam/grahamChuangtzuInnerChapters2001-chuang_tzu_the_inner_chapters-Jun212021-111233.org" "/home/krisbalintona/Documents/org-database/roam/rels0120-Jun042021-203655.org" "/home/krisbalintona/Documents/org-database/roam/index-Jun042021-183426.org" "/home/krisbalintona/Documents/org-database/roam/prepare_for_when_your_plan_fails-Jun232021-164517.org" "/home/krisbalintona/Documents/org-database/roam/a_system_will_always_perfectly_produce_the_results_it_is_structured_for-Jun052021-010720.org" "/home/krisbalintona/Documents/org-database/roam/blog-Jun172021-013937.org" "/home/krisbalintona/Documents/org-database/roam/bui-Jun152021-212918.org" "/home/krisbalintona/Documents/org-database/roam/engl0930-Jun042021-223134.org" "/home/krisbalintona/Documents/org-database/roam/blog_amazing_marvin_starter_pack-Jun172021-014024.org" "/home/krisbalintona/Documents/org-database/roam/fleeting_notes-Jun092021-031415.org" "/home/krisbalintona/Documents/org-database/roam/production_should_be_separated_from_editing_when_writing-Jun212021-181743.org" "/home/krisbalintona/Documents/org-database/roam/east0650-Jun212021-163238.org" "/home/krisbalintona/Documents/org-database/roam/cheeHowWriteAutobiographical2018-how_to_write_an_autobiographical_novel_essays-Jun212021-134717.org" "/home/krisbalintona/Documents/org-database/roam/introduction_to_the_zettelkasten_method-Jun042021-234311.org" "/home/krisbalintona/Documents/org-database/roam/interview_protesilaos_stavrou-Jun152021-214059.org" "/home/krisbalintona/Documents/org-database/roam/zettelkasen_enhances_idea_emergence-Jun052021-012500.org" "/home/krisbalintona/Documents/org-database/roam/zettelkasen_artificially_extends_our_working_memory-Jun042021-230035.org" "/home/krisbalintona/Documents/org-database/roam/monetize_yourself-Jun122021-223708.org" "/home/krisbalintona/Documents/org-database/roam/knowledge_is_information_with_a_purpose-Jun132021-184454.org" "/home/krisbalintona/Documents/org-database/roam/interview_dr_jingjing_lin-Jun152021-214331.org" "/home/krisbalintona/Documents/org-database/roam/implementing_a_digital_zettelkasten_using_block_references_in_roam_research-Jun042021-235544.org" "/home/krisbalintona/Documents/org-database/roam/how_to_plan_your_day-Jun182021-220912.org" "/home/krisbalintona/Documents/org-database/roam/debarySourcesChineseTradition1999-sources_of_chinese_tradition-Jun042021-193605.org" "/home/krisbalintona/Documents/org-database/roam/create_zettel_from_reading_notes_according_to_the_principle_of_atomicity-Jun042021-233627.org" "/home/krisbalintona/Documents/org-database/roam/courses-Jun042021-223103.org" "/home/krisbalintona/Documents/org-database/roam/andy_matuschak_s_working_notes-Jun042021-231116.org" "/home/krisbalintona/Documents/org-database/roam/phil0360-Jun192021-224102.org" "/home/krisbalintona/Documents/org-database/roam/christina_willner-Jun182021-221620.org" "/home/krisbalintona/Documents/org-database/roam/5_guiding_guiding_principles_for_zettelkasten_newcomers-Jun182021-204251.org" "/home/krisbalintona/Documents/org-database/roam/what_is_the_difference_between_incremental_writing_and_revision-Jun182021-145629.org" "/home/krisbalintona/Documents/org-database/roam/obsidian_incremental_writing_plugin-Jun182021-145247.org" "/home/krisbalintona/Documents/org-database/roam/say_without_saying_in_creative_writing-Jun182021-142600.org" "/home/krisbalintona/Documents/org-database/roam/possible_courses-Jun162021-015016.org" "/home/krisbalintona/Documents/org-database/roam/transcript_dr_jingjing_lin-Jun152021-214406.org" "/home/krisbalintona/Documents/org-database/roam/transcript_john_jones-Jun152021-214024.org" "/home/krisbalintona/Documents/org-database/roam/transcript_akash_singirikonda-Jun152021-213933.org" "/home/krisbalintona/Documents/org-database/roam/interview_meliisa_chen-Jun152021-213525.org" "/home/krisbalintona/Documents/org-database/roam/interview_patrick_rothfuss-Jun152021-213454.org" "/home/krisbalintona/Documents/org-database/roam/interview_stephen_park-Jun152021-213308.org" "/home/krisbalintona/Documents/org-database/roam/interview_stephen_west-Jun152021-213219.org" "/home/krisbalintona/Documents/org-database/roam/interview_max_deutsch-Jun152021-213129.org" "/home/krisbalintona/Documents/org-database/roam/ahrensHowTakeSmart2017-how_to_take_smart_notes_one_simple_technique_to_boost_writing_learning_and_thinking_for_students_academics_and_nonfiction_book_writers-Jun142021-003711.org" "/home/krisbalintona/Documents/org-database/roam/littlejohnDaoismIntroduction2014-daoism_an_introduction-Jun132021-234517.org" "/home/krisbalintona/Documents/org-database/roam/pobs0930-Jun132021-192002.org" "/home/krisbalintona/Documents/org-database/roam/contextualization_is_key_to_getting_value_out_of_insight-Jun132021-190259.org" "/home/krisbalintona/Documents/org-database/roam/the_mental_squeezing_point-Jun132021-185957.org" "/home/krisbalintona/Documents/org-database/roam/the_zettelkasten_index_demands_the_contextualization_of_knowledge-Jun132021-185853.org" "/home/krisbalintona/Documents/org-database/roam/decontextualization_is_dangerous-Jun132021-185710.org" "/home/krisbalintona/Documents/org-database/roam/brownMakeItStick2014-make_it_stick_the_science_of_successful_learning-Jun122021-233751.org" "/home/krisbalintona/Documents/org-database/roam/always_pair_learning_with_its_application-Jun122021-225836.org" "/home/krisbalintona/Documents/org-database/roam/be_your_genuine_self-Jun122021-223149.org" "/home/krisbalintona/Documents/org-database/roam/surround_yourself_with_people_you_want_to_be_like-Jun122021-222951.org" "/home/krisbalintona/Documents/org-database/roam/quotes-Jun062021-185530.org" "/home/krisbalintona/Documents/org-database/roam/rels0120_paper_1-Jun062021-184410.org" "/home/krisbalintona/Documents/org-database/roam/personal_management_systems_should_be_structured_in_the_way_they_will_be_used-Jun052021-012402.org" "/home/krisbalintona/Documents/org-database/roam/you_lose_sight_of_the_end_when_you_focus_on_the_means-Jun052021-012236.org" "/home/krisbalintona/Documents/org-database/roam/the_benefits_of_practicing_zettelkasten_and_evergreen_notes_are_conflated_with_the_benefits_of_the_unique_traits_of_the_systems-Jun052021-012133.org" "/home/krisbalintona/Documents/org-database/roam/target_the_thought_generator_for_revolutionary_thought-Jun052021-012049.org" "/home/krisbalintona/Documents/org-database/roam/spaced_repetition_is_valuable_in_decision_heavy_personal_management_systems-Jun052021-011829.org" "/home/krisbalintona/Documents/org-database/roam/public_writing_heightens_the_stakes-Jun052021-011641.org" "/home/krisbalintona/Documents/org-database/roam/fiction_parallels_the_mistake_of_purely_rational_thinking-Jun052021-011149.org" "/home/krisbalintona/Documents/org-database/roam/jordan_peterson-Jun052021-010841.org" "/home/krisbalintona/Documents/org-database/roam/your_actions_will_perfectly_reflect_your_thoughts-Jun052021-010812.org" "/home/krisbalintona/Documents/org-database/roam/starting_is_the_most_important_part_to_accomplish-Jun052021-003949.org" "/home/krisbalintona/Documents/org-database/roam/an_inbox_should_be_processed_just_as_fast_as_it_is_filled-Jun052021-002919.org" "/home/krisbalintona/Documents/org-database/roam/sleep_is_a_natural_therapist-Jun052021-002631.org" "/home/krisbalintona/Documents/org-database/roam/humans_are_effective_at_knowledge_synthesis-Jun052021-002510.org" "/home/krisbalintona/Documents/org-database/roam/humans_have_insufficient_working_memory_for_knowledge_work-Jun052021-002435.org" "/home/krisbalintona/Documents/org-database/roam/temporal_separation_is_the_most_effective_knowledge_filter_for_relevance-Jun052021-002332.org" "/home/krisbalintona/Documents/org-database/roam/mocs_are_a_low_threshold_way_to_create_structure_in_a_pkm_zettelkasten-Jun052021-002229.org" "/home/krisbalintona/Documents/org-database/roam/modern_pkm_zettelkastens_require_much_more_note_processing_and_iteration-Jun052021-002127.org" "/home/krisbalintona/Documents/org-database/roam/modern_pkm_implementations_of_zettelkasten_should_be_different_from_luhmann_s-Jun052021-002005.org" "/home/krisbalintona/Documents/org-database/roam/incremental_writing_is_a_possible_solution_to_undirected_and_frequent_note_creation-Jun052021-001813.org" "/home/krisbalintona/Documents/org-database/roam/modern_technology_transcends_the_physical_zettelkasten_practice_and_constraints-Jun052021-001731.org" "/home/krisbalintona/Documents/org-database/roam/niklas_luhmann-Jun052021-000808.org" "/home/krisbalintona/Documents/org-database/roam/structure_isn_t_inherently_bad_in_pkm_systems_superimposed_structure_is-Jun052021-000726.org" "/home/krisbalintona/Documents/org-database/roam/your_zettelkasten_should_be_made_for_why_you_use_it-Jun052021-000107.org" "/home/krisbalintona/Documents/org-database/roam/beau_haan-Jun042021-235703.org" "/home/krisbalintona/Documents/org-database/roam/robert_haisfield-Jun042021-235648.org" "/home/krisbalintona/Documents/org-database/roam/sascha_fast-Jun042021-234347.org" "/home/krisbalintona/Documents/org-database/roam/christian_tietze-Jun042021-233714.org" "/home/krisbalintona/Documents/org-database/roam/humans_want_to_take_the_easy_route-Jun042021-233246.org" "/home/krisbalintona/Documents/org-database/roam/friction_is_resistance_to_habit_and_the_enemy_of_change-Jun042021-233123.org" "/home/krisbalintona/Documents/org-database/roam/utilize_friction_to_foster_ease_and_prevent_regression_of_personal_growth-Jun042021-233050.org" "/home/krisbalintona/Documents/org-database/roam/taxonomy_of_note_types-Jun042021-232939.org" "/home/krisbalintona/Documents/org-database/roam/andy_matuschak-Jun042021-231225.org" "/home/krisbalintona/Documents/org-database/roam/find_atomicity_by_violating_it-Jun042021-230809.org" "/home/krisbalintona/Documents/org-database/roam/sonke_ahrens-Jun042021-230701.org" "/home/krisbalintona/Documents/org-database/roam/niko_milo-Jun042021-230458.org" "/home/krisbalintona/Documents/org-database/roam/mocs_wrangle_notes_eclectically-Jun042021-230404.org" "/home/krisbalintona/Documents/org-database/roam/purpose_is_necessary_to_induce_alignment_and_achieve-Jun042021-230211.org" "/home/krisbalintona/Documents/org-database/roam/what_is_an_moc-Jun042021-225823.org" "/home/krisbalintona/Documents/org-database/roam/me-Jun042021-225522.org" "/home/krisbalintona/Documents/org-database/roam/create_an_moc_only_when_the_mass_of_information_is_too_large-Jun042021-224703.org" "/home/krisbalintona/Documents/org-database/roam/millerTellItSlant2019-tell_it_slant_third_edition_3rd_edition-Jun042021-223855.org" "/home/krisbalintona/Documents/org-database/roam/elizabeth_rush-Jun042021-223212.org" "/home/krisbalintona/Documents/org-database/roam/larson_di_fiori-Jun042021-222929.org" "/home/krisbalintona/Documents/org-database/roam/liPoetryDiplomacyZuozhuan2014-poetry_and_diplomacy_in_the_zuozhuan-Jun042021-220958.org" "/home/krisbalintona/Documents/org-database/roam/yaoIntroductionConfucianism2000-an_introduction_to_confucianism-Jun042021-215636.org" "/home/krisbalintona/Documents/org-database/roam/defoortThereSuchThing2001-is_there_such_a_thing_as_chinese_philosophy_arguments_of_an_implicit_debate-Jun042021-203813.org" "/home/krisbalintona/Documents/org-database/roam/protesilaos_stavrou-Jun042021-190041.org" "/home/krisbalintona/Documents/org-database/roam/journals/05-06-2021.org" "/home/krisbalintona/Documents/org-database/roam/transcript_protesilaos_stavrou-Jun152021-214137.org" "/home/krisbalintona/Documents/org-database/roam/phil0650-Jun192021-230443.org" "/home/krisbalintona/Documents/org-database/library/useful-emacs-resources.org" "/home/krisbalintona/Documents/org-database/library/transcript-drjinjing_lin.org" "/home/krisbalintona/Documents/org-database/library/system-wide-package-groups.org" "/home/krisbalintona/Documents/org-database/library/potential-clubs.org" "/home/krisbalintona/Documents/org-database/library/mindfulness-center-study.org" "/home/krisbalintona/Documents/org-database/library/interview-jingjing-lin.org" "/home/krisbalintona/Documents/org-database/library/doom-to-vanilla.org" "/home/krisbalintona/Documents/org-database/library/critical-reviews.org" "/home/krisbalintona/Documents/org-database/library/brown-interviews-meeting-notes.org" "/home/krisbalintona/Documents/org-database/library/brown-interviews-emails.org" "/home/krisbalintona/Documents/org-database/library/brown-interviews-application.org" "/home/krisbalintona/Documents/org-database/library/brown-campus-resources.org" "/home/krisbalintona/Documents/org-database/library/POBS0910-research-list.org" "/home/krisbalintona/main-emacs/elisp/checking-grammar-rcp.el" "/home/krisbalintona/main-emacs/elisp/completion-company-rcp.el" "/home/krisbalintona/Documents/org-database/roam/rels0120_paper_2-Jun152021-151653.org" "/home/krisbalintona/Documents/org-database/roam/eisenhower_method-Jun232021-164959.org" "/home/krisbalintona/Documents/org-database/roam/a_strong_filter_is_necessary_for_an_overwhelming_number_of_tasks-Jun232021-164913.org" "/home/krisbalintona/Documents/org-database/roam/why_amazing_marvin_is_one_of_a_kind-Jun172021-201735.org" "/home/krisbalintona/Documents/org-database/roam/engl0930_essay_1-Jun072021-235609.org" "/home/krisbalintona/Documents/org-database/latex/rels0120-paper_1.tex" "/home/krisbalintona/Documents/org-database/roam/bibliographic/master-lib.bib" "/home/krisbalintona/Documents/org-database/latex/rels0120-paper_1.pdf" "/home/krisbalintona/Documents/org-database/roam/job_applications-Jun182021-022743.org" "/home/krisbalintona/main-emacs/straight/repos/ace-jump-mode/ace-jump-mode.el" "/home/krisbalintona/.config/textlint/textlintrc.json" "/home/krisbalintona/Documents/org-database/roam/package.json" "/home/krisbalintona/Documents/org-database/roam/bui_interview_amazing_marvin_team-Jun192021-172835.org" "/tmp/languagetool-5.3/install.sh" "/home/krisbalintona/main-emacs/elisp/programming-general-rcp.el" "/home/krisbalintona/.config/textlint/" "/home/krisbalintona/main-emacs/configs/second-brain.org" "/home/krisbalintona/main-emacs/elisp/latex-general-rcp.el" "/home/krisbalintona/main-emacs/elisp/checking-spelling-rcp.el" "/home/krisbalintona/main-emacs/elisp/faces-rcp.el" "/tmp/mu4e-yBAFxc.html" "/home/krisbalintona/main-emacs/elisp/org-roam-general-rcp.el" "/home/krisbalintona/main-emacs/elisp/org-agenda-general-rcp.el" "/home/krisbalintona/main-emacs/straight/repos/org/lisp/org-id.el" "/home/krisbalintona/main-emacs/straight/repos/ace-link/ace-link.el" "/home/krisbalintona/main-emacs/elisp/themes-rcp.el" "/home/krisbalintona/main-emacs/configs/org-packages.org" "/home/krisbalintona/main-emacs/elisp/buffer-and-window-management-rcp.el" "/home/krisbalintona/main-emacs/elisp/convenient-functions-rcp.el" "/home/krisbalintona/main-emacs/elisp/completion-selectrum-rcp.el" "/home/krisbalintona/main-emacs/elisp/completion-ivy-rcp.el" "/home/krisbalintona/main-emacs/elisp/mu4e-rcp.el" "/home/krisbalintona/Music/BUI/Protesilaos Stavrou/edited_prot.docx" "/home/krisbalintona/dotfiles/awesomewm/.config/awesome/rc.lua" "/home/krisbalintona/main-emacs/straight/build/doom-snippts/org-mode/bui" "/home/krisbalintona/ghost/content/themes/personal/package.json" "/home/krisbalintona/main-emacs/snippets/org-mode/blog" "/home/krisbalintona/ghost/content/themes/personal/index.hbs" "/home/krisbalintona/ghost/versions/4.7.0/content/themes/casper/index.hbs" "/home/krisbalintona/ghost/versions/4.7.0/content/themes/casper/assets/css/global.css" "/home/krisbalintona/ghost/versions/4.7.0/content/themes/casper/assets/built/global.css.map" "/home/krisbalintona/ghost/versions/4.7.0/content/themes/casper/default.hbs" "/home/krisbalintona/Documents/roam/Feb242021-224035.org" "/home/krisbalintona/Documents/roam/Feb242021-223919.org" "/home/krisbalintona/Documents/roam/Apr192021-135406.org" "/home/krisbalintona/Documents/roam/Mar212021-234859.org" "/home/krisbalintona/Documents/roam/Apr192021-144603.org" "/home/krisbalintona/Documents/roam/Apr022021-232939.org" "/home/krisbalintona/Documents/roam/Feb242021-224156.org" "/home/krisbalintona/Documents/roam/Feb262021-213619.org" "/home/krisbalintona/Documents/roam/Feb242021-224420.org" "/home/krisbalintona/Documents/roam/Feb242021-224542.org" "/home/krisbalintona/Documents/roam/Feb242021-223754.org" "/home/krisbalintona/Documents/roam/Apr192021-144506.org" "/home/krisbalintona/Documents/org-database/latex/template-chicago_manual.tex" "/home/krisbalintona/Documents/roam/Nov302020-232025.org" "/home/krisbalintona/Documents/roam/Oct202020-232007.org" "/home/krisbalintona/Documents/roam/Nov302020-231618.org" "/home/krisbalintona/Documents/roam/Nov302020-230421.org" "/home/krisbalintona/Documents/roam/Nov302020-223130.org" "/home/krisbalintona/Documents/roam/Nov202020-132015.org" "/home/krisbalintona/Documents/roam/Dec032020-212009.org" "/home/krisbalintona/Documents/roam/Mar232021-152749.org" "/home/krisbalintona/Documents/org-database/latex/POBS0910-final-paper.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-midterm.tex" "/home/krisbalintona/Documents/org-database/latex/east0650-tannen_gendered_language.tex" "/usr/local/share/emacs/28.0.50/etc/HELLO" "/home/krisbalintona/main-emacs/elisp/checking-words-rcp.el" "/home/krisbalintona/main-emacs/configs/file-and-directory-nav.org" "/usr/local/share/emacs/28.0.50/lisp/org/ox-html.el.gz" "/home/krisbalintona/dotfiles/qmk/qmk_firmware/keyboards/kbdfans/kbd4x/keymaps/my-programmed-keymap/keymap.c" "/etc/X11/xorg.conf.d/00-keyboard.conf" "/home/krisbalintona/main-emacs/configs/etc-config.org" "/home/krisbalintona/main-emacs/data/abbrev.el" "/home/krisbalintona/main-emacs/init.el" "/home/krisbalintona/main-emacs/straight/repos/doom-modeline/doom-modeline-segments.el" "/home/krisbalintona/main-emacs/straight/repos/magit/lisp/magit.el" "/home/krisbalintona/main-emacs/elisp/iscroll.el" "/home/krisbalintona/main-emacs/default-package-management-rcp.el" "/home/krisbalintona/main-emacs/elisp/completion-helm-rcp.el" "/home/krisbalintona/Documents/org-database/library/writing_ideas.org" "/home/krisbalintona/main-emacs/elisp/org-roam-other-rcp.el" "/home/krisbalintona/Documents/Zotero/storage/PXF8AW6S/Yao_2000_An introduction to Confucianism.pdf" "/home/krisbalintona/main-emacs/elisp/org-agenda-views-rcp.el" "/home/krisbalintona/main-emacs/elisp/org-agenda-other-rcp.el" "/home/krisbalintona/main-emacs/elisp/latex-pdf-rcp.el" "/home/krisbalintona/Documents/org-database/latex/east0650-gender_differences_convo_analysis.tex" "/home/krisbalintona/dotfiles/misc/.latexmkrc" "/home/krisbalintona/Documents/org-database/latex/east0650-final_code_switching.tex" "/home/krisbalintona/main-emacs/.gitignore" "/home/krisbalintona/main-emacs/elisp/programming-elisp-rcp.el" "/home/krisbalintona/main-emacs/elisp/programming-lua-rcp.el" "/usr/share/emacs/28.0.50/lisp/loaddefs.el" "/home/krisbalintona/main-emacs/elisp/shell-eshell-rcp.el" "/home/krisbalintona/main-emacs/elisp/better-defaults-rcp.el" "/home/krisbalintona/main-emacs/elisp/early-packages-rcp.el" "/home/krisbalintona/.notes" "/home/krisbalintona/Documents/org-database/latex/example-cms.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-kant_critique_of_reason.tex" "/home/krisbalintona/Documents/org-database/latex/template-mla.tex" "/home/krisbalintona/Documents/Universe/.obsidian/snippets/personal.css" "/home/krisbalintona/Documents/Universe/.obsidian/themes/Ayu Mirage.css" "/home/krisbalintona/Documents/Universe/.obsidian/snippets/Obsidian-Graphite-Coast.css" "/home/krisbalintona/Documents/Universe/.obsidian/plugins/obsidian-outliner/styles.css" "/home/krisbalintona/Documents/Universe/.obsidian/snippets/academix.css" "/home/krisbalintona/Documents/Universe/.obsidian/snippets/red-coast.css" "/home/krisbalintona/Documents/Universe/.obsidian/themes/atom-nowy.css" "/home/krisbalintona/Documents/Universe/.obsidian/themes/Atom.css" "/home/krisbalintona/Documents/Universe/.obsidian/themes/Obsidian-Graphite-Coast.css" "/home/krisbalintona/Documents/Universe/.obsidian/themes/Dracula for Obsidian.css" "/home/krisbalintona/Documents/org-database/library/interview-RCWaldun.org" "/home/krisbalintona/dotfiles/xorg/.xprofile" "/home/krisbalintona/Repos/spaced-inbox/inbox_files.txt" "/home/krisbalintona/Repos/spaced-inbox/smooth.sh" "/home/krisbalintona/Repos/spaced-inbox/script.py" "/home/krisbalintona/Documents/org-database/latex/phil0650-midterm-hedonism_and_happiness.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-hume_on_causal_inference.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-descartes_mind_and_body.tex" "/home/krisbalintona/Documents/org-database/latex/phil0360-locke_on_innate_ideas.tex" "/home/krisbalintona/Documents/org-database/latex/POBS0910-niccolo-machiavelli.tex" "/home/krisbalintona/dotfiles/email/.mbsyncrc" "/home/krisbalintona/dotfiles/email/.msmtprc" "/home/krisbalintona/Documents/Emails/Queue/cur/2021-03-06_00:57:41_1" "/home/krisbalintona/Documents/Zotero/storage/YZQA9MI5/Lindberg - 2007 - The beginnings of western science the European sc.pdf" "/home/krisbalintona/main-emacs/configs/org-packages.el" "/home/krisbalintona/main-emacs/straight/repos/doom-modeline/doom-modeline.el" "/home/krisbalintona/vanilla-emacs/config.org" "/home/krisbalintona/dotfiles/zsh/zsh/.zshrc" "/etc/btrbk/btrbk-easystore.conf" "/etc/asusd/asusd.conf" "/home/krisbalintona/.config/redshift/redshift.conf" "/home/krisbalintona/dotfiles/rofi/.config/rofi/themes/dt-center.rasi" "/home/krisbalintona/dotfiles/rofi/.config/rofi/themes/askpass.rasi" "/home/krisbalintona/dotfiles/scripts/Scripts/internal-keyboard-toggle.sh" "/home/krisbalintona/dotfiles/scripts/Scripts/lsusb-check.sh" "/etc/auto.misc" "/etc/autofs.conf" "/etc/fstab" "/home/krisbalintona/dotfiles/scripts/Scripts/battery-notifications.sh" "/home/krisbalintona/dotfiles/xorg/.xinitrc" "/etc/gdm/custom.conf" "/home/krisbalintona/.config/emptty" "/home/krisbalintona/dotfiles/scripts/Scripts/rofi-mount.sh" "/home/krisbalintona/dotfiles/scripts/Scripts/rofi-pass.sh" "/etc/default/grub" "/home/krisbalintona/dotfiles/rofi/.config/rofi/config.rasi" "/home/krisbalintona/dotfiles/scripts/Scripts/rofi-umount.sh" "/home/krisbalintona/dotfiles/rofi/.config/rofi/themes/mpd.rasi" "/home/krisbalintona/main-emacs/elisp/shell-vterm-rcp.el" "/home/krisbalintona/Scripts/internal-keyboard-toggle.sh" "/home/krisbalintona/.config/mimeapps.list" "/etc/systemd/swap.conf" "/home/krisbalintona/Documents/Zotero/storage/KQJ7V7H5/Rickford and King - 2016 - Language and linguistics on trial Hearing Rachel .pdf" "/home/krisbalintona/main-emacs/elisp/use-package-rcp.el" "/home/krisbalintona/main-emacs/elisp/straight-package-management-rcp.el" "/home/krisbalintona/main-emacs/elisp/undoing-rcp.el" "/usr/share/emacs/site-lisp/mu4e/mu4e-view.el" "/home/krisbalintona/main-emacs/elisp/custom-directories-rcp.el" "/home/krisbalintona/main-emacs/elisp/evil-rcp.el" "/home/krisbalintona/dotfiles/.gitignore" "/home/krisbalintona/dotfiles/misc/.config/mimeapps.list" "/home/krisbalintona/dotfiles/zsh/zsh/.zsh_history" "/home/krisbalintona/zsh/.zsh_history" "/home/krisbalintona/zsh/.zcompdump" "/home/krisbalintona/.msmtprc" "/home/krisbalintona/.emacs-profiles.el" "/home/krisbalintona/.z" "/home/krisbalintona/dotfiles/zsh/.zshenv" "/home/krisbalintona/.authinfo" "/home/krisbalintona/.config/rofi/config.rasi" "/home/krisbalintona/dotfiles/i3/.config/i3/config" "/home/krisbalintona/.config/awesome/themes/powerarrow-dark/theme.lua" "/home/krisbalintona/.mbsyncrc" "/home/krisbalintona/main-emacs/straight/repos/embark/embark.el" "/home/krisbalintona/main-emacs/straight/repos/org-msg/org-msg.el" "/usr/share/emacs/site-lisp/mu4e/mu4e-org.el" "/usr/share/emacs/site-lisp/mu4e/org-mu4e.el" "/home/krisbalintona/main-emacs/history" "/home/krisbalintona/main-emacs/elisp/system-variables-rcp.el" "/home/krisbalintona/main-emacs/elisp/programming-profiling-and-debug-rcp.el" "/home/krisbalintona/main-emacs/elisp/keybinds-frameworks-rcp.el" "/home/krisbalintona/main-emacs/elisp/completion-general-rcp.el" "/home/krisbalintona/main-emacs/elisp/auto-gc-rcp.el" "/home/krisbalintona/main-emacs/straight/repos/elegant-agenda-mode/elegant-agenda-mode.el" "/home/krisbalintona/main-emacs/configs/qol-packages.el" "/home/krisbalintona/dotfiles/i3/.local/bin/other/toggle_half_cores.sh" "/home/krisbalintona/.config/rofi/themes/dt-center.rasi" "/home/krisbalintona/dotfiles/zsh/zsh/starship.toml" "/home/krisbalintona/.config/rofi/config" "/home/krisbalintona/.config/rofi/themes/dt-dmenu.rasi" "/home/krisbalintona/dotfiles/picom/.config/picom.conf" "/home/krisbalintona/dotfiles/awesomewm/.config/awesome/rc-old.lua" "/home/krisbalintona/main-emacs/elisp/company-org-block.el" "/home/krisbalintona/main-emacs/straight/repos/org-roam-server/org-roam-server.el" "/home/krisbalintona/main-emacs/straight/repos/org/lisp/org-protocol.el" "/home/krisbalintona/main-emacs/straight/repos/org/lisp/ox-latex.el" "/home/krisbalintona/main-emacs/straight/repos/org/lisp/org-refile.el" "/home/krisbalintona/dotfiles/kitty/.config/kitty/kitty.conf" "/home/krisbalintona/.config/awesome/rc.lua"))
