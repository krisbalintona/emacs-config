;; -*- coding: utf-8; lexical-binding: t -*-
(define-abbrev-table 'emacs-lisp-mode-abbrev-table
  '(
    ("Disregad" "Disregard" nil :count 0)
    ("Emptry" "Empty" nil :count 0)
    ("Otheriwse" "Otherwise" nil :count 0)
    ("Swicth" "Switch" nil :count 0)
    ("Timesttamps" "Timestamps" nil :count 0)
    ("appropraite" "appropriate" nil :count 0)
    ("becareful" "be careful" nil :count 0)
    ("behavioe" "behavior" nil :count 0)
    ("chnages" "changes" nil :count 0)
    ("compatability" "compatibility" nil :count 0)
    ("dupliccates" "duplicates" nil :count 0)
    ("ellilpsis" "ellipsis" nil :count 0)
    ("exhaustve" "exhaustive" nil :count 0)
    ("grammers" "grammars" nil :count 0)
    ("headling" "heading" nil :count 1)
    ("inheritted" "inherited" nil :count 0)
    ("innaccessible" "inaccessible" nil :count 0)
    ("internall" "internally" nil :count 0)
    ("laoded" "loaded" nil :count 0)
    ("ommitted" "omitted" nil :count 0)
    ("parameer" "parameter" nil :count 0)
    ("properites" "properties" nil :count 0)
    ("resuls" "results" nil :count 0)
    ("tempaltes" "templates" nil :count 0)
    ("unconditionnally" "unconditionally" nil :count 0)
   ))

(define-abbrev-table 'log-edit-mode-abbrev-table
  '(
    ("Defne" "Define" nil :count 0)
    ("Erroroneous" "Erroneous" nil :count 0)
    ("Insstall" "Install" nil :count 0)
    ("enancements" "enhancements" nil :count 0)
    ("obscelete" "obsolete" nil :count 0)
    ("obscoleting" "obsoleting" nil :count 0)
    ("ommitted" "omitted" nil :count 0)
   ))

(define-abbrev-table 'markdown-mode-abbrev-table
  '(
    ("adminstration" "administration" nil :count 0)
    ("automic" "automatic" nil :count 0)
    ("commiting" "committing" nil :count 0)
    ("mayer" "mayor" nil :count 0)
    ("mneumonic" "mnemonic" nil :count 0)
    ("traffick" "traffic" nil :count 0)
    ("traumatizedand" "traumatized" nil :count 0)
   ))

(define-abbrev-table 'notmuch-message-mode-abbrev-table
  '(
    ("Additionaly" "Additionally" nil :count 0)
    ("apolgoize" "apologize" nil :count 0)
    ("dispay" "display" nil :count 0)
    ("establshing" "establishing" nil :count 0)
    ("exhausive" "exhaustive" nil :count 0)
    ("hygenic" "hygienic" nil :count 0)
    ("meantioned" "mentioned" nil :count 0)
    ("noticable" "noticeable" nil :count 0)
    ("obscolete" "obsolete" nil :count 0)
    ("opporutnity" "opportunity" nil :count 0)
    ("partcipate" "participate" nil :count 0)
    ("possibilties" "possibilities" nil :count 0)
    ("propogation" "propagation" nil :count 0)
    ("runnin" "running" nil :count 0)
    ("speficiation" "specification" nil :count 0)
    ("sufficies" "suffices" nil :count 0)
   ))

(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("ANdoird-specific" "Android-specific" nil :count 0)
    ("Boredem" "Boredom" nil :count 0)
    ("Likewisefor" "Likewise for" nil :count 0)
    ("Metaphyscs" "Metaphysics" nil :count 0)
    ("PlayStore" "Play Store" nil :count 0)
    ("Refernces" "References" nil :count 0)
    ("THe" "The" nil :count 0)
    ("Targetted" "Targeted" nil :count 0)
    ("Wishlist" "Wish list" nil :count 0)
    ("Zetelkasten" "Zettelkasten" nil :count 0)
    ("abnoxiously" "obnoxiously" nil :count 0)
    ("algorithmicly" "algorithmic" nil :count 0)
    ("appearnce" "appearance" nil :count 0)
    ("assertability" "assertibility" nil :count 0)
    ("backround" "background" nil :count 0)
    ("backstepping" "back-stepping" nil :count 0)
    ("balanaces" "balances" nil :count 0)
    ("beginniner" "beginner" nil :count 0)
    ("bellieve" "believe" nil :count 0)
    ("bufferfly" "butterfly" nil :count 0)
    ("buildling" "building" nil :count 0)
    ("characteres" "characters" nil :count 0)
    ("cleaniness" "cleanliness" nil :count 0)
    ("compatabiity" "compatibility" nil :count 0)
    ("conscsiousness" "consciousness" nil :count 0)
    ("conveniencec" "convenience" nil :count 0)
    ("countour" "contour" nil :count 0)
    ("dangeous" "dangerous" nil :count 0)
    ("dediccatoin" "dedication" nil :count 0)
    ("descendent" "descendant" nil :count 0)
    ("deveopment" "development" nil :count 0)
    ("differneitation" "differentiation" nil :count 0)
    ("discoverd" "discovered" nil :count 0)
    ("edicice" "edifice" nil :count 0)
    ("enchancing" "enhancing" nil :count 0)
    ("encounterd" "encountered" nil :count 0)
    ("everthing" "everything" nil :count 0)
    ("expsnive" "expensive" nil :count 0)
    ("fhe" "the" nil :count 0)
    ("filesystem" "file-system" nil :count 0)
    ("forumla" "formula" nil :count 0)
    ("framentation" "fragmentation" nil :count 0)
    ("functionialities" "functionalities" nil :count 0)
    ("fundamnetally" "fundamentally" nil :count 0)
    ("guillitine" "guillotine" nil :count 0)
    ("guillitines" "guillotines" nil :count 0)
    ("happend" "happened" nil :count 0)
    ("himsefl" "himself" nil :count 0)
    ("hoome" "home" nil :count 0)
    ("importnat" "important" nil :count 0)
    ("incease" "increase" nil :count 0)
    ("indispensible" "indispensable" nil :count 0)
    ("indistinguishavle" "indistinguishable" nil :count 0)
    ("inviible" "invisible" nil :count 0)
    ("kidns" "kinds" nil :count 0)
    ("labelled" "labeled" nil :count 0)
    ("lablled" "labeled" nil :count 0)
    ("llmight" "might" nil :count 0)
    ("machinary" "machinery" nil :count 0)
    ("maintanence" "maintenance" nil :count 0)
    ("manufactor" "manufacture" nil :count 0)
    ("mentioend" "mentioned" nil :count 0)
    ("metaphyics" "metaphysics" nil :count 0)
    ("minimalistic" "minimalist" nil :count 0)
    ("modifer" "modifier" nil :count 0)
    ("musr" "must" nil :count 0)
    ("noticably" "noticeably" nil :count 0)
    ("oponents" "opponents" nil :count 0)
    ("orginary" "ordinary" nil :count 0)
    ("overriden" "overridden" nil :count 0)
    ("pereson" "person" nil :count 0)
    ("philosphers" "philosophers" nil :count 0)
    ("positon" "position" nil :count 0)
    ("possibiities" "possibilities" nil :count 0)
    ("possibiltiies" "possibilities" nil :count 0)
    ("prepatory" "preparatory" nil :count 0)
    ("prescence" "presence" nil :count 1)
    ("prioriteis" "priorities" nil :count 0)
    ("probaby" "probably" nil :count 0)
    ("projcect" "project" nil :count 0)
    ("proofound" "profound" nil :count 0)
    ("rachet" "ratchet" nil :count 0)
    ("recuring" "recurring" nil :count 0)
    ("reflecions" "reflections" nil :count 0)
    ("repalce" "replace" nil :count 0)
    ("repetitiotns" "repetitions" nil :count 0)
    ("reseting" "resetting" nil :count 0)
    ("sandox" "sandbox" nil :count 0)
    ("sems" "seems" nil :count 0)
    ("sharepn" "sharpen" nil :count 0)
    ("sharpenning" "sharpening" nil :count 0)
    ("solidifed" "solidified" nil :count 0)
    ("spreedshteet" "spreadsheet" nil :count 0)
    ("stablized" "stabilized" nil :count 0)
    ("subltely" "subtly" nil :count 0)
    ("supercede" "supersede" nil :count 0)
    ("symption" "symptom" nil :count 0)
    ("syption" "symption" nil :count 0)
    ("systemazing" "systematizing" nil :count 0)
    ("tabulaed" "tabulated" nil :count 0)
    ("theirâ€™s" "theirs" nil :count 0)
    ("thsi" "this" nil :count 0)
    ("unpleasnat" "unpleasant" nil :count 0)
    ("unsecure" "unsecured" nil :count 0)
    ("utlize" "utilize" nil :count 0)
    ("verus" "versus" nil :count 0)
    ("wrtite" "write" nil :count 0)
    ("yourhips" "your hips" nil :count 0)
   ))

(define-abbrev-table 'scheme-mode-abbrev-table
  '(
    ("preferrable" "preferable" nil :count 0)
   ))

(define-abbrev-table 'sh-mode-abbrev-table
  '(
    ("Bootstrappping" "Bootstrapping" nil :count 0)
    ("structire" "structure" nil :count 0)
   ))

