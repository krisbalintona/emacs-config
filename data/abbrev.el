;;-*-coding: utf-8;-*-
(define-abbrev-table 'c-mode-abbrev-table
  '(
    ("dont" "don't" nil :count 0)
    ("tograph" "toGraph" nil :count 0)
    ("univisted" "unvisited" nil :count 0)
   ))

(define-abbrev-table 'conf-toml-mode-abbrev-table
  '(
    ("claify" "clarify" nil :count 0)
   ))

(define-abbrev-table 'conf-unix-mode-abbrev-table
  '(
    ("preferrable" "preferable" nil :count 0)
    ("preferrably" "Preferably" nil :count 0)
   ))

(define-abbrev-table 'emacs-lisp-mode-abbrev-table
  '(
    ("accomdate" "Accommodate" nil :count 0)
    ("accomodate" "accommodate" nil :count 0)
    ("aguments" "arguments" nil :count 0)
    ("ahve" "have" nil :count 0)
    ("alternaive" "Alternative" nil :count 0)
    ("ameiorate" "ameliorate" nil :count 0)
    ("annnoying" "Annoying" nil :count 0)
    ("apear" "appear" nil :count 0)
    ("appropreiate" "appropriate" nil :count 0)
    ("appropriatey" "appropriately" nil :count 0)
    ("argumnets" "arguments" nil :count 0)
    ("autopairing" "Auto pairing" nil :count 0)
    ("beginnning" "beginning" nil :count 0)
    ("betweel" "between" nil :count 0)
    ("bild" "build" nil :count 0)
    ("bottlencks" "bottlenecks" nil :count 0)
    ("bse" "base" nil :count 0)
    ("btween" "between" nil :count 0)
    ("builtins" "built-ins" nil :count 0)
    ("captial" "capital" nil :count 0)
    ("clilpboard" "clipboard" nil :count 0)
    ("comands" "commands" nil :count 0)
    ("commmands" "commands" nil :count 0)
    ("compatiblility" "compatibility" nil :count 0)
    ("compeltions" "completions" nil :count 0)
    ("compil" "compile" nil :count 0)
    ("compltion" "completion" nil :count 1)
    ("configuratoin" "configuration" nil :count 0)
    ("confirugations" "configurations" nil :count 0)
    ("coresponding" "corresponding" nil :count 0)
    ("corresonding" "corresponding" nil :count 0)
    ("corresped" "correspond" nil :count 0)
    ("curren" "current" nil :count 2)
    ("currenty" "currently" nil :count 0)
    ("defualt" "default" nil :count 0)
    ("delimeter" "delimiter" nil :count 0)
    ("dependsn" "depends" nil :count 0)
    ("depneds" "depends" nil :count 0)
    ("desciption" "description" nil :count 0)
    ("destinatation" "destination" nil :count 0)
    ("devlve" "delve" nil :count 0)
    ("diaagnose" "diagnose" nil :count 0)
    ("dictoinary" "dictionary" nil :count 2)
    ("diffeences" "differences" nil :count 0)
    ("directiry" "directory" nil :count 0)
    ("doens't" "doesn't" nil :count 0)
    ("eact" "act" nil :count 0)
    ("ego" "Ego" nil :count 0)
    ("elliipsis" "ellipsis" nil :count 0)
    ("environemtn" "environment" nil :count 0)
    ("epub" "EPub" nil :count 0)
    ("erros" "errors" nil :count 0)
    ("ese" "else" nil :count 0)
    ("evaulated" "evaluated" nil :count 0)
    ("everythin" "Everything" nil :count 0)
    ("evi" "evil" nil :count 5)
    ("famlies" "families" nil :count 0)
    ("farme" "frame" nil :count 0)
    ("fasster" "faster" nil :count 0)
    ("firends" "friends" nil :count 0)
    ("follwing" "following" nil :count 0)
    ("framkework" "framework" nil :count 0)
    ("funcaiontliy" "functionality" nil :count 0)
    ("github" "GitHub" nil :count 7)
    ("gropup" "Group" nil :count 0)
    ("heirarchy" "hierarchy" nil :count 0)
    ("horizonally" "horizontally" nil :count 0)
    ("html" "HTML" nil :count 3)
    ("hundle" "bundle" nil :count 0)
    ("i'm" "I'm" nil :count 0)
    ("inboxs" "inboxes" nil :count 0)
    ("indentatino" "indentation" nil :count 0)
    ("informaion" "information" nil :count 0)
    ("infrastrcture" "infrastructure" nil :count 0)
    ("iniital" "initial" nil :count 0)
    ("inserations" "insertions" nil :count 0)
    ("instlled" "installed" nil :count 0)
    ("intalled" "installed" nil :count 0)
    ("interessting" "interesting" nil :count 0)
    ("isnstalled" "installed" nil :count 0)
    ("janruary" "January" nil :count 0)
    ("jiterry" "jittery" nil :count 0)
    ("keybad" "keypad" nil :count 0)
    ("keybidns" "keybinds" nil :count 0)
    ("labelled" "labeled" nil :count 0)
    ("languge" "language" nil :count 0)
    ("linux" "Linux" nil :count 0)
    ("literrin" "littering" nil :count 0)
    ("maatch" "match" nil :count 0)
    ("maintianer" "maintainer" nil :count 0)
    ("modifed" "Modified" nil :count 0)
    ("modifiedd" "modified" nil :count 0)
    ("modifiying" "modifying" nil :count 0)
    ("moditifaction" "modification" nil :count 0)
    ("mov" "Move" nil :count 0)
    ("multiline" "multi-line" nil :count 0)
    ("myyself" "myself" nil :count 0)
    ("navigatoin" "navigation" nil :count 0)
    ("necesary" "necessary" nil :count 0)
    ("numbfer" "number" nil :count 0)
    ("oad" "load" nil :count 0)
    ("occassoinally" "Occasionally" nil :count 0)
    ("ommitted" "omitted" nil :count 0)
    ("onlly" "only" nil :count 0)
    ("opotunity" "opportunity" nil :count 0)
    ("otheriwse" "otherwise" nil :count 0)
    ("overriden" "overridden" nil :count 1)
    ("packges" "packages" nil :count 0)
    ("paragaph" "paragraph" nil :count 0)
    ("paramter" "parameter" nil :count 0)
    ("peresonal" "personal" nil :count 0)
    ("piont" "point" nil :count 1)
    ("plocate" "locate" nil :count 0)
    ("poluting" "polluting" nil :count 0)
    ("posst" "post" nil :count 0)
    ("postive" "positive" nil :count 0)
    ("poup" "popup" nil :count 0)
    ("preferrable" "preferable" nil :count 0)
    ("preservee" "preserve" nil :count 0)
    ("preseve" "Preserve" nil :count 0)
    ("proccess" "process" nil :count 0)
    ("processs" "processes" nil :count 0)
    ("procusses" "Processes" nil :count 0)
    ("quiry" "Query" nil :count 0)
    ("qutation" "quotation" nil :count 0)
    ("reaosn" "reason" nil :count 0)
    ("recommanded" "recommended" nil :count 0)
    ("refernces" "references" nil :count 0)
    ("reocate" "Relocate" nil :count 0)
    ("requries" "requires" nil :count 0)
    ("resure" "Reuse" nil :count 0)
    ("scoll" "scroll" nil :count 0)
    ("secons" "second" nil :count 0)
    ("sentene" "sentence" nil :count 0)
    ("sessiosn" "sessions" nil :count 0)
    ("shwn" "show" nil :count 0)
    ("simialr" "Similar" nil :count 0)
    ("slighly" "slightly" nil :count 0)
    ("spae" "space" nil :count 0)
    ("specofically" "specifically" nil :count 0)
    ("subtlely" "Subtly" nil :count 0)
    ("sucessful" "successful" nil :count 0)
    ("sunbscripts" "subscripts" nil :count 0)
    ("suppoert" "support" nil :count 0)
    ("swaped" "Swapped" nil :count 0)
    ("taht" "that" nil :count 0)
    ("templtes" "templates" nil :count 0)
    ("threshiold" "Threshold" nil :count 0)
    ("traisent" "transient" nil :count 0)
    ("translateions" "translations" nil :count 0)
    ("undu" "undo" nil :count 0)
    ("unempaired" "unimpaired" nil :count 0)
    ("unfoled" "unfolded" nil :count 0)
    ("unintrusive" "unobtrusive" nil :count 0)
    ("univeral" "universal" nil :count 2)
    ("univesal" "universal" nil :count 0)
    ("uuid" "UUID" nil :count 1)
    ("wihin" "within" nil :count 0)
   ))

(define-abbrev-table 'java-mode-abbrev-table
  '(
    ("hrd" "hard" nil :count 0)
   ))

(define-abbrev-table 'js2-mode-abbrev-table
  '(
    ("lastest" "latest" nil :count 0)
    ("versino" "version" nil :count 0)
   ))

(define-abbrev-table 'latex-mode-abbrev-table
  '(
    ("butterfies" "Butterflies" nil :count 0)
    ("certaintly" "certainly" nil :count 0)
    ("condtional" "conditional" nil :count 0)
    ("decidabble" "decidable" nil :count 0)
    ("dedduced" "deduced" nil :count 0)
    ("distjunction" "disjunction" nil :count 0)
    ("embodyment" "embodiment" nil :count 0)
    ("encompases" "encompasses" nil :count 0)
    ("equivaelnce" "equivalence" nil :count 0)
    ("equivalentence" "equivalence" nil :count 0)
    ("equiveltn" "equivalent" nil :count 0)
    ("equivlanet" "equivalent" nil :count 0)
    ("falsse" "false" nil :count 0)
    ("howwever" "However" nil :count 0)
    ("impossile" "impossible" nil :count 0)
    ("intutive" "Intuitive" nil :count 0)
    ("quantier" "quantifier" nil :count 0)
    ("schemta" "schemata" nil :count 0)
    ("sectoin" "Section" nil :count 0)
    ("seemlessly" "seamlessly" nil :count 0)
    ("siilarly" "Similarly" nil :count 0)
    ("sustituted" "substituted" nil :count 0)
    ("thoes" "those" nil :count 0)
    ("transcendtal" "Transcendental" nil :count 0)
    ("turtoise" "tortoise" nil :count 1)
    ("uncommpatible" "Incompatible" nil :count 0)
    ("varaibles" "variables" nil :count 0)
   ))

(define-abbrev-table 'ledger-mode-abbrev-table
  '(
    ("fradulence" "fraudulence" nil :count 0)
   ))

(define-abbrev-table 'lua-mode-abbrev-table
  '(
    ("colours" "colors" nil :count 0)
    ("targetting" "targeting" nil :count 0)
   ))

(define-abbrev-table 'markdown-mode-abbrev-table
  '(
    ("purposively" "purposeful" nil :count 0)
    ("reflecctions" "reflections" nil :count 0)
   ))

(define-abbrev-table 'notmuch-message-mode-abbrev-table
  '(
    ("mintues" "minutes" nil :count 0)
   ))

(define-abbrev-table 'nxml-mode-abbrev-table
  '(
    ("fireox" "Firefox" nil :count 0)
   ))

(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("aaddressed" "addressed" nil :count 0)
    ("aalyiah" "Aaliyah" nil :count 0)
    ("aand" "and" nil :count 1)
    ("aat" "at" nil :count 0)
    ("abaonded" "abandoned" nil :count 1)
    ("abaondon" "abandon" nil :count 0)
    ("abaondoning" "abandoning" nil :count 0)
    ("abilties" "abilities" nil :count 0)
    ("abitrary" "arbitrary" nil :count 0)
    ("aboe" "above" nil :count 1)
    ("aboout" "about" nil :count 1)
    ("aboslute" "absolute" nil :count 0)
    ("abotu" "about" nil :count 2)
    ("abou" "about" nil :count 8)
    ("abraod" "Abroad" nil :count 0)
    ("absoltue" "absolute" nil :count 0)
    ("absract" "Abstract" nil :count 0)
    ("abssolutely" "absolutely" nil :count 0)
    ("abstact" "Abstract" nil :count 0)
    ("abstacted" "abstracted" nil :count 0)
    ("abstacting" "abstracting" nil :count 0)
    ("abstracct" "abstract" nil :count 0)
    ("abstraedcted" "abstracted" nil :count 0)
    ("abstratc" "Abstract" nil :count 0)
    ("abstrct" "abstract" nil :count 0)
    ("absudity" "absurdity" nil :count 1)
    ("absurde" "absurder" nil :count 2)
    ("absuredly" "absurdly" nil :count 0)
    ("absuridt" "Absurdity" nil :count 0)
    ("abundancy" "abundance" nil :count 0)
    ("abundandly" "abundantly" nil :count 0)
    ("abusrd" "absurd" nil :count 1)
    ("acadecmis" "academics" nil :count 0)
    ("academi" "academia" nil :count 0)
    ("acccurately" "accurately" nil :count 0)
    ("acceptanceof" "acceptance of" nil :count 0)
    ("acceptigg" "Accepting" nil :count 0)
    ("accesssibility" "accessibility" nil :count 0)
    ("accmompanied" "accompanied" nil :count 0)
    ("accmplished" "accomplished" nil :count 0)
    ("accolates" "accolades" nil :count 0)
    ("accomadate" "accommodate" nil :count 0)
    ("accomlished" "accomplished" nil :count 0)
    ("accomodate" "accommodate" nil :count 6)
    ("accomodating" "accommodating" nil :count 0)
    ("accompained" "accompanied" nil :count 0)
    ("accompalied" "accompanied" nil :count 0)
    ("accomplidh" "accomplish" nil :count 0)
    ("accompnies" "accompanies" nil :count 0)
    ("accordian" "accordion" nil :count 0)
    ("accordintly" "Accordingly" nil :count 1)
    ("accordnce" "accordance" nil :count 0)
    ("accoring" "according" nil :count 0)
    ("accountablel" "accountable" nil :count 0)
    ("accpet" "accept" nil :count 0)
    ("accpeting" "accepting" nil :count 0)
    ("accross" "across" nil :count 0)
    ("accss" "access" nil :count 0)
    ("acction" "Action" nil :count 1)
    ("accululates" "accumulates" nil :count 0)
    ("acent" "Ascent" nil :count 0)
    ("acheiving" "achieving" nil :count 1)
    ("achievd" "achieved" nil :count 0)
    ("achivee" "achieve" nil :count 0)
    ("achiveing" "Achieving" nil :count 0)
    ("aciton" "action" nil :count 0)
    ("acivist" "activist" nil :count 0)
    ("acklowledging" "acknowledging" nil :count 0)
    ("acocunt" "account" nil :count 0)
    ("acount" "account" nil :count 0)
    ("acquaintence" "Acquaintance" nil :count 0)
    ("acquantance" "Acquaintance" nil :count 0)
    ("acquiantance" "acquaintance" nil :count 1)
    ("acress" "across" nil :count 0)
    ("acros" "Across" nil :count 0)
    ("actigin" "acting" nil :count 0)
    ("actino" "action" nil :count 0)
    ("actiond" "actions" nil :count 0)
    ("activistm" "activism" nil :count 1)
    ("activites" "activities" nil :count 0)
    ("activitiy" "activity" nil :count 1)
    ("actof" "act of" nil :count 0)
    ("actuallly" "actually" nil :count 1)
    ("actuallys" "actually" nil :count 0)
    ("actualy" "actually" nil :count 1)
    ("actued" "acted" nil :count 0)
    ("actulaly" "actually" nil :count 0)
    ("acuiring" "acquiring" nil :count 0)
    ("acutally" "actually" nil :count 0)
    ("acutlaly" "actually" nil :count 0)
    ("adapatation" "Adaptation" nil :count 0)
    ("adddress" "address" nil :count 0)
    ("additioally" "Additionally" nil :count 0)
    ("additionaly" "additionally" nil :count 0)
    ("additioon" "addition" nil :count 0)
    ("additonally" "Additionally" nil :count 0)
    ("addon" "add-on" nil :count 0)
    ("addreess" "address" nil :count 0)
    ("adherece" "adherence" nil :count 0)
    ("adhereing" "adhering" nil :count 0)
    ("adivce" "Advice" nil :count 0)
    ("adivec" "advice" nil :count 0)
    ("adjcadent" "adjacent" nil :count 0)
    ("administative" "administrative" nil :count 0)
    ("adminstrative" "administrative" nil :count 0)
    ("admisnistered" "administered" nil :count 0)
    ("admiting" "admitting" nil :count 0)
    ("adolesnce" "adolescence" nil :count 0)
    ("adquate" "adequate" nil :count 0)
    ("adressee" "addressee" nil :count 0)
    ("adueince" "audience" nil :count 0)
    ("advanturer" "adventurer" nil :count 0)
    ("adversaires" "adversaries" nil :count 0)
    ("advicate" "advocate" nil :count 0)
    ("advisng" "advising" nil :count 0)
    ("advisr" "adviser" nil :count 0)
    ("advnacing" "advancing" nil :count 0)
    ("aeesthetic" "aesthetic" nil :count 0)
    ("aer" "are" nil :count 6)
    ("aerage" "average" nil :count 0)
    ("aermenians" "Armenians" nil :count 0)
    ("aerson" "person" nil :count 0)
    ("aesthatic" "aesthetic" nil :count 0)
    ("aethestic" "aesthetic" nil :count 0)
    ("aferomentiond" "aforementioned" nil :count 0)
    ("aferomentioned" "aforementioned" nil :count 0)
    ("affact" "affect" nil :count 0)
    ("affecetd" "affected" nil :count 0)
    ("affectassessment" "affect assessment" nil :count 0)
    ("affluatus" "afflatus" nil :count 0)
    ("afganistan" "Afghanistan" nil :count 0)
    ("aforemenioned" "aforementioned" nil :count 0)
    ("aforementioend" "aforementioned" nil :count 1)
    ("aforementiond" "aforementioned" nil :count 2)
    ("africa" "Africa" nil :count 0)
    ("afterilfe" "afterlife" nil :count 0)
    ("aftewrard" "afterward" nil :count 0)
    ("agaginst" "against" nil :count 0)
    ("agains" "against" nil :count 0)
    ("agaisnt" "against" nil :count 0)
    ("aggree" "agree" nil :count 0)
    ("agnistics" "agnostics" nil :count 0)
    ("agreeemnts" "agreements" nil :count 0)
    ("agreemtn" "Agreement" nil :count 0)
    ("agregious" "egregious" nil :count 0)
    ("agressive" "aggressive" nil :count 0)
    ("agument" "Augment" nil :count 0)
    ("ahaving" "shaving" nil :count 0)
    ("ahotirty" "authority" nil :count 0)
    ("ahppiness" "happiness" nil :count 0)
    ("ahppy" "happy" nil :count 0)
    ("ahsn’t" "hasn’t" nil :count 0)
    ("ahving" "having" nil :count 0)
    ("airthmetic" "arithmetic" nil :count 0)
    ("aittude" "attitude" nil :count 0)
    ("ake" "take" nil :count 6)
    ("akes" "takes" nil :count 0)
    ("aking" "Asking" nil :count 1)
    ("aks" "asks" nil :count 0)
    ("al" "all" nil :count 20)
    ("alduous" "Aldous" nil :count 0)
    ("allegroy" "allegory" nil :count 0)
    ("allgeory" "allegory" nil :count 1)
    ("alliviates" "alleviates" nil :count 0)
    ("allowingyourself" "allowing yourself" nil :count 0)
    ("alma" "Alma" nil :count 0)
    ("almsot" "almost" nil :count 0)
    ("alost" "almost" nil :count 0)
    ("alot" "a lot" nil :count 0)
    ("alppgorithmic" "Algorithmic" nil :count 0)
    ("alreay" "already" nil :count 0)
    ("alse" "false" nil :count 0)
    ("alternativve" "alternative" nil :count 0)
    ("alterusim" "altruism" nil :count 0)
    ("althoughe" "Although" nil :count 0)
    ("altic" "Altaic" nil :count 0)
    ("altnerate" "alternate" nil :count 0)
    ("altriustic" "altruistic" nil :count 0)
    ("altrusim" "altruism" nil :count 0)
    ("alttter" "latter" nil :count 0)
    ("alumn" "alum" nil :count 3)
    ("alumns" "alumnus" nil :count 0)
    ("alwasy" "always" nil :count 0)
    ("alws" "laws" nil :count 0)
    ("amazin" "Amazing" nil :count 1)
    ("ambience" "ambiance" nil :count 0)
    ("ambiguousness" "ambiguity" nil :count 0)
    ("ambuguity" "ambiguity" nil :count 0)
    ("amendation" "emendation" nil :count 0)
    ("ameniable" "amenable" nil :count 0)
    ("amerca" "America" nil :count 0)
    ("americanducation" "Americanization" nil :count 0)
    ("americcan" "American" nil :count 0)
    ("amny" "many" nil :count 0)
    ("amophous" "amorphous" nil :count 0)
    ("amoun" "amount" nil :count 0)
    ("amoutn" "amount" nil :count 0)
    ("amoutns" "amounts" nil :count 0)
    ("amrecians" "Americans" nil :count 0)
    ("amtter" "matter" nil :count 1)
    ("amzingly" "amazingly" nil :count 0)
    ("analaysis" "analysis" nil :count 0)
    ("anallysis" "analysis" nil :count 0)
    ("anallyzing" "analyzing" nil :count 0)
    ("analsis" "analysis" nil :count 1)
    ("analzye" "analyze" nil :count 0)
    ("anatiquity" "antiquity" nil :count 0)
    ("anatonlia" "Anatolia" nil :count 0)
    ("anayzing" "analyzing" nil :count 0)
    ("anc" "and" nil :count 8)
    ("ancints" "ancients" nil :count 0)
    ("andemic" "pandemic" nil :count 0)
    ("aner" "anger" nil :count 0)
    ("anextended" "an extended" nil :count 0)
    ("animalistic" "animistic" nil :count 1)
    ("anit" "anti" nil :count 1)
    ("anlogies" "analogies" nil :count 0)
    ("anlogy" "analogy" nil :count 0)
    ("anmely" "namely" nil :count 0)
    ("anolog" "analog" nil :count 0)
    ("anologies" "analogies" nil :count 0)
    ("anology" "analogy" nil :count 5)
    ("anoother" "another" nil :count 0)
    ("anorxic" "anorexic" nil :count 0)
    ("anothe" "another" nil :count 0)
    ("anothermatter" "another matter" nil :count 0)
    ("anothier" "another" nil :count 0)
    ("anothing" "Anything" nil :count 1)
    ("ansers" "answers" nil :count 0)
    ("ansewr" "answer" nil :count 0)
    ("ansewred" "answered" nil :count 0)
    ("anslysis" "analysis" nil :count 0)
    ("antecdenent" "antecedent" nil :count 0)
    ("anthropocene" "Anthropocene" nil :count 5)
    ("anthropomorphisizing" "anthropomorphize" nil :count 0)
    ("anthropromorphic" "Anthropomorphic" nil :count 0)
    ("anticpate" "anticipate" nil :count 0)
    ("antipation" "anticipation" nil :count 0)
    ("anwswer" "answer" nil :count 0)
    ("anyore" "anymore" nil :count 1)
    ("anythiing" "anything" nil :count 0)
    ("anythinag" "anything" nil :count 0)
    ("anythinng" "anything" nil :count 0)
    ("anytihng" "anything" nil :count 0)
    ("anyting" "anything" nil :count 0)
    ("aobserve" "observe" nil :count 0)
    ("aobut" "about" nil :count 0)
    ("aong" "among" nil :count 0)
    ("apaprent" "apparent" nil :count 0)
    ("apearance" "appearance" nil :count 0)
    ("apears" "appears" nil :count 0)
    ("aperantly" "apparently" nil :count 0)
    ("aperature" "Aperture" nil :count 0)
    ("apocolpyse" "apocalypse" nil :count 0)
    ("apolize" "apologize" nil :count 0)
    ("apologing" "apologizing" nil :count 0)
    ("apparances" "appearances" nil :count 0)
    ("apparen" "apparent" nil :count 0)
    ("apparenty" "apparently" nil :count 0)
    ("apparnent" "apparent" nil :count 0)
    ("appart" "apparent" nil :count 0)
    ("appearaence" "appearance" nil :count 0)
    ("appeareance" "appearance" nil :count 0)
    ("appeareances" "appearances" nil :count 1)
    ("appearenaces" "appearances" nil :count 0)
    ("appearnce" "Appearance" nil :count 2)
    ("appearnces" "appearances" nil :count 0)
    ("appehension" "Apprehension" nil :count 0)
    ("appelation" "Appellation" nil :count 0)
    ("apperance" "appearance" nil :count 5)
    ("apperances" "appearances" nil :count 0)
    ("appereances" "appearances" nil :count 0)
    ("appers" "appears" nil :count 0)
    ("appetative" "appetetive" nil :count 0)
    ("appeteite" "appetite" nil :count 0)
    ("appeteties" "appetites" nil :count 0)
    ("appetetive" "appetite" nil :count 2)
    ("appetitive" "appetetive" nil :count 2)
    ("appicants" "applicants" nil :count 0)
    ("appliation" "application" nil :count 0)
    ("applicaation" "application" nil :count 0)
    ("applicatin" "application" nil :count 1)
    ("appliscations" "applications" nil :count 0)
    ("appopriate" "appropriate" nil :count 0)
    ("apporval" "approval" nil :count 0)
    ("appraoch" "approach" nil :count 1)
    ("appraoches" "approaches" nil :count 1)
    ("apprehand" "apprehend" nil :count 0)
    ("apprent" "apparent" nil :count 0)
    ("apprently" "apparently" nil :count 0)
    ("approaaches" "approaches" nil :count 0)
    ("approacing" "approaching" nil :count 0)
    ("appropraite" "appropriate" nil :count 0)
    ("appropreiate" "appropriate" nil :count 0)
    ("appropriae" "appropriate" nil :count 2)
    ("approriate" "appropriate" nil :count 1)
    ("approrpiate" "appropriate" nil :count 1)
    ("approxmiation" "approximation" nil :count 0)
    ("aprehend" "apprehend" nil :count 0)
    ("aquantainence" "Acquaintance" nil :count 0)
    ("aquired" "acquired" nil :count 0)
    ("arary" "array" nil :count 0)
    ("arbiriarily" "arbitrarily" nil :count 0)
    ("arbirtrar" "arbitrary" nil :count 0)
    ("arbitary" "arbitrary" nil :count 0)
    ("arbitrar" "arbitrary" nil :count 0)
    ("archicteconic" "architectonic" nil :count 0)
    ("architecutre" "architecture" nil :count 0)
    ("archiveed" "archived" nil :count 0)
    ("arednt" "Arendt" nil :count 2)
    ("aregument" "argument" nil :count 0)
    ("aren" "aren't" nil :count 13)
    ("arent" "aren’t" nil :count 4)
    ("arepressures" "are pressures" nil :count 0)
    ("arging" "arguing" nil :count 0)
    ("arguemnt" "argument" nil :count 0)
    ("arguemtns" "arguments" nil :count 0)
    ("arguent" "argument" nil :count 0)
    ("arguents" "arguments" nil :count 0)
    ("argumentativev" "argumentative" nil :count 0)
    ("argumentenation" "argumentation" nil :count 0)
    ("argumetn" "argument" nil :count 0)
    ("argumetns" "arguments" nil :count 3)
    ("argumnet" "argument" nil :count 0)
    ("argumuent" "Argument" nil :count 0)
    ("arie" "awry" nil :count 0)
    ("arist" "Artist" nil :count 0)
    ("aristoteliean" "Aristotelian" nil :count 0)
    ("aristotilean" "Aristotelian" nil :count 4)
    ("aristotilian" "Aristotelian" nil :count 0)
    ("aristotlean" "Aristotelian" nil :count 0)
    ("arive" "arrive" nil :count 0)
    ("arnauld’s" "Arnauld" nil :count 0)
    ("arrands" "Errands" nil :count 0)
    ("arrie" "arrive" nil :count 0)
    ("arrivves" "arrives" nil :count 0)
    ("artistotilean" "Aristotelian" nil :count 0)
    ("arue" "argue" nil :count 0)
    ("aruging" "arguing" nil :count 0)
    ("ary" "airy" nil :count 1)
    ("asccetic" "ascetic" nil :count 0)
    ("ascencion" "ascension" nil :count 0)
    ("ascenscion" "ascension" nil :count 0)
    ("ascenticism" "asceticism" nil :count 0)
    ("ascetiicsm" "asceticism" nil :count 0)
    ("ascnet" "ascent" nil :count 0)
    ("asctions" "actions" nil :count 0)
    ("asepcts" "aspects" nil :count 0)
    ("asignment" "Assignment" nil :count 1)
    ("aspcets" "aspects" nil :count 0)
    ("aspiratoins" "aspirations" nil :count 0)
    ("asseration" "assertion" nil :count 0)
    ("asserets" "asserts" nil :count 0)
    ("asserintg" "asserting" nil :count 0)
    ("assersts" "asserts" nil :count 0)
    ("asserttions" "assertions" nil :count 0)
    ("assessable" "accessible" nil :count 0)
    ("assessmentbias" "assessment bias" nil :count 0)
    ("assimialte" "assimilate" nil :count 0)
    ("assimlating" "assimilating" nil :count 0)
    ("assocaited" "associated" nil :count 0)
    ("associatie" "associative" nil :count 0)
    ("assrts" "asserts" nil :count 0)
    ("asssent" "assent" nil :count 1)
    ("asssents" "assents" nil :count 0)
    ("asssignments" "assignments" nil :count 0)
    ("asssumption" "assumption" nil :count 0)
    ("assymmetry" "asymmetry" nil :count 0)
    ("assympotically" "asymptotically" nil :count 0)
    ("asumption" "assumption" nil :count 0)
    ("asymettric" "asymmetric" nil :count 0)
    ("asympottically" "asymptotically" nil :count 0)
    ("asyncrhonous" "asynchronous" nil :count 0)
    ("asyncrhony" "asynchrony" nil :count 0)
    ("atatin" "attain" nil :count 0)
    ("atempt" "attempt" nil :count 1)
    ("athiest" "atheist" nil :count 0)
    ("athiests" "atheists" nil :count 0)
    ("atification" "ratification" nil :count 0)
    ("atittude" "Attitude" nil :count 0)
    ("atittudes" "attitudes" nil :count 0)
    ("atrition" "Attrition" nil :count 0)
    ("atstrological" "astrological" nil :count 0)
    ("attackeed" "Attacked" nil :count 0)
    ("atteaching" "attaching" nil :count 0)
    ("attemped" "attempted" nil :count 0)
    ("attemps" "attempts" nil :count 3)
    ("attian" "attain" nil :count 0)
    ("attidute" "attitude" nil :count 0)
    ("attidutes" "attitudes" nil :count 0)
    ("attidutse" "Attitudes" nil :count 0)
    ("attnetion" "attention" nil :count 0)
    ("attractice" "attractive" nil :count 0)
    ("attrctive" "attractive" nil :count 0)
    ("attributte" "attribute" nil :count 0)
    ("ature" "nature" nil :count 1)
    ("audeience" "audience" nil :count 0)
    ("audeince" "audience" nil :count 1)
    ("audiobooks" "audio books" nil :count 0)
    ("augusst" "August" nil :count 0)
    ("authoratitive" "authoritative" nil :count 0)
    ("authoriatianism" "authoritarianism" nil :count 0)
    ("authoriry" "authority" nil :count 0)
    ("authoritatrian" "authoritarian" nil :count 0)
    ("authortarian" "Authoritarian" nil :count 0)
    ("autmn" "Autumn" nil :count 0)
    ("autmoatic" "automatic" nil :count 0)
    ("autnomy" "autonomy" nil :count 0)
    ("automaticallyentail" "automatically entail" nil :count 0)
    ("autonom" "autonomy" nil :count 0)
    ("autonoy" "autonomy" nil :count 0)
    ("autoritative" "authoritative" nil :count 0)
    ("avade" "evade" nil :count 0)
    ("availabiltity" "availability" nil :count 0)
    ("avearge" "average" nil :count 0)
    ("aviable" "available" nil :count 0)
    ("avialable" "available" nil :count 0)
    ("avied" "avoid" nil :count 0)
    ("avilable" "available" nil :count 2)
    ("avioding" "avoiding" nil :count 0)
    ("avvoided" "avoided" nil :count 0)
    ("aways" "always" nil :count 0)
    ("awrae" "aware" nil :count 1)
    ("awrait" "await" nil :count 0)
    ("ay" "may" nil :count 4)
    ("backround" "background" nil :count 0)
    ("backticks" "back-ticks" nil :count 0)
    ("backwads" "backwards" nil :count 0)
    ("bacward" "backward" nil :count 0)
    ("bafoons" "buffoons" nil :count 0)
    ("bafsis" "basis" nil :count 0)
    ("baintona" "Balintona" nil :count 0)
    ("ballinona" "Balintona" nil :count 0)
    ("balnce" "balance" nil :count 0)
    ("baout" "about" nil :count 2)
    ("barries" "barriers" nil :count 0)
    ("baseis" "basis" nil :count 0)
    ("basicaly" "Basically" nil :count 0)
    ("bbeliefs" "beliefs" nil :count 0)
    ("bce" "BCE" nil :count 0)
    ("beack" "back" nil :count 0)
    ("bealth" "health" nil :count 0)
    ("bearinn" "bearing" nil :count 0)
    ("beause" "because" nil :count 0)
    ("beautifu" "beautiful" nil :count 1)
    ("beautifull" "beautiful" nil :count 0)
    ("beavior" "behavior" nil :count 0)
    ("becaome" "became" nil :count 0)
    ("becaose" "because" nil :count 0)
    ("becase" "because" nil :count 0)
    ("becasue" "because" nil :count 1)
    ("becauase" "because" nil :count 1)
    ("becaue" "because" nil :count 2)
    ("becaues" "because" nil :count 0)
    ("becaus" "because" nil :count 0)
    ("becausse" "because" nil :count 0)
    ("beccause" "because" nil :count 0)
    ("becmoes" "becomes" nil :count 0)
    ("becoe" "become" nil :count 2)
    ("becominga" "1 becoming a" nil :count 0)
    ("becomings" "becoming" nil :count 0)
    ("becomng" "becoming" nil :count 0)
    ("becuase" "because" nil :count 3)
    ("becuse" "because" nil :count 0)
    ("beenfit" "benefit" nil :count 0)
    ("beenprofoundly" "been profoundly" nil :count 0)
    ("befoer" "before" nil :count 1)
    ("befroe" "before" nil :count 0)
    ("beging" "begging" nil :count 0)
    ("beginining" "beginning" nil :count 0)
    ("begn" "begin" nil :count 0)
    ("behaviour" "behavior" nil :count 0)
    ("behaviours" "behaviors" nil :count 0)
    ("behavorial" "Behavioral" nil :count 0)
    ("behvaior" "behavior" nil :count 2)
    ("beiefs" "beliefs" nil :count 0)
    ("beieves" "believes" nil :count 0)
    ("beifs" "beliefs" nil :count 1)
    ("beig" "being" nil :count 0)
    ("beilieves" "believes" nil :count 0)
    ("beilng" "being" nil :count 0)
    ("beind" "behind" nil :count 1)
    ("belefs" "beliefs" nil :count 1)
    ("beleif" "belief" nil :count 2)
    ("beleifs" "beliefs" nil :count 0)
    ("beleve" "believe" nil :count 0)
    ("belieff" "belief" nil :count 0)
    ("belieft" "beliefs" nil :count 0)
    ("believev" "believe" nil :count 0)
    ("believs" "believes" nil :count 2)
    ("belife" "belief" nil :count 0)
    ("belifs" "beliefs" nil :count 0)
    ("beliifs" "beliefs" nil :count 0)
    ("beliow" "below" nil :count 0)
    ("belives" "believes" nil :count 1)
    ("belivevs" "believes" nil :count 0)
    ("beliving" "believing" nil :count 4)
    ("belliefs" "beliefs" nil :count 0)
    ("belongong" "belonging" nil :count 0)
    ("belongont" "belonging" nil :count 0)
    ("beloning" "belonging" nil :count 0)
    ("beneficient" "beneficent" nil :count 1)
    ("benefitied" "benefited" nil :count 0)
    ("benefitted" "benefited" nil :count 0)
    ("benefitting" "benefiting" nil :count 0)
    ("benegits" "Benefits" nil :count 0)
    ("benig" "being" nil :count 0)
    ("beond" "Beyond" nil :count 0)
    ("berkely" "Berkeley" nil :count 0)
    ("bescome" "become" nil :count 0)
    ("bestexpresses" "best expresses" nil :count 0)
    ("beter" "better" nil :count 4)
    ("beterment" "betterment" nil :count 0)
    ("betrand" "Bertrand" nil :count 0)
    ("betwee" "between" nil :count 1)
    ("betweek" "between" nil :count 0)
    ("betweel" "between" nil :count 1)
    ("betweensocrates" "between Socrates" nil :count 0)
    ("betwen" "between" nil :count 2)
    ("beureau" "Bureau" nil :count 0)
    ("beurocratic" "bureaucratic" nil :count 0)
    ("bevaior" "behavior" nil :count 0)
    ("beween" "between" nil :count 1)
    ("bfore" "before" nil :count 0)
    ("bhave" "behave" nil :count 0)
    ("bibliogaphic" "bibliographic" nil :count 0)
    ("bibliogaphy" "bibliography" nil :count 0)
    ("bibliograhic" "bibliographic" nil :count 0)
    ("bicultural" "bi cultural" nil :count 0)
    ("biefly" "Briefly" nil :count 0)
    ("bigges" "biggies" nil :count 0)
    ("bilingals" "bilinguals" nil :count 0)
    ("bilinglualism" "bilingualism" nil :count 0)
    ("bilinguialism" "bilingualism" nil :count 0)
    ("biliography" "bibliography" nil :count 0)
    ("bilnd" "blind" nil :count 0)
    ("bilniguals" "bilinguals" nil :count 0)
    ("blackhole" "black hole" nil :count 0)
    ("blaind" "Blind" nil :count 0)
    ("blantant" "blatant" nil :count 0)
    ("bleiefs" "beliefs" nil :count 0)
    ("blme" "blame" nil :count 0)
    ("bloth" "Both" nil :count 0)
    ("bodiliy" "bodily" nil :count 0)
    ("bofere" "before" nil :count 0)
    ("bohth" "both" nil :count 0)
    ("boides" "bodies" nil :count 0)
    ("boies" "Boise" nil :count 0)
    ("boignant" "poignant" nil :count 0)
    ("bolded" "bold" nil :count 2)
    ("bolsert" "bolster" nil :count 0)
    ("bopefully" "hopefully" nil :count 0)
    ("bordern" "Border" nil :count 0)
    ("borth" "Birth" nil :count 0)
    ("borwrowed" "borrowed" nil :count 0)
    ("boulrder" "Boulder" nil :count 0)
    ("bourgouise" "bourgeoisie" nil :count 0)
    ("braeath" "breath" nil :count 0)
    ("braod" "broad" nil :count 0)
    ("breakhtrough" "breakthrough" nil :count 0)
    ("brigde" "bridge" nil :count 0)
    ("brihglty" "brightly" nil :count 0)
    ("brisitah" "British" nil :count 0)
    ("britiain" "Britain" nil :count 0)
    ("britian" "Britain" nil :count 3)
    ("british" "British" nil :count 41)
    ("broadeset" "broadest" nil :count 0)
    ("broadlly" "broadly" nil :count 0)
    ("brodly" "broadly" nil :count 0)
    ("bron" "born" nil :count 1)
    ("bronw" "Brown" nil :count 0)
    ("brumaire" "Brumaire" nil :count 0)
    ("bsaically" "basically" nil :count 0)
    ("bse" "Bose" nil :count 0)
    ("bsed" "based" nil :count 0)
    ("btoh" "both" nil :count 2)
    ("btter" "better" nil :count 0)
    ("btween" "between" nil :count 0)
    ("bubblewrap" "bubble-wrap" nil :count 0)
    ("bueaty" "BEAUTY" nil :count 0)
    ("buereau" "Bureau" nil :count 0)
    ("buildling" "building" nil :count 0)
    ("bulid" "build" nil :count 0)
    ("bulidings" "buildings" nil :count 0)
    ("bulit" "built" nil :count 2)
    ("burbis" "hubris" nil :count 0)
    ("busan" "Pusan" nil :count 0)
    ("busiiness" "business" nil :count 0)
    ("byeducated" "by educated" nil :count 0)
    ("caauses" "causes" nil :count 0)
    ("cadynce" "cadence" nil :count 0)
    ("caes" "cases" nil :count 1)
    ("callfed" "called" nil :count 0)
    ("callifornia" "California" nil :count 0)
    ("calph" "caliph" nil :count 0)
    ("calss" "class" nil :count 1)
    ("calssroom" "classroom" nil :count 0)
    ("campain" "campaign" nil :count 0)
    ("campanies" "companies" nil :count 0)
    ("campared" "compared" nil :count 0)
    ("campign" "campaign" nil :count 0)
    ("candiate" "candidate" nil :count 0)
    ("candidtaes" "candidates" nil :count 0)
    ("cange" "change" nil :count 1)
    ("canont" "cannot" nil :count 2)
    ("capatable" "compatible" nil :count 0)
    ("capcaities" "capacities" nil :count 0)
    ("capcaity" "capacity" nil :count 0)
    ("capcitiy" "capacity" nil :count 1)
    ("capcity" "capacity" nil :count 6)
    ("capiatlize" "capitalize" nil :count 0)
    ("capicity" "capacity" nil :count 0)
    ("capitali" "capital" nil :count 0)
    ("captial" "capital" nil :count 0)
    ("captialism" "capitalism" nil :count 0)
    ("captialists" "capitalists" nil :count 0)
    ("carad" "card" nil :count 0)
    ("cartisian" "Cartesian" nil :count 0)
    ("carvd" "carved" nil :count 0)
    ("casualy" "casually" nil :count 0)
    ("casuisty" "casuistry" nil :count 0)
    ("catalogued" "cataloged" nil :count 0)
    ("cataloguing" "cataloging" nil :count 0)
    ("catatrpohic" "catastrophic" nil :count 0)
    ("categor" "category" nil :count 0)
    ("categorial" "Categorical" nil :count 0)
    ("categoricall" "categorically" nil :count 0)
    ("categorizatin" "categorization" nil :count 0)
    ("categrories" "categories" nil :count 0)
    ("cateogrical" "Categorical" nil :count 0)
    ("cateogry" "category" nil :count 2)
    ("causaul" "causal" nil :count 0)
    ("causd" "Caused" nil :count 0)
    ("causually" "casually" nil :count 0)
    ("ccance" "Chance" nil :count 0)
    ("ccorrectly" "correctly" nil :count 0)
    ("celecstiral" "celestial" nil :count 0)
    ("celestrial" "Celestial" nil :count 3)
    ("cenered" "centered" nil :count 0)
    ("cental" "central" nil :count 0)
    ("centry" "century" nil :count 0)
    ("certaintly" "certainly" nil :count 1)
    ("certiain" "certain" nil :count 0)
    ("cetainly" "certainly" nil :count 0)
    ("chacaters" "charcaters" nil :count 0)
    ("chalf" "chalk" nil :count 0)
    ("champter" "chapter" nil :count 0)
    ("chanel" "Chanel" nil :count 0)
    ("channelling" "channeling" nil :count 0)
    ("chaper" "chapter" nil :count 3)
    ("chapetr" "Chapter" nil :count 4)
    ("chapions" "Champions" nil :count 0)
    ("chaptres" "chapters" nil :count 0)
    ("characterestics" "characteristics" nil :count 0)
    ("characterised" "characterized" nil :count 0)
    ("characterisics" "characteristics" nil :count 0)
    ("characterisitics" "characteristics" nil :count 0)
    ("characterizaation" "characterization" nil :count 0)
    ("charactersbarred" "characters barred" nil :count 0)
    ("charactersistics" "characteristics" nil :count 0)
    ("charactersitics" "characteristics" nil :count 0)
    ("chariable" "charitable" nil :count 0)
    ("charsacter" "character" nil :count 0)
    ("chartred" "charted" nil :count 0)
    ("chating" "chatting" nil :count 0)
    ("chatper" "Chapter" nil :count 5)
    ("childood" "childhood" nil :count 0)
    ("choises" "choices" nil :count 3)
    ("chokinng" "choking" nil :count 0)
    ("chooising" "choosing" nil :count 0)
    ("chracter" "character" nil :count 0)
    ("chracterization" "characterization" nil :count 0)
    ("chranial" "cranial" nil :count 0)
    ("chrisitan" "Christian" nil :count 1)
    ("chrisitna" "Christian" nil :count 0)
    ("christ" "Christ" nil :count 0)
    ("christan" "Christian" nil :count 0)
    ("christianity" "Christianity" nil :count 1)
    ("christianty’s" "Christianity’s" nil :count 0)
    ("christiianity" "Christianity" nil :count 0)
    ("chronoicles" "Chronicles" nil :count 0)
    ("chunsk" "chunks" nil :count 0)
    ("ciceronean" "Ciceronian" nil :count 0)
    ("cildren" "children" nil :count 0)
    ("circumsances" "circumstances" nil :count 0)
    ("circumsatnces" "circumstances" nil :count 0)
    ("circumsnace" "circumstance" nil :count 0)
    ("circumsntace" "circumstance" nil :count 0)
    ("circumsntaces" "circumstances" nil :count 0)
    ("circumstanc" "circumstance" nil :count 0)
    ("circumstnace" "circumstance" nil :count 1)
    ("circumstnaces" "circumstances" nil :count 1)
    ("circumstnaes" "circumstance" nil :count 0)
    ("circumstnces" "circumstances" nil :count 0)
    ("circunance" "circumstance" nil :count 0)
    ("cirle" "circle" nil :count 0)
    ("ciy" "city" nil :count 0)
    ("claism" "claims" nil :count 1)
    ("clays" "Claus" nil :count 0)
    ("cleader" "reader" nil :count 0)
    ("clearler" "clearer" nil :count 0)
    ("clearn" "clear" nil :count 1)
    ("clevelrness" "cleverness" nil :count 0)
    ("cliam" "claim" nil :count 1)
    ("cliams" "claims" nil :count 0)
    ("cloaseness" "closeness" nil :count 0)
    ("closenss" "closeness" nil :count 0)
    ("clss" "class" nil :count 0)
    ("clsses" "classes" nil :count 0)
    ("clunkky" "clunky" nil :count 0)
    ("cmoplex" "complex" nil :count 0)
    ("cnahge" "carnage" nil :count 0)
    ("cnandle" "candle" nil :count 0)
    ("cnetury" "century" nil :count 0)
    ("cnocepts" "concepts" nil :count 0)
    ("cnosider" "consider" nil :count 0)
    ("cnotent" "content" nil :count 0)
    ("cocerned" "concerned" nil :count 0)
    ("cocerning" "concerning" nil :count 0)
    ("coclusion" "Occlusion" nil :count 0)
    ("cocneption" "conception" nil :count 0)
    ("cocnepts" "concepts" nil :count 0)
    ("cocnern" "concern" nil :count 0)
    ("codeswitching" "code switching" nil :count 0)
    ("codswitching" "code switching" nil :count 0)
    ("coems" "comes" nil :count 0)
    ("coercied" "coerced" nil :count 0)
    ("cognifitive" "cognitive" nil :count 1)
    ("cognizer" "cognizes" nil :count 0)
    ("cogntiive" "cognitive" nil :count 0)
    ("cogznied" "cognized" nil :count 0)
    ("cohesino" "cohesion" nil :count 0)
    ("coinventions" "conventions" nil :count 0)
    ("coiuld" "could" nil :count 0)
    ("colection" "collection" nil :count 0)
    ("colinear" "co-linear" nil :count 0)
    ("collaborateive" "Collaborative" nil :count 0)
    ("collapsable" "collapsible" nil :count 0)
    ("collectivisim" "collectivism" nil :count 0)
    ("collge" "college" nil :count 0)
    ("coloinization" "colonization" nil :count 0)
    ("comared" "compared" nil :count 0)
    ("combinign" "combining" nil :count 0)
    ("comfortanble" "comfortable" nil :count 0)
    ("comimit" "commit" nil :count 0)
    ("comining" "coming" nil :count 0)
    ("comittments" "Commitments" nil :count 0)
    ("comlete" "Complete" nil :count 0)
    ("comlex" "complex" nil :count 0)
    ("commandly" "command" nil :count 0)
    ("commentaryis" "commentary is" nil :count 0)
    ("commetns" "comments" nil :count 0)
    ("commital" "committal" nil :count 1)
    ("commited" "committed" nil :count 3)
    ("commitee" "committee" nil :count 0)
    ("commitement" "commitment" nil :count 0)
    ("commiting" "committing" nil :count 0)
    ("committment" "commitment" nil :count 0)
    ("commnity" "community" nil :count 0)
    ("commnly" "commonly" nil :count 0)
    ("commonoalities" "commonalities" nil :count 0)
    ("commonpeople" "common people" nil :count 0)
    ("commonplae" "Commonplace" nil :count 0)
    ("commuincate" "communicate" nil :count 0)
    ("commuincated" "communicated" nil :count 0)
    ("commuity" "community" nil :count 0)
    ("commuknicate" "communicate" nil :count 0)
    ("commumicates" "communicates" nil :count 0)
    ("communcate" "communicate" nil :count 0)
    ("communcation" "communication" nil :count 1)
    ("communiation" "communication" nil :count 1)
    ("communicatin" "communicating" nil :count 0)
    ("communicationg" "communicating" nil :count 0)
    ("communicatoin" "communication" nil :count 0)
    ("communicaton" "communication" nil :count 0)
    ("communicatvie" "communicative" nil :count 0)
    ("communiies" "communities" nil :count 0)
    ("communism" "Communism" nil :count 3)
    ("communittee" "community" nil :count 0)
    ("communityb" "community" nil :count 0)
    ("comopnent" "component" nil :count 0)
    ("comoposition" "composition" nil :count 0)
    ("compabiel" "compatible" nil :count 0)
    ("comparies" "compares" nil :count 0)
    ("compatibl" "compatible" nil :count 1)
    ("compating" "competing" nil :count 0)
    ("compelte" "complete" nil :count 0)
    ("competiive" "competitive" nil :count 0)
    ("competion" "competition" nil :count 0)
    ("competititon" "competition" nil :count 0)
    ("compettion" "competition" nil :count 1)
    ("complee" "complete" nil :count 0)
    ("compleicated" "complicated" nil :count 0)
    ("completeely" "completely" nil :count 0)
    ("completly" "completely" nil :count 0)
    ("compling" "complying" nil :count 0)
    ("complixity" "complicity" nil :count 0)
    ("compoentns" "components" nil :count 0)
    ("compomenents" "components" nil :count 0)
    ("componetnst" "components" nil :count 0)
    ("componets" "components" nil :count 0)
    ("compouding" "compounding" nil :count 0)
    ("comprehensoin" "comprehension" nil :count 0)
    ("comprehention" "Comprehension" nil :count 0)
    ("comprehsneion" "comprehension" nil :count 0)
    ("comprehsnive" "comprehensive" nil :count 0)
    ("comprehsnsion" "comprehension" nil :count 0)
    ("comprosises" "compromises" nil :count 0)
    ("comptete" "compete" nil :count 0)
    ("compulsatory" "Compulsory" nil :count 0)
    ("compuslion" "compulsion" nil :count 0)
    ("comunicate" "communicate" nil :count 0)
    ("comunicated" "communicated" nil :count 0)
    ("comunication" "Communication" nil :count 0)
    ("comunity" "community" nil :count 0)
    ("conact" "contact" nil :count 2)
    ("conccet" "concept" nil :count 0)
    ("concen" "concern" nil :count 0)
    ("concenptual" "conceptual" nil :count 1)
    ("concenr" "concern" nil :count 0)
    ("concenration" "concentration" nil :count 0)
    ("concent" "concept" nil :count 0)
    ("conceptino" "conception" nil :count 0)
    ("conceptios" "conceptions" nil :count 0)
    ("conceptiosn" "conceptions" nil :count 0)
    ("conceptoin" "conception" nil :count 1)
    ("concepttual" "Conceptual" nil :count 0)
    ("conceptualisations" "conceptualizations" nil :count 0)
    ("conceptuallized" "conceptualized" nil :count 0)
    ("conceptuatlizations" "conceptualizations" nil :count 0)
    ("concepual" "conceptual" nil :count 0)
    ("concepually" "conceptually" nil :count 0)
    ("concerete" "concrete" nil :count 0)
    ("concernd" "concerned" nil :count 0)
    ("concets" "concepts" nil :count 1)
    ("concidences" "coincidences" nil :count 0)
    ("concievable" "conceivable" nil :count 0)
    ("concistency" "Consistency" nil :count 0)
    ("conclucsion" "Conclusion" nil :count 0)
    ("concludion" "conclusion" nil :count 1)
    ("conclusin" "conclusion" nil :count 0)
    ("conclusioin" "conclusion" nil :count 0)
    ("conclusiono" "conclusion" nil :count 0)
    ("concnering" "concerning" nil :count 0)
    ("concoius" "conscious" nil :count 0)
    ("concpets" "concepts" nil :count 0)
    ("concpt" "concept" nil :count 0)
    ("concquest" "Conquest" nil :count 0)
    ("concree" "concrete" nil :count 0)
    ("concsciously" "consciously" nil :count 0)
    ("concsequence" "consequence" nil :count 0)
    ("concsience" "conscience" nil :count 0)
    ("concsious" "conscious" nil :count 0)
    ("concsiousness" "consciousness" nil :count 0)
    ("concsistent" "consistent" nil :count 0)
    ("condemntation" "condemnation" nil :count 1)
    ("condence" "condense" nil :count 0)
    ("condisions" "conditions" nil :count 0)
    ("conditionsed" "conditioned" nil :count 0)
    ("conection" "Connection" nil :count 0)
    ("coneingent" "contingent" nil :count 0)
    ("coneives" "conceives" nil :count 0)
    ("conemplation" "contemplation" nil :count 0)
    ("conents" "contents" nil :count 0)
    ("conept" "concept" nil :count 1)
    ("conerns" "concerns" nil :count 0)
    ("coness" "confess" nil :count 0)
    ("coneving" "conceiving" nil :count 0)
    ("conext" "Context" nil :count 0)
    ("conferrng" "conferring" nil :count 0)
    ("confidentially" "Confidentially" nil :count 0)
    ("configuratino" "configuration" nil :count 0)
    ("configurationa" "configuration" nil :count 0)
    ("confinue" "continue" nil :count 0)
    ("conflilct" "conflict" nil :count 0)
    ("conforable" "conformable" nil :count 0)
    ("confority" "conformity" nil :count 0)
    ("confron" "confront" nil :count 0)
    ("confroned" "confronted" nil :count 0)
    ("confrontatin" "confrontation" nil :count 0)
    ("confrtoned" "confronted" nil :count 0)
    ("confrtonted" "confronted" nil :count 0)
    ("confucainism" "Confucianism" nil :count 0)
    ("confucianism" "Confucianism" nil :count 1)
    ("confucious’s" "Confucius’s" nil :count 0)
    ("confusino" "confusion" nil :count 0)
    ("congratuations" "Congratulations" nil :count 0)
    ("congratz" "congrats" nil :count 2)
    ("congruitity" "congruity" nil :count 0)
    ("conince" "convince" nil :count 0)
    ("conincidentally" "coincidentally" nil :count 0)
    ("coninues" "continues" nil :count 0)
    ("coniscious" "conscious" nil :count 0)
    ("conjuction" "conjunction" nil :count 0)
    ("conjunctino" "conjunction" nil :count 0)
    ("conncern" "concern" nil :count 0)
    ("connecctions" "Connections" nil :count 0)
    ("connecion" "connection" nil :count 0)
    ("connectd" "connected" nil :count 0)
    ("connectino" "connection" nil :count 0)
    ("connet" "Connect" nil :count 0)
    ("connextion" "connexion" nil :count 0)
    ("connnect" "connect" nil :count 0)
    ("conpet" "concept" nil :count 2)
    ("conqured" "conquered" nil :count 0)
    ("conridering" "considering" nil :count 0)
    ("consciencious" "conscientious" nil :count 0)
    ("conscince" "conscience" nil :count 0)
    ("conscioudness" "consciousness" nil :count 0)
    ("consciption" "conscription" nil :count 0)
    ("conscirnce" "conscience" nil :count 0)
    ("conscius" "conscious" nil :count 1)
    ("conscous" "conscious" nil :count 0)
    ("conscriptions" "2 conscriptions" nil :count 0)
    ("consdierations" "considerations" nil :count 0)
    ("consdiering" "considering" nil :count 1)
    ("conseequence" "consequence" nil :count 0)
    ("conseqently" "Consequently" nil :count 0)
    ("conseqeuntial" "consequential" nil :count 0)
    ("conseqeuntly" "Consequently" nil :count 0)
    ("conseqeutnly" "Consequently" nil :count 0)
    ("consequeces" "consequences" nil :count 1)
    ("consequentiliast" "consequentialist" nil :count 0)
    ("consequnce" "consequence" nil :count 0)
    ("consequtive" "consecutive" nil :count 0)
    ("conseuentialist" "consequentialist" nil :count 0)
    ("consicence" "conscience" nil :count 0)
    ("consideratoin" "consideration" nil :count 0)
    ("consideres" "considers" nil :count 0)
    ("consious" "conscious" nil :count 0)
    ("consistenices" "consistencies" nil :count 0)
    ("consistenly" "consistently" nil :count 0)
    ("consistentcy" "consistency" nil :count 0)
    ("consittutionalism" "constitutionalism" nil :count 0)
    ("consituents" "constituents" nil :count 0)
    ("consituted" "constituted" nil :count 0)
    ("consitution" "constitution" nil :count 0)
    ("consitutional" "Constitutional" nil :count 0)
    ("conssitentl" "consistently" nil :count 0)
    ("constanct" "constancy" nil :count 0)
    ("constantinpole" "Constantinople" nil :count 0)
    ("constisting" "consisting" nil :count 0)
    ("constit" "consist" nil :count 0)
    ("constited" "constituted" nil :count 0)
    ("constitiuent" "constituent" nil :count 0)
    ("constittuve" "constitutive" nil :count 0)
    ("constitue" "constitute" nil :count 0)
    ("constitues" "constitutes" nil :count 0)
    ("constitutents" "constituents" nil :count 0)
    ("constitutoinalism" "constitutionalism" nil :count 0)
    ("constiutional" "Constitutional" nil :count 0)
    ("constiuttion" "constitution" nil :count 1)
    ("constly" "constantly" nil :count 0)
    ("constnatly" "constantly" nil :count 1)
    ("constsructions" "constructions" nil :count 0)
    ("constutution" "Constitution" nil :count 0)
    ("consummptin" "consumption" nil :count 0)
    ("consus" "consuls" nil :count 0)
    ("contadict" "contradict" nil :count 0)
    ("contantl" "Contently" nil :count 0)
    ("contct" "contact" nil :count 0)
    ("contditions" "conditions" nil :count 0)
    ("conted" "contend" nil :count 0)
    ("contemplateion" "contemplation" nil :count 0)
    ("contempoarairily" "Contemporary" nil :count 0)
    ("contentionw" "contention" nil :count 0)
    ("conteporary" "contemporary" nil :count 0)
    ("contestatino" "contestant" nil :count 0)
    ("contimuum" "continuum" nil :count 0)
    ("contineud" "continued" nil :count 0)
    ("contingnent" "contingent" nil :count 0)
    ("continigent" "contingent" nil :count 0)
    ("continualy" "continually" nil :count 0)
    ("continuitiy" "continuity" nil :count 0)
    ("continulaly" "Continually" nil :count 0)
    ("continusous" "continuous" nil :count 0)
    ("contitutive" "constitutive" nil :count 0)
    ("contnuous" "continuous" nil :count 0)
    ("contoller" "Controller" nil :count 0)
    ("contradcit" "contradict" nil :count 0)
    ("contradctions" "contradictions" nil :count 0)
    ("contradictories" "contradictory" nil :count 0)
    ("contradistinguised" "contradistinguished" nil :count 0)
    ("contraditictions" "contradictions" nil :count 0)
    ("contraties" "contraries" nil :count 0)
    ("contratry" "contrary" nil :count 0)
    ("contribued" "contributed" nil :count 0)
    ("contst" "contest" nil :count 0)
    ("convay" "Convey" nil :count 0)
    ("convay’s" "Conway’s" nil :count 0)
    ("convcition" "conviction" nil :count 0)
    ("conveersationally" "conversationally" nil :count 0)
    ("convege" "converge" nil :count 0)
    ("conveing" "conveying" nil :count 0)
    ("convenant" "covenant" nil :count 0)
    ("convenieces" "Conveniences" nil :count 0)
    ("conveninently" "conveniently" nil :count 0)
    ("conventinon" "convention" nil :count 0)
    ("converastion" "conversation" nil :count 0)
    ("converation" "conversation" nil :count 0)
    ("conversaion" "conversation" nil :count 0)
    ("conversationbetween" "conversation between" nil :count 0)
    ("conversatoin" "conversation" nil :count 1)
    ("conversatons" "conversations" nil :count 0)
    ("conversionalyy" "conversationally" nil :count 0)
    ("convertor" "converter" nil :count 0)
    ("converyor" "conveyor" nil :count 0)
    ("convetion" "convention" nil :count 0)
    ("convicing" "convincing" nil :count 0)
    ("convining" "convincing" nil :count 0)
    ("convntions" "conventions" nil :count 0)
    ("convway’s" "Conway’s" nil :count 0)
    ("coonfines" "confines" nil :count 0)
    ("coover" "cover" nil :count 0)
    ("copresident" "Co-president" nil :count 0)
    ("corect" "correct" nil :count 0)
    ("coreferring" "co-referring" nil :count 0)
    ("corelated" "correlated" nil :count 0)
    ("corerspond" "correspond" nil :count 0)
    ("corespond" "correspond" nil :count 0)
    ("cornivorous" "Carnivorous" nil :count 0)
    ("corolarry" "corollary" nil :count 0)
    ("correlatino" "correlation" nil :count 0)
    ("correlatinos" "correlations" nil :count 0)
    ("correleative" "correlative" nil :count 0)
    ("corresonding" "corresponding" nil :count 1)
    ("corresopnd" "correspond" nil :count 0)
    ("corresopndence" "correspondence" nil :count 0)
    ("corridoors" "corridors" nil :count 0)
    ("corrlation" "correlation" nil :count 0)
    ("corrolary" "corollary" nil :count 1)
    ("corrrect" "correct" nil :count 0)
    ("corupt" "corrupt" nil :count 0)
    ("cosequently" "Consequently" nil :count 0)
    ("cosmolog" "cosmology" nil :count 1)
    ("cosnequence" "consequence" nil :count 0)
    ("cosomology" "cosmology" nil :count 0)
    ("cotnent" "content" nil :count 0)
    ("couild" "could" nil :count 1)
    ("couinterveiling" "Countervailing" nil :count 0)
    ("couldl" "Could" nil :count 0)
    ("couldnt" "couldn't" nil :count 1)
    ("coulud" "could" nil :count 0)
    ("councellors" "counselors" nil :count 0)
    ("counscious" "conscious" nil :count 0)
    ("counta" "counts" nil :count 0)
    ("counteraexamples" "counterexamples" nil :count 0)
    ("counteragument" "counterargument" nil :count 0)
    ("counterargues" "counter argues" nil :count 0)
    ("counterarguing" "counter-arguing" nil :count 0)
    ("countercases" "Counter cases" nil :count 0)
    ("countergarguments" "counterarguments" nil :count 0)
    ("counterintuitive" "counter intuitive" nil :count 0)
    ("counterpull" "counter-pull" nil :count 0)
    ("countreproductive" "counterproductive" nil :count 0)
    ("courages" "courageous" nil :count 0)
    ("courrse" "course" nil :count 0)
    ("coutning" "counting" nil :count 0)
    ("coveage" "coverage" nil :count 0)
    ("covid" "COVID" nil :count 0)
    ("covrs" "covers" nil :count 0)
    ("crcial" "crucial" nil :count 0)
    ("creadit" "credit" nil :count 0)
    ("creatue" "creature" nil :count 0)
    ("creaturse" "creatures" nil :count 0)
    ("creatve" "creative" nil :count 0)
    ("creescendos" "crescendos" nil :count 0)
    ("creid" "cried" nil :count 0)
    ("crerate" "create" nil :count 0)
    ("crieria" "criteria" nil :count 0)
    ("criinals" "criminals" nil :count 0)
    ("cringy" "serene" nil :count 0)
    ("criqiques" "critiques" nil :count 0)
    ("criqitue" "critique" nil :count 1)
    ("crique" "Critique" nil :count 0)
    ("critial" "Critical" nil :count 1)
    ("criticaly" "critically" nil :count 0)
    ("criticidm" "criticism" nil :count 0)
    ("criticp" "critic" nil :count 0)
    ("crition" "Criterion" nil :count 0)
    ("critiquess" "critiques" nil :count 0)
    ("critiziced" "criticized" nil :count 0)
    ("critqiue" "Critique" nil :count 0)
    ("critque" "Critique" nil :count 0)
    ("critrion" "criterion" nil :count 0)
    ("critucal" "critical" nil :count 0)
    ("crituiqed" "critiqued" nil :count 0)
    ("crss" "Cross" nil :count 0)
    ("crticial" "critical" nil :count 0)
    ("crtiical" "critical" nil :count 0)
    ("cruff" "cruft" nil :count 0)
    ("crutically" "Critically" nil :count 0)
    ("crwods" "crowds" nil :count 0)
    ("crystalized" "crystallized" nil :count 0)
    ("cse" "case" nil :count 5)
    ("csomething" "something" nil :count 0)
    ("cucesses" "successes" nil :count 0)
    ("culimatinting" "culminating" nil :count 0)
    ("cultrual" "cultural" nil :count 0)
    ("cultur" "culture" nil :count 0)
    ("culutral" "cultural" nil :count 0)
    ("cuminated" "culminated" nil :count 0)
    ("curently" "currently" nil :count 0)
    ("curisoities" "curiosities" nil :count 0)
    ("currenlty" "currently" nil :count 0)
    ("currentlly" "currently" nil :count 0)
    ("curriculur" "Curricular" nil :count 0)
    ("currilculum" "curriculum" nil :count 0)
    ("currlulum" "curriculum" nil :count 0)
    ("custm" "custom" nil :count 0)
    ("custome" "custom" nil :count 0)
    ("customizatoins" "customizations" nil :count 0)
    ("cutural" "cultural" nil :count 0)
    ("cwhich" "which" nil :count 0)
    ("cycical" "cyclical" nil :count 0)
    ("czechosolvakia" "Czechoslovakia" nil :count 0)
    ("daa" "data" nil :count 0)
    ("daism" "Daoism" nil :count 0)
    ("dalism" "dualism" nil :count 0)
    ("damanged" "damaged" nil :count 1)
    ("dangeous" "dangerous" nil :count 0)
    ("daoism" "Daoism" nil :count 95)
    ("daosim" "Daoism" nil :count 8)
    ("daosits" "Daoists" nil :count 1)
    ("dapt" "adapt" nil :count 0)
    ("darkeness" "darkness" nil :count 0)
    ("darkess" "darkness" nil :count 1)
    ("darknesses" "darkness’s" nil :count 0)
    ("dasdardly" "dastardly" nil :count 0)
    ("dat" "data" nil :count 2)
    ("datisfaction" "satisfaction" nil :count 0)
    ("daydreaing" "daydreaming" nil :count 0)
    ("dcitionary" "dictionary" nil :count 0)
    ("ddate" "date" nil :count 0)
    ("dea" "dead" nil :count 0)
    ("deadliy" "deadly" nil :count 0)
    ("deamnds" "demands" nil :count 0)
    ("decectible" "detectable" nil :count 0)
    ("decedence" "decadence" nil :count 0)
    ("decembeter" "December" nil :count 0)
    ("decembter" "December" nil :count 0)
    ("decentraized" "decentralized" nil :count 0)
    ("decesion" "decision" nil :count 0)
    ("decidely" "decidedly" nil :count 0)
    ("deciper" "decipher" nil :count 0)
    ("decisiosn" "decisions" nil :count 0)
    ("declaratlve" "declarative" nil :count 0)
    ("declearation" "declaration" nil :count 0)
    ("decrepid" "decrepit" nil :count 0)
    ("decribed" "described" nil :count 0)
    ("deduaion" "deduction" nil :count 0)
    ("deducation" "deduction" nil :count 0)
    ("deecline" "Decline" nil :count 0)
    ("deelop" "develop" nil :count 0)
    ("deepend" "depend" nil :count 0)
    ("deeping" "deeper" nil :count 0)
    ("deermined" "determined" nil :count 1)
    ("defeasibe" "defeasible" nil :count 0)
    ("defence" "Defense" nil :count 0)
    ("defencses" "defenses" nil :count 0)
    ("defensinble" "defensible" nil :count 0)
    ("deferential" "Deferential" nil :count 0)
    ("deficeincy" "deficiency" nil :count 0)
    ("definiely" "definitely" nil :count 0)
    ("definiition" "Definition" nil :count 0)
    ("definining" "defining" nil :count 0)
    ("defininition" "Definitions" nil :count 0)
    ("definitin" "definition" nil :count 0)
    ("definitinos" "Definitions" nil :count 0)
    ("definitioin" "definition" nil :count 0)
    ("definitional" "definitions" nil :count 0)
    ("definitionally" "definition ally" nil :count 0)
    ("definititions" "definitions" nil :count 0)
    ("defintiion" "definition" nil :count 0)
    ("defintiions" "definitions" nil :count 0)
    ("defintion" "Definition" nil :count 2)
    ("defintions" "definitions" nil :count 0)
    ("defned" "defined" nil :count 0)
    ("dehumanizataion" "dehumanization" nil :count 0)
    ("delcare" "declare" nil :count 0)
    ("deletriously" "deleteriously" nil :count 0)
    ("delibrate" "deliberate" nil :count 1)
    ("deliebrately" "deliberately" nil :count 0)
    ("deligate" "delegate" nil :count 0)
    ("delimeters" "delimiters" nil :count 0)
    ("delimied" "delimited" nil :count 0)
    ("delueze" "Deleuze" nil :count 0)
    ("demarkates" "demarcates" nil :count 0)
    ("demomstrative" "demonstrative" nil :count 0)
    ("demonstartively" "demonstratively" nil :count 0)
    ("demonstating" "demonstrating" nil :count 0)
    ("demonstrarte" "demonstrate" nil :count 0)
    ("demonstreates" "demonstrates" nil :count 0)
    ("demosntrates" "demonstrates" nil :count 0)
    ("deneid" "denied" nil :count 0)
    ("denoes" "denotes" nil :count 0)
    ("denoing" "Denoting" nil :count 0)
    ("denoitng" "denoting" nil :count 0)
    ("denotaiotns" "denotations" nil :count 0)
    ("dentity" "identity" nil :count 0)
    ("deonstrating" "demonstrating" nil :count 0)
    ("deonstrative" "demonstrative" nil :count 0)
    ("deos" "Does" nil :count 1)
    ("departue" "departure" nil :count 0)
    ("depiosits" "deposits" nil :count 0)
    ("depositino" "deposition" nil :count 0)
    ("deprsession" "depression" nil :count 0)
    ("desartes" "Descartes" nil :count 0)
    ("descarte" "Descartes" nil :count 0)
    ("descarte’s" "Descartes’s" nil :count 0)
    ("descates" "Descartes" nil :count 0)
    ("descibres" "describes" nil :count 0)
    ("desciption" "description" nil :count 0)
    ("desciptions" "descriptions" nil :count 0)
    ("descirbed" "described" nil :count 0)
    ("descirbes" "describes" nil :count 1)
    ("descrates" "Desecrates" nil :count 0)
    ("descrbe" "describe" nil :count 0)
    ("descrbing" "describing" nil :count 0)
    ("describtion" "description" nil :count 0)
    ("descrioption" "description" nil :count 0)
    ("descrioptoin" "description" nil :count 0)
    ("descripotion" "description" nil :count 0)
    ("descriptev" "Descriptive" nil :count 0)
    ("descriptins" "descriptions" nil :count 0)
    ("descriptoins" "descriptions" nil :count 3)
    ("descritions" "Descriptions" nil :count 0)
    ("descritpive" "Descriptive" nil :count 0)
    ("descrpitive" "Descriptive" nil :count 0)
    ("desguised" "Disguised" nil :count 0)
    ("deshes" "dashes" nil :count 0)
    ("desiderd" "desired" nil :count 0)
    ("desierd" "desired" nil :count 0)
    ("desireaable" "desirable" nil :count 0)
    ("desireablility" "desirability" nil :count 0)
    ("desitination" "destination" nil :count 0)
    ("desparately" "desperately" nil :count 5)
    ("despareatly" "Desperately" nil :count 0)
    ("despie" "despise" nil :count 0)
    ("desrivves" "deserves" nil :count 0)
    ("destablizes" "destabilizes" nil :count 1)
    ("destablizing" "destabilizing" nil :count 0)
    ("destitue" "destitute" nil :count 0)
    ("destress" "de-stress" nil :count 0)
    ("destrouction" "destruction" nil :count 0)
    ("detaills" "details" nil :count 0)
    ("detailts" "details" nil :count 0)
    ("detauls" "details" nil :count 1)
    ("detennining" "determining" nil :count 0)
    ("deterence" "deterrence" nil :count 0)
    ("determed" "determined" nil :count 0)
    ("determiend" "determined" nil :count 3)
    ("determin" "determine" nil :count 0)
    ("determineed" "determined" nil :count 0)
    ("determing" "determining" nil :count 4)
    ("determinig" "determining" nil :count 3)
    ("determininsm" "determinism" nil :count 0)
    ("determinisim" "determinism" nil :count 0)
    ("determinstic" "deterministic" nil :count 0)
    ("deterninism" "determinism" nil :count 0)
    ("develoepd" "developed" nil :count 1)
    ("developement" "Development" nil :count 0)
    ("developementl" "developmental" nil :count 0)
    ("developmeng" "Development" nil :count 0)
    ("developoments" "developments" nil :count 0)
    ("develpment" "development" nil :count 0)
    ("develpments" "developments" nil :count 0)
    ("devevlopment" "development" nil :count 0)
    ("devlop" "develop" nil :count 0)
    ("dfeining" "defining" nil :count 0)
    ("dfiniiton" "definition" nil :count 0)
    ("diagloe" "dialogue" nil :count 0)
    ("diagloes" "dialogues" nil :count 0)
    ("diagloues" "dialogues" nil :count 0)
    ("dialectically" "dialectical" nil :count 0)
    ("dialectual" "dialectal" nil :count 0)
    ("dialgoue" "dialogue" nil :count 1)
    ("dialgoues" "dialogues" nil :count 0)
    ("dialobue" "dialogue" nil :count 0)
    ("diasporic" "Diaspora" nil :count 0)
    ("dichotomoy" "dichotomy" nil :count 0)
    ("dicsionssion" "discussion" nil :count 0)
    ("dicstinction" "distinction" nil :count 0)
    ("dicsusion" "digestion" nil :count 0)
    ("dicsusoin" "Discussion" nil :count 0)
    ("dictinct" "distinct" nil :count 0)
    ("dictioniary" "dictionary" nil :count 0)
    ("dicussion" "discussion" nil :count 0)
    ("didcatic" "didactic" nil :count 0)
    ("didcussion" "discussion" nil :count 0)
    ("didd" "did" nil :count 0)
    ("didnt" "didn't" nil :count 2)
    ("diemnsions" "dimensions" nil :count 0)
    ("diety" "deity" nil :count 0)
    ("diferent" "different" nil :count 1)
    ("diffeent" "different" nil :count 2)
    ("differeent" "different" nil :count 0)
    ("differeing" "differing" nil :count 0)
    ("differen" "different" nil :count 5)
    ("differenc" "difference" nil :count 0)
    ("differenence" "difference" nil :count 0)
    ("differet" "different" nil :count 0)
    ("differnce" "difference" nil :count 0)
    ("differnetly" "differently" nil :count 0)
    ("differnt" "Different" nil :count 0)
    ("diffictul" "difficult" nil :count 0)
    ("diffirent" "different" nil :count 0)
    ("diffirently" "differently" nil :count 0)
    ("diffulct" "difficult" nil :count 0)
    ("dificultly" "difficultly" nil :count 0)
    ("dignitify" "Dignity" nil :count 0)
    ("dignitiy" "dignity" nil :count 0)
    ("diifferences" "differences" nil :count 0)
    ("dilemam" "dilemma" nil :count 1)
    ("diligetnly" "diligently" nil :count 0)
    ("dilimma" "dilemma" nil :count 0)
    ("dilligence" "diligence" nil :count 0)
    ("dilligent" "diligent" nil :count 1)
    ("dilted" "diluted" nil :count 0)
    ("diminiished" "diminished" nil :count 0)
    ("diminsihemnt" "diminishment" nil :count 0)
    ("dinenr" "dinner" nil :count 0)
    ("diong" "doing" nil :count 2)
    ("directlly" "directly" nil :count 0)
    ("disabluse" "disabuse" nil :count 0)
    ("disadvattages" "Disadvantages" nil :count 0)
    ("disaease" "disease" nil :count 0)
    ("disallusion" "disillusion" nil :count 0)
    ("disallusionment" "disillusionment" nil :count 0)
    ("disapates" "dissipates" nil :count 0)
    ("disapointment" "disappointment" nil :count 0)
    ("disappates" "dissipates" nil :count 0)
    ("disappionted" "disappointed" nil :count 0)
    ("disastisfaction" "dissatisfaction" nil :count 0)
    ("discenable" "discernible" nil :count 0)
    ("discernable" "discernible" nil :count 0)
    ("discheveled" "disheveled" nil :count 0)
    ("discint" "descent" nil :count 0)
    ("discipine" "discipline" nil :count 0)
    ("discipined" "disciplined" nil :count 0)
    ("disciplies" "disciples" nil :count 1)
    ("disconetns" "Discontents" nil :count 0)
    ("discopnnected" "disconnected" nil :count 0)
    ("discouse" "discourse" nil :count 0)
    ("discousrse" "discourse" nil :count 0)
    ("discoutns" "discounts" nil :count 0)
    ("discoveed" "discovered" nil :count 0)
    ("discoverable" "discover able" nil :count 1)
    ("discoversies" "discoveries" nil :count 0)
    ("discoviers" "discovers" nil :count 0)
    ("discovies" "discovers" nil :count 0)
    ("discovry" "discovery" nil :count 0)
    ("discpline" "discipline" nil :count 0)
    ("discplined" "disciplined" nil :count 0)
    ("discplines" "disciples" nil :count 1)
    ("discrimation" "discrimination" nil :count 0)
    ("discription" "description" nil :count 0)
    ("discriptions" "descriptions" nil :count 0)
    ("disctinly" "dissecting" nil :count 0)
    ("discuess" "discuss" nil :count 0)
    ("discussin" "discussing" nil :count 1)
    ("discussionf" "Discussion" nil :count 0)
    ("discusson" "discussion" nil :count 0)
    ("disengenuous" "disingenuous" nil :count 0)
    ("disengously" "disingenuously" nil :count 0)
    ("disfavour" "disfavor" nil :count 0)
    ("disgards" "discards" nil :count 0)
    ("disginguished" "distinguished" nil :count 1)
    ("disgreement" "disagreement" nil :count 0)
    ("disgruntlemtn" "disgruntlement" nil :count 0)
    ("dishses" "dishes" nil :count 0)
    ("disimillar" "dissimilar" nil :count 0)
    ("disingenous" "disingenuous" nil :count 0)
    ("disipclined" "disciplined" nil :count 0)
    ("dislects" "dialects" nil :count 0)
    ("dismantls" "dismantles" nil :count 0)
    ("dismised" "Dismissed" nil :count 0)
    ("dismising" "dismissing" nil :count 0)
    ("dispell" "dispel" nil :count 0)
    ("dispensible" "dispensable" nil :count 0)
    ("displeasurale" "displeasure" nil :count 0)
    ("displine" "discipline" nil :count 0)
    ("displined" "disciplined" nil :count 0)
    ("displines" "disciplines" nil :count 0)
    ("dispositino" "disposition" nil :count 0)
    ("dispositiosn" "dispositions" nil :count 0)
    ("dispositonal" "dispositional" nil :count 0)
    ("dispossessd" "dispossessed" nil :count 0)
    ("dispreferred" "dis-preferred" nil :count 5)
    ("dispreferring" "dis-preferring" nil :count 0)
    ("disproprotionately" "disproportionately" nil :count 0)
    ("disproprtionately" "disproportionately" nil :count 0)
    ("disproven" "disproved" nil :count 1)
    ("disrete" "discrete" nil :count 0)
    ("disrouce" "disrobe" nil :count 0)
    ("dissapearance" "disappearance" nil :count 0)
    ("dissciplines" "disciplines" nil :count 0)
    ("dissdents" "dissidents" nil :count 0)
    ("dissmisses" "dismisses" nil :count 1)
    ("dissmissing" "dismissing" nil :count 0)
    ("dissudes" "dissuades" nil :count 0)
    ("distict" "distinct" nil :count 1)
    ("distinbuisable" "distinguishable" nil :count 0)
    ("distincction" "distinction" nil :count 0)
    ("distinctc" "distinct" nil :count 0)
    ("distinctinos" "distinctions" nil :count 0)
    ("distinctius" "distinguish" nil :count 0)
    ("distingish" "distinguish" nil :count 0)
    ("distingishings" "distinguishing" nil :count 0)
    ("distingiushes" "distinguishes" nil :count 0)
    ("distinguishiing" "distinguishing" nil :count 0)
    ("distingushed" "distinguished" nil :count 1)
    ("distint" "distinct" nil :count 0)
    ("distrimination" "discrimination" nil :count 0)
    ("disucssing" "discussing" nil :count 0)
    ("divitiy" "Divinity" nil :count 0)
    ("divoerced" "divorced" nil :count 0)
    ("divored" "divorced" nil :count 0)
    ("dizzingly" "dizzyingly" nil :count 0)
    ("doaism" "Daoism" nil :count 20)
    ("doaist" "Daoist" nil :count 0)
    ("doaists" "Daoists" nil :count 1)
    ("dobstacles" "obstacles" nil :count 0)
    ("doctines" "doctrines" nil :count 0)
    ("dominnerd" "domineered" nil :count 0)
    ("domonies" "dominoes" nil :count 0)
    ("donw" "down" nil :count 0)
    ("dostoevvsky" "Dostoevsky" nil :count 0)
    ("dostoyevsky" "Dostoevsky" nil :count 2)
    ("doubtable" "dubitable" nil :count 1)
    ("doupt" "doubt" nil :count 0)
    ("doutbed" "doubted" nil :count 0)
    ("doutbful" "doubtful" nil :count 0)
    ("doutbing" "doubting" nil :count 0)
    ("downard" "downward" nil :count 0)
    ("dreaemd" "dreamed" nil :count 0)
    ("dresepct" "respect" nil :count 0)
    ("driectly" "directly" nil :count 0)
    ("drivien" "driven" nil :count 0)
    ("drving" "driving" nil :count 0)
    ("drwan" "drawn" nil :count 0)
    ("drwas" "draws" nil :count 0)
    ("dsecribes" "describes" nil :count 0)
    ("dtail" "detail" nil :count 0)
    ("dtate" "state" nil :count 0)
    ("dubitious" "dubious" nil :count 0)
    ("dubitous" "dubious" nil :count 0)
    ("duratino" "duration" nil :count 0)
    ("duy" "duty" nil :count 0)
    ("dvice" "advice" nil :count 0)
    ("dyansty" "Dynasty" nil :count 0)
    ("dyign" "dying" nil :count 0)
    ("dynasti" "Dynasty" nil :count 0)
    ("eaching" "teaching" nil :count 0)
    ("eachother" "each other" nil :count 1)
    ("ealready" "already" nil :count 0)
    ("eample" "Example" nil :count 0)
    ("eamples" "examples" nil :count 0)
    ("eand" "and" nil :count 3)
    ("eands" "ends" nil :count 0)
    ("earch" "arch" nil :count 0)
    ("earily" "eerily" nil :count 0)
    ("earllier" "Earlier" nil :count 0)
    ("eary" "early" nil :count 1)
    ("easatern" "Eastern" nil :count 0)
    ("eastrn" "Eastern" nil :count 0)
    ("eatingn" "eating" nil :count 0)
    ("eavluate" "evaluate" nil :count 0)
    ("ebcause" "because" nil :count 1)
    ("ebing" "being" nil :count 0)
    ("ebtween" "between" nil :count 0)
    ("eclicitng" "eliciting" nil :count 0)
    ("ecnomically" "economically" nil :count 0)
    ("ecognized" "recognized" nil :count 0)
    ("econic" "economic" nil :count 0)
    ("econimic" "economic" nil :count 0)
    ("ecoonmic" "economic" nil :count 0)
    ("eduational" "educational" nil :count 0)
    ("educatoin" "Education" nil :count 0)
    ("educatoinal" "educational" nil :count 0)
    ("eduction" "education" nil :count 8)
    ("eeloquent" "eloquent" nil :count 0)
    ("eerything" "everything" nil :count 0)
    ("effecitev" "effective" nil :count 1)
    ("effecitevly" "effectively" nil :count 0)
    ("effecively" "effectively" nil :count 0)
    ("effecs" "effects" nil :count 1)
    ("effets" "effects" nil :count 0)
    ("efffectively" "effectively" nil :count 0)
    ("efficien" "efficient" nil :count 0)
    ("eforts" "efforts" nil :count 0)
    ("egalitarinism" "egalitarianism" nil :count 0)
    ("egalitarisnim" "egalitarianism" nil :count 0)
    ("egarding" "regarding" nil :count 0)
    ("eglat" "Elgat" nil :count 0)
    ("egpy" "Egypt" nil :count 0)
    ("egpyt" "Egypt" nil :count 0)
    ("egyp" "Egypt" nil :count 2)
    ("egyption" "Egyptian" nil :count 0)
    ("ehter" "ether" nil :count 0)
    ("eigth" "eighth" nil :count 1)
    ("eimagoinie" "imagine" nil :count 0)
    ("eithgth" "eighth" nil :count 0)
    ("eivl" "evil" nil :count 0)
    ("elabores" "elaborates" nil :count 0)
    ("elabroative" "Elaborative" nil :count 0)
    ("elading" "leading" nil :count 0)
    ("eladrin" "Eldrin" nil :count 1)
    ("elarn" "learn" nil :count 0)
    ("elboration" "elaboration" nil :count 0)
    ("elcted" "elected" nil :count 0)
    ("eleemnt" "element" nil :count 0)
    ("eleemnts" "elements" nil :count 1)
    ("elemnt" "element" nil :count 0)
    ("elemtn" "element" nil :count 1)
    ("elemtns" "Elements" nil :count 0)
    ("elese" "else" nil :count 0)
    ("elevel" "level" nil :count 0)
    ("elft" "left" nil :count 0)
    ("elicides" "elicits" nil :count 0)
    ("elicminate" "eliminate" nil :count 0)
    ("elimate" "eliminate" nil :count 0)
    ("elimatino" "elimination" nil :count 0)
    ("elimation" "elimination" nil :count 1)
    ("elimatnion" "elimination" nil :count 0)
    ("eliminaties" "eliminates" nil :count 0)
    ("elisp" "Emacs-lisp" nil :count 8)
    ("elixer" "elixir" nil :count 1)
    ("elixers" "elixirs" nil :count 0)
    ("elixiers" "elixirs" nil :count 0)
    ("elizbeth" "Elizabeth" nil :count 0)
    ("elucdiate" "elucidate" nil :count 0)
    ("elucidatation" "elucidation" nil :count 0)
    ("elucidiation" "elucidation" nil :count 0)
    ("embodyment" "embodiment" nil :count 0)
    ("embroided" "embroidered" nil :count 0)
    ("emeages" "emerges" nil :count 0)
    ("emeregence" "emergence" nil :count 0)
    ("emhasis" "emphasis" nil :count 0)
    ("emic" "mic" nil :count 0)
    ("eminentily" "eminently" nil :count 0)
    ("emobiment" "embodiment" nil :count 0)
    ("emoions" "emotions" nil :count 0)
    ("emotiional" "emotional" nil :count 0)
    ("emotinal" "Emotional" nil :count 0)
    ("emotinoal" "emotional" nil :count 0)
    ("emotoin" "emotion" nil :count 0)
    ("emower" "empower" nil :count 0)
    ("empahsis" "emphasis" nil :count 0)
    ("emperical" "empirical" nil :count 0)
    ("emphaisez" "emphasize" nil :count 0)
    ("emphasiizes" "emphasizes" nil :count 0)
    ("emphasised" "emphasized" nil :count 0)
    ("emphrasize" "emphasize" nil :count 0)
    ("emphsasis" "emphasis" nil :count 0)
    ("empierical" "empirical" nil :count 0)
    ("empircally" "empirically" nil :count 0)
    ("empiricalicism" "empiricism" nil :count 0)
    ("empiricisms" "empiricism" nil :count 0)
    ("empiriscm" "empiricism" nil :count 0)
    ("empirisist" "Empiricist" nil :count 0)
    ("empoloy" "employ" nil :count 0)
    ("empolyed" "employed" nil :count 0)
    ("emporer" "emperor" nil :count 1)
    ("empre" "Empire" nil :count 0)
    ("empres" "empires" nil :count 0)
    ("emprical" "empirical" nil :count 0)
    ("emprically" "empirically" nil :count 0)
    ("emvodied" "embodied" nil :count 0)
    ("enailing" "entailing" nil :count 0)
    ("enails" "entails" nil :count 0)
    ("enclyclopedia" "encyclopedia" nil :count 1)
    ("encomassing" "encompassing" nil :count 0)
    ("encoutered" "encountered" nil :count 0)
    ("encuonter" "encounter" nil :count 0)
    ("encylopedia" "Encyclopedia" nil :count 0)
    ("endogeneous" "endogenous" nil :count 0)
    ("endogenis" "Endogenous" nil :count 0)
    ("endureable" "endurable" nil :count 0)
    ("enegry" "energy" nil :count 0)
    ("enforceent" "enforcement" nil :count 0)
    ("enforcig" "enforcing" nil :count 0)
    ("engagemetn" "engagement" nil :count 0)
    ("engagin" "engaging" nil :count 4)
    ("engendrs" "engenders" nil :count 0)
    ("engineeering" "engineering" nil :count 0)
    ("engineersed" "engineered" nil :count 0)
    ("enginneering" "engineering" nil :count 0)
    ("englis" "English" nil :count 0)
    ("english" "English" nil :count 57)
    ("engrained" "ingrained" nil :count 4)
    ("engurlfed" "engulfed" nil :count 0)
    ("enherently" "inherently" nil :count 0)
    ("enjoymen" "enjoyment" nil :count 0)
    ("enlighs" "Enlist" nil :count 0)
    ("enlightenmet" "Enlightenment" nil :count 0)
    ("enlightneing" "enlightening" nil :count 0)
    ("enniu" "ennui" nil :count 0)
    ("enprenprenurial" "entrepreneurial" nil :count 0)
    ("enquires" "inquires" nil :count 0)
    ("enquiry" "inquiry" nil :count 1)
    ("ental" "mental" nil :count 0)
    ("enthuastic" "enthusiastic" nil :count 0)
    ("entirtey" "entirety" nil :count 0)
    ("entngled" "entangled" nil :count 0)
    ("entnte" "entente" nil :count 0)
    ("entrepreneurialship" "entrepreneurial ship" nil :count 0)
    ("entreprenuer" "entrepreneur" nil :count 0)
    ("entreprenuership" "entrepreneurship" nil :count 0)
    ("entreprenur" "entrepreneur" nil :count 0)
    ("entreprenurial" "entrepreneurial" nil :count 0)
    ("entrepreunership" "Entrepreneurship" nil :count 0)
    ("entrepreural" "entrepreneurial" nil :count 0)
    ("entusiastic" "enthusiastic" nil :count 0)
    ("environemtanl" "environmental" nil :count 1)
    ("environmetnal" "environmental" nil :count 0)
    ("eonugh" "enough" nil :count 2)
    ("eotionally" "emotionally" nil :count 0)
    ("eour" "our" nil :count 0)
    ("epeireneces" "experiences" nil :count 0)
    ("eperience" "experience" nil :count 0)
    ("epertises" "expertise" nil :count 0)
    ("ephatic" "emphatic" nil :count 0)
    ("ephiphany" "Epiphany" nil :count 0)
    ("epicreanism" "Epicureanism" nil :count 0)
    ("epicruean" "Epicurean" nil :count 0)
    ("epictetetus" "Epictetus" nil :count 0)
    ("epicurans" "Epicureans" nil :count 0)
    ("epicurians" "Epicureans" nil :count 0)
    ("epistemilogically" "epistemologically" nil :count 0)
    ("epistemoligcal" "Epistemological" nil :count 0)
    ("epistemonlogical" "epistemological" nil :count 0)
    ("episteomoglical" "epistemological" nil :count 0)
    ("epistmic" "epistemic" nil :count 6)
    ("epiucruean" "Epicurean" nil :count 0)
    ("eplanation" "explanation" nil :count 0)
    ("epoligoe" "Epilogue" nil :count 0)
    ("eprssed" "expressed" nil :count 0)
    ("equatiosn" "equations" nil :count 0)
    ("equilibriums" "equilibria" nil :count 0)
    ("equire" "acquire" nil :count 0)
    ("equivalentsentences" "equivalent sentences" nil :count 0)
    ("erason" "reason" nil :count 0)
    ("ergu" "ergo" nil :count 0)
    ("erlations" "relations" nil :count 0)
    ("erminds" "reminds" nil :count 0)
    ("erorr" "error" nil :count 0)
    ("erroneos" "erroneous" nil :count 0)
    ("erroroneous" "erroneous" nil :count 0)
    ("erros" "errors" nil :count 0)
    ("erupoaen" "European" nil :count 0)
    ("escapet" "escape" nil :count 0)
    ("eschetalogical" "eschatological" nil :count 0)
    ("eseem" "esteem" nil :count 0)
    ("esle" "else" nil :count 0)
    ("especiallly" "especially" nil :count 0)
    ("especilaly" "especially" nil :count 0)
    ("espeicially" "especially" nil :count 0)
    ("espiceally" "especially" nil :count 0)
    ("espouces" "espouses" nil :count 0)
    ("esppeically" "especially" nil :count 0)
    ("essayr" "essays" nil :count 0)
    ("essentail" "essential" nil :count 0)
    ("essentiall" "essentially" nil :count 1)
    ("essentialy" "essentially" nil :count 0)
    ("essentils" "essentials" nil :count 0)
    ("essetneially" "essentially" nil :count 0)
    ("essnetials" "essentials" nil :count 0)
    ("esssay" "essay" nil :count 1)
    ("esssence" "essence" nil :count 0)
    ("esssene" "essence" nil :count 0)
    ("esssentially" "Essentially" nil :count 0)
    ("estaablish" "establish" nil :count 0)
    ("estableished" "Established" nil :count 0)
    ("establised" "established" nil :count 0)
    ("estalishes" "establishes" nil :count 0)
    ("estem" "esteem" nil :count 0)
    ("esure" "ensure" nil :count 0)
    ("etcetera" "et cetera" nil :count 1)
    ("eterpreise" "enterprise" nil :count 0)
    ("ethnical" "Ethical" nil :count 0)
    ("ethnicities" "ethnicity" nil :count 0)
    ("etiquite" "Etiquette" nil :count 0)
    ("etnire" "entire" nil :count 0)
    ("etymology" "Etymology" nil :count 0)
    ("europe" "Europe" nil :count 0)
    ("evalulated" "evaluated" nil :count 0)
    ("evalutes" "evaluates" nil :count 0)
    ("evaulation" "evaluation" nil :count 0)
    ("evaulations" "evaluations" nil :count 0)
    ("evdience" "evidence" nil :count 1)
    ("eveerything" "everything" nil :count 0)
    ("evenbe" "even be" nil :count 0)
    ("eventuall" "eventually" nil :count 1)
    ("eveolved" "evolved" nil :count 0)
    ("everone" "Everyone" nil :count 0)
    ("everthing" "everything" nil :count 0)
    ("everyhitng" "everything" nil :count 0)
    ("everynone" "everyone" nil :count 0)
    ("everythigng" "everything" nil :count 0)
    ("everythingelse" "everything else" nil :count 0)
    ("everytime" "every time" nil :count 0)
    ("eveyone" "everyone" nil :count 0)
    ("eveyr" "every" nil :count 0)
    ("evi" "evil" nil :count 0)
    ("evidecne" "evidence" nil :count 0)
    ("evideince" "evidence" nil :count 0)
    ("evidencelty" "evidently" nil :count 0)
    ("evidenet" "evident" nil :count 0)
    ("evidentin" "evident in" nil :count 0)
    ("evidience" "evidence" nil :count 0)
    ("evlope" "envelope" nil :count 0)
    ("evloved" "evolved" nil :count 0)
    ("evolutionarily" "Evolutionary" nil :count 0)
    ("evreything" "everything" nil :count 0)
    ("evualation" "evaluation" nil :count 0)
    ("ewant" "want" nil :count 0)
    ("exactlly" "exactly" nil :count 0)
    ("examle" "example" nil :count 4)
    ("examleps" "examples" nil :count 0)
    ("examles" "examples" nil :count 0)
    ("exampe" "example" nil :count 0)
    ("exaple" "example" nil :count 2)
    ("exaples" "examples" nil :count 0)
    ("exaxmple" "example" nil :count 0)
    ("exazmple" "example" nil :count 0)
    ("exceptionalistm" "exceptionalism" nil :count 0)
    ("exchanigng" "exchanging" nil :count 0)
    ("execrise" "exercise" nil :count 0)
    ("exeperience" "Experience" nil :count 0)
    ("exeperince" "experience" nil :count 0)
    ("exepiernece" "experience" nil :count 0)
    ("exepiriences" "experiences" nil :count 0)
    ("exeprience" "experience" nil :count 1)
    ("exepriential" "experiential" nil :count 0)
    ("exericse" "exercise" nil :count 0)
    ("exerience" "experience" nil :count 0)
    ("exhanage" "exchange" nil :count 0)
    ("exisensial" "existential" nil :count 0)
    ("exissts" "exists" nil :count 0)
    ("existene" "existence" nil :count 4)
    ("existentils" "existentials" nil :count 0)
    ("existince" "existence" nil :count 0)
    ("exlaims" "exclaims" nil :count 0)
    ("exlanations" "explanations" nil :count 0)
    ("exlcluded" "Excluded" nil :count 0)
    ("exloring" "exploring" nil :count 0)
    ("exluded" "excluded" nil :count 0)
    ("exmplification" "exemplification" nil :count 0)
    ("exntesion" "extension" nil :count 0)
    ("exogenis" "Exogenous" nil :count 0)
    ("expalanation" "explanation" nil :count 0)
    ("expalantions" "explanations" nil :count 0)
    ("expanatory" "explanatory" nil :count 0)
    ("expansve" "expansive" nil :count 0)
    ("expectatoins" "expectations" nil :count 0)
    ("expeerince" "experience" nil :count 0)
    ("expeinrence" "experience" nil :count 0)
    ("expeirence" "experience" nil :count 1)
    ("expeirnences" "experiences" nil :count 0)
    ("expereice" "experience" nil :count 0)
    ("expereicens" "exerience" nil :count 0)
    ("expereience" "experience" nil :count 0)
    ("expereince" "experience" nil :count 5)
    ("expereinces" "experiences" nil :count 3)
    ("experence" "experience" nil :count 0)
    ("experential" "Experiential" nil :count 0)
    ("experessions" "expressions" nil :count 0)
    ("expericing" "expressing" nil :count 0)
    ("experiece" "experience" nil :count 0)
    ("experieced" "experienced" nil :count 0)
    ("experieces" "experiences" nil :count 0)
    ("experiecnes" "experiences" nil :count 0)
    ("experieence" "experience" nil :count 0)
    ("experieince" "experience" nil :count 1)
    ("experieinced" "experienced" nil :count 0)
    ("experieinces" "experiences" nil :count 0)
    ("experieincing" "experiencing" nil :count 1)
    ("experiement" "experiment" nil :count 2)
    ("experiemnt" "experiment" nil :count 0)
    ("experiemtal" "experimental" nil :count 0)
    ("experiencine" "experience" nil :count 0)
    ("experiencinging" "experiencing" nil :count 0)
    ("experiencns" "experiences" nil :count 0)
    ("experiene" "experience" nil :count 2)
    ("experienece" "experience" nil :count 0)
    ("experienes" "experiences" nil :count 0)
    ("experientially" "experiential" nil :count 0)
    ("experince" "experience" nil :count 0)
    ("experinces" "experiences" nil :count 0)
    ("experinece" "Experience" nil :count 0)
    ("experineces" "experiences" nil :count 0)
    ("experirences" "experiences" nil :count 0)
    ("expesne" "expense" nil :count 0)
    ("expession" "expression" nil :count 0)
    ("expetise" "Expertise" nil :count 0)
    ("expience" "expense" nil :count 0)
    ("expienrec" "expire" nil :count 0)
    ("expierencce" "experience" nil :count 0)
    ("expierence" "experience" nil :count 0)
    ("expierences" "experiences" nil :count 0)
    ("expiermentation" "Experimentation" nil :count 0)
    ("expiernece" "experience" nil :count 0)
    ("expiernence" "experience" nil :count 0)
    ("expirments" "experiments" nil :count 0)
    ("explaiing" "explaining" nil :count 0)
    ("explaim" "explain" nil :count 0)
    ("explaing" "Explaining" nil :count 0)
    ("explaingin" "explaining" nil :count 0)
    ("explainin" "explaining" nil :count 0)
    ("explainng" "explaining" nil :count 0)
    ("explan" "explain" nil :count 0)
    ("explanatin" "explanation" nil :count 0)
    ("explanatino" "explanation" nil :count 0)
    ("explantion" "explanation" nil :count 1)
    ("explantions" "explanations" nil :count 0)
    ("explicatio" "explication" nil :count 0)
    ("explicfatin" "explication" nil :count 0)
    ("explicily" "explicitly" nil :count 0)
    ("explicitl" "explicitly" nil :count 0)
    ("explined" "explained" nil :count 0)
    ("exploratiy" "exploratory" nil :count 0)
    ("exploted" "exploited" nil :count 0)
    ("expost" "expose" nil :count 0)
    ("exprected" "expected" nil :count 0)
    ("expreession" "expression" nil :count 0)
    ("expresss" "expresses" nil :count 0)
    ("expresssions" "expressions" nil :count 0)
    ("expriences" "experiences" nil :count 0)
    ("exst" "exist" nil :count 0)
    ("extemely" "extremely" nil :count 0)
    ("extenal" "external" nil :count 0)
    ("extenral" "external" nil :count 1)
    ("extensinos" "extensions" nil :count 0)
    ("extention" "extension" nil :count 0)
    ("exteralism" "Externalism" nil :count 0)
    ("exterem" "extreme" nil :count 0)
    ("exteremly" "extremely" nil :count 0)
    ("exterme" "extreme" nil :count 0)
    ("extist" "exist" nil :count 0)
    ("extraversion" "extroversion" nil :count 0)
    ("extremem" "extreme" nil :count 0)
    ("extrinisic" "extrinsic" nil :count 0)
    ("exxplains" "explains" nil :count 0)
    ("exxplicated" "explicated" nil :count 0)
    ("exxpress" "express" nil :count 0)
    ("exxtant" "extant" nil :count 0)
    ("exxtend" "extend" nil :count 0)
    ("faciliated" "facilitated" nil :count 0)
    ("facilitis" "facilities" nil :count 0)
    ("facillitator" "facilitator" nil :count 0)
    ("factchecking" "fact-checking" nil :count 0)
    ("factic" "tactic" nil :count 0)
    ("factualy" "factually" nil :count 0)
    ("faculities" "faculties" nil :count 0)
    ("fadvantages" "advantages" nil :count 0)
    ("fae" "Faye" nil :count 3)
    ("faiing" "failing" nil :count 0)
    ("faileecause" "fleeces" nil :count 0)
    ("failes" "failed" nil :count 3)
    ("failling" "failing" nil :count 0)
    ("faillure" "failure" nil :count 0)
    ("failture" "failure" nil :count 0)
    ("failuer" "failure" nil :count 0)
    ("failuers" "failures" nil :count 0)
    ("fais" "Fairs" nil :count 0)
    ("faiure" "failure" nil :count 0)
    ("falland" "fall and" nil :count 0)
    ("falsehod" "falsehood" nil :count 1)
    ("famailiariyt" "FAMILIARITY" nil :count 0)
    ("familiariy" "familiarity" nil :count 0)
    ("fascientated" "fascinated" nil :count 0)
    ("fascillitated" "facilitated" nil :count 0)
    ("fascillitates" "facilitates" nil :count 0)
    ("fasion" "fashion" nil :count 0)
    ("fasle" "False" nil :count 0)
    ("fatalistism" "fatalistIsm" nil :count 0)
    ("favoriate" "favorite" nil :count 0)
    ("favories" "favorites" nil :count 0)
    ("favour" "favor" nil :count 0)
    ("favrorite" "Favorite" nil :count 0)
    ("fcct" "Fact" nil :count 0)
    ("feasble" "feasible" nil :count 0)
    ("feataures" "features" nil :count 0)
    ("featuress" "features" nil :count 0)
    ("featurs" "features" nil :count 0)
    ("feaures" "features" nil :count 0)
    ("feautre" "feature" nil :count 0)
    ("febuary" "February" nil :count 0)
    ("feedbeck" "feedback" nil :count 0)
    ("feelling" "feeling" nil :count 0)
    ("feformers" "reformers" nil :count 0)
    ("feigh" "feign" nil :count 0)
    ("feignnig" "feigning" nil :count 0)
    ("fere" "Free" nil :count 0)
    ("fervour" "fervor" nil :count 0)
    ("ffection" "affection" nil :count 0)
    ("fhow" "How" nil :count 0)
    ("fial" "fail" nil :count 0)
    ("fiarness" "fairness" nil :count 0)
    ("fiated" "fixated" nil :count 0)
    ("ficitin" "fiction" nil :count 0)
    ("figurhead" "figurehead" nil :count 0)
    ("filipinno" "Filipino" nil :count 0)
    ("filipionis" "Filipinos" nil :count 0)
    ("filmaker" "filmmaker" nil :count 0)
    ("finaijy" "finicky" nil :count 0)
    ("finaily" "finally" nil :count 0)
    ("finall" "Finally" nil :count 2)
    ("financies" "finances" nil :count 0)
    ("findmyself" "find myself" nil :count 0)
    ("fingerbrings" "fingerprints" nil :count 0)
    ("finibu" "Finibus" nil :count 1)
    ("finiteness" "finitude" nil :count 0)
    ("finititude" "finitude" nil :count 0)
    ("firbolg" "Firbolg" nil :count 0)
    ("firned" "friend" nil :count 0)
    ("firns" "ferns" nil :count 0)
    ("fisrt" "first" nil :count 1)
    ("fiuu" "full" nil :count 0)
    ("flabergasted" "flabbergasted" nil :count 0)
    ("flase" "false" nil :count 3)
    ("flatform" "platform" nil :count 0)
    ("fleibility" "flexibility" nil :count 0)
    ("flipino" "Filipino" nil :count 0)
    ("florda" "Florida" nil :count 0)
    ("flouirishing" "flourishing" nil :count 0)
    ("fnction" "function" nil :count 0)
    ("fo" "for" nil :count 88)
    ("foget" "forget" nil :count 1)
    ("folliwing" "following" nil :count 0)
    ("followign" "following" nil :count 0)
    ("followin" "following" nil :count 1)
    ("followingn" "FOLLOWING" nil :count 0)
    ("follwed" "followed" nil :count 0)
    ("fom" "from" nil :count 4)
    ("forcefuly" "Forcefully" nil :count 0)
    ("forceuful" "forceful" nil :count 0)
    ("forecasing" "forecasting" nil :count 0)
    ("foreseeably" "foreseeable" nil :count 0)
    ("foreward" "forward" nil :count 0)
    ("forgetten" "forgotten" nil :count 0)
    ("forgetton" "forgotten" nil :count 0)
    ("forgotton" "forgotten" nil :count 0)
    ("forhumans" "for humans" nil :count 0)
    ("foriegn" "foreign" nil :count 0)
    ("formatoin" "formation" nil :count 0)
    ("forme" "former" nil :count 1)
    ("forr" "for" nil :count 5)
    ("fortigfications" "fortifications" nil :count 0)
    ("fortigifcations" "fortifications" nil :count 0)
    ("fortuiious" "fortuitous" nil :count 0)
    ("forulation" "formulation" nil :count 0)
    ("forumlated" "formulated" nil :count 0)
    ("forwever" "forever" nil :count 0)
    ("fossis" "fossils" nil :count 0)
    ("foucoult" "Foucault" nil :count 1)
    ("fraom" "from" nil :count 0)
    ("fredom" "Freedom" nil :count 0)
    ("freedo" "freedom" nil :count 8)
    ("freeodm" "freedom" nil :count 0)
    ("freeom" "freedom" nil :count 0)
    ("freetibet" "Free Tibet" nil :count 0)
    ("freightened" "frightened" nil :count 0)
    ("freind" "friend" nil :count 0)
    ("freqency" "Frequency" nil :count 0)
    ("frequencu" "frequency" nil :count 0)
    ("frequet" "frequent" nil :count 0)
    ("frequiently" "frequently" nil :count 0)
    ("fresch" "French" nil :count 0)
    ("freshamn" "Freshman" nil :count 0)
    ("frm" "from" nil :count 8)
    ("froe" "fore" nil :count 0)
    ("fromo" "from" nil :count 0)
    ("fromt" "front" nil :count 4)
    ("fromwithin" "From Within" nil :count 0)
    ("fronteirs" "frontiers" nil :count 1)
    ("frontlines" "front-lines" nil :count 0)
    ("frontmatter" "front-matter" nil :count 0)
    ("froom" "from" nil :count 0)
    ("frst" "first" nil :count 0)
    ("fruqency" "frequency" nil :count 0)
    ("fruther" "further" nil :count 1)
    ("fugures" "futures" nil :count 0)
    ("fulfil" "fulfill" nil :count 0)
    ("fulfiling" "fulfilling" nil :count 0)
    ("fulfill’s" "fulfills" nil :count 0)
    ("fulfils" "fulfills" nil :count 0)
    ("fullly" "fully" nil :count 0)
    ("fuly" "fully" nil :count 1)
    ("funciton" "function" nil :count 0)
    ("funcitoning" "functioning" nil :count 0)
    ("functino" "function" nil :count 0)
    ("functinos" "functions" nil :count 0)
    ("functionaity" "functionality" nil :count 0)
    ("functionallity" "functionality" nil :count 0)
    ("fundamenal" "fundamental" nil :count 0)
    ("fundamnetal" "fundamental" nil :count 0)
    ("furrther" "further" nil :count 0)
    ("furtehr" "Further" nil :count 0)
    ("furture" "future" nil :count 0)
    ("futher" "further" nil :count 2)
    ("futhermore" "Furthermore" nil :count 0)
    ("futiity" "futility" nil :count 0)
    ("futrue" "future" nil :count 1)
    ("galipoli" "Gallipoli" nil :count 1)
    ("galucon" "Glaucon" nil :count 0)
    ("gan" "gain" nil :count 0)
    ("gaols" "goals" nil :count 1)
    ("garmets" "garments" nil :count 0)
    ("geeral" "general" nil :count 0)
    ("genderlect" "Genderlect" nil :count 0)
    ("genederd" "gendered" nil :count 0)
    ("geneerals" "generals" nil :count 0)
    ("genelaogy" "genealogy" nil :count 1)
    ("generalizatoin" "Generalization" nil :count 0)
    ("generartion" "generation" nil :count 0)
    ("generatl" "general" nil :count 0)
    ("genered" "gendered" nil :count 1)
    ("genocode" "Genocide" nil :count 0)
    ("genral" "general" nil :count 0)
    ("genrational" "generational" nil :count 0)
    ("genreateion" "generation" nil :count 0)
    ("genuienly" "genuinely" nil :count 0)
    ("geometic" "geometric" nil :count 0)
    ("geometicral" "Geometrical" nil :count 0)
    ("gerat" "great" nil :count 0)
    ("geratest" "greatest" nil :count 0)
    ("geting" "getting" nil :count 0)
    ("gettnig" "getting" nil :count 0)
    ("ghoutht" "thought" nil :count 0)
    ("gif" "GIF" nil :count 2)
    ("giong" "going" nil :count 0)
    ("github" "GitHub" nil :count 0)
    ("givve" "give" nil :count 0)
    ("gladnesss" "Gladness" nil :count 0)
    ("gneuinely" "genuinely" nil :count 1)
    ("goood" "Good" nil :count 1)
    ("gound" "ground" nil :count 0)
    ("gounds" "grounds" nil :count 0)
    ("gounrind" "grounding" nil :count 0)
    ("governace" "governance" nil :count 0)
    ("gramatically" "grammatically" nil :count 0)
    ("gramattical" "grammatical" nil :count 0)
    ("grammaticians" "gradations" nil :count 0)
    ("grandeois" "grandiose" nil :count 0)
    ("grandkids" "grandchildren" nil :count 0)
    ("graned" "granted" nil :count 0)
    ("grapsing" "Grasping" nil :count 0)
    ("gratidude" "gratitude" nil :count 0)
    ("gratiude" "gratitude" nil :count 0)
    ("greak" "Great" nil :count 0)
    ("greated" "greater" nil :count 0)
    ("greaterextent" "greater extent" nil :count 0)
    ("greatst" "greatest" nil :count 0)
    ("greeings" "Greetings" nil :count 0)
    ("greive" "grieve" nil :count 0)
    ("greiving" "grieving" nil :count 0)
    ("griding" "grinding" nil :count 0)
    ("groh" "growth" nil :count 1)
    ("groundwokr" "Groundwork" nil :count 3)
    ("groundworkw" "Groundwork" nil :count 0)
    ("grwoth" "growth" nil :count 2)
    ("guads" "guards" nil :count 0)
    ("guage" "gauge" nil :count 0)
    ("guaranted" "guaranteed" nil :count 0)
    ("guid" "guide" nil :count 1)
    ("guidlines" "Guidelines" nil :count 0)
    ("guil" "guilt" nil :count 0)
    ("guiltl" "guilt" nil :count 0)
    ("gulit" "guilt" nil :count 2)
    ("gulity" "guilty" nil :count 0)
    ("gven" "given" nil :count 0)
    ("gynmastics" "gymnastics" nil :count 0)
    ("gyopo" "goop" nil :count 0)
    ("habtiual" "habitual" nil :count 0)
    ("habts" "habits" nil :count 0)
    ("hadnt" "hadn't" nil :count 0)
    ("hae" "have" nil :count 9)
    ("haert" "heart" nil :count 1)
    ("haerts" "hearts" nil :count 0)
    ("haitting" "hitting" nil :count 0)
    ("haitus" "Hiatus" nil :count 1)
    ("hallal" "halal" nil :count 0)
    ("hallmak" "hallmark" nil :count 0)
    ("hallmkrk" "hallmark" nil :count 0)
    ("han" "than" nil :count 1)
    ("hangeul" "Hangul" nil :count 0)
    ("hangul" "Hangul" nil :count 0)
    ("hapen" "happen" nil :count 0)
    ("happend" "happened" nil :count 0)
    ("happesn" "happens" nil :count 0)
    ("happiess" "happiness" nil :count 0)
    ("happinees" "happiness" nil :count 0)
    ("happines" "happiness" nil :count 5)
    ("happinesses" "happiness" nil :count 0)
    ("happiniess" "happiness" nil :count 0)
    ("happinses" "happiness" nil :count 0)
    ("happniness" "happiness" nil :count 0)
    ("happning" "happening" nil :count 0)
    ("harddrive" "hard-drive" nil :count 0)
    ("hardwork" "hard work" nil :count 0)
    ("haremd" "Harmed" nil :count 0)
    ("hastle" "Hassle" nil :count 0)
    ("haughy" "haughty" nil :count 0)
    ("hav" "have" nil :count 23)
    ("havev" "have" nil :count 1)
    ("havppen" "happen" nil :count 0)
    ("havve" "have" nil :count 0)
    ("havving" "having" nil :count 0)
    ("healiing" "healing" nil :count 0)
    ("healtheir" "healthier" nil :count 0)
    ("hearless" "heartless" nil :count 0)
    ("heavan" "Heaven" nil :count 0)
    ("heavyhanded" "heavy-handed" nil :count 1)
    ("hece" "hence" nil :count 0)
    ("hecktic" "hectic" nil :count 0)
    ("heconism" "Hedonism" nil :count 0)
    ("hedoinism" "Hedonism" nil :count 0)
    ("hedonisitc" "hedonistic" nil :count 0)
    ("hedonistics" "hedonistic" nil :count 0)
    ("hedonoism" "hedonism" nil :count 0)
    ("heiararcical" "hierarchical" nil :count 0)
    ("heirarchical" "hierarchical" nil :count 2)
    ("heirarchically" "hierarchically" nil :count 0)
    ("heirarchies" "Hierarchies" nil :count 0)
    ("heirarchism" "hierarchies" nil :count 0)
    ("heirarchy" "hierarchy" nil :count 8)
    ("hend" "hand" nil :count 0)
    ("hene" "hence" nil :count 1)
    ("henious" "heinous" nil :count 0)
    ("heriarch" "hierarchy" nil :count 0)
    ("heriditary" "hereditary" nil :count 0)
    ("heritability" "irritability" nil :count 0)
    ("heritagae" "heritage" nil :count 0)
    ("heritgae" "heritage" nil :count 0)
    ("heritige" "heritage" nil :count 0)
    ("hestitate" "hesitate" nil :count 0)
    ("heternomy" "heteronomy" nil :count 0)
    ("heterogenous" "heterogeneous" nil :count 0)
    ("hich" "which" nil :count 2)
    ("hieraarchies" "hierarchies" nil :count 0)
    ("hierarchicalrelationship" "hierarchical relationship" nil :count 0)
    ("higely" "highly" nil :count 0)
    ("highet" "highest" nil :count 0)
    ("highschool" "high school" nil :count 3)
    ("higly" "highly" nil :count 0)
    ("himeslf" "himself" nil :count 0)
    ("himsel" "himself" nil :count 0)
    ("hinddrances" "hindrances" nil :count 0)
    ("hindset" "hindsight" nil :count 0)
    ("hisory" "history" nil :count 0)
    ("hisotrical" "historical" nil :count 0)
    ("hisotry" "History" nil :count 1)
    ("hisstory" "history" nil :count 0)
    ("histoical" "historical" nil :count 0)
    ("histoircal" "historical" nil :count 0)
    ("historica" "historical" nil :count 0)
    ("historicam" "historical" nil :count 0)
    ("historican" "historian" nil :count 0)
    ("historicans" "historians" nil :count 0)
    ("historicial" "historical" nil :count 0)
    ("historicis" "historicism" nil :count 0)
    ("historicismn" "historicism" nil :count 0)
    ("historicisms" "historicists" nil :count 1)
    ("historicizating" "Historicizing" nil :count 0)
    ("historicl" "historical" nil :count 1)
    ("historicst" "historicist" nil :count 0)
    ("historicsts" "historicists" nil :count 0)
    ("historiogrpahy" "historiography" nil :count 0)
    ("histoy" "history" nil :count 2)
    ("histoyr" "history" nil :count 0)
    ("histrocian" "historian" nil :count 0)
    ("histroical" "historical" nil :count 0)
    ("histroricism" "historicism" nil :count 0)
    ("histroy" "history" nil :count 0)
    ("hithero" "hitherto" nil :count 0)
    ("hiting" "hitting" nil :count 0)
    ("hitorigraphical" "historiographical" nil :count 0)
    ("hoeps" "hopes" nil :count 0)
    ("hoewver" "However" nil :count 1)
    ("hogh" "high" nil :count 0)
    ("hoistic" "Holistic" nil :count 1)
    ("holdiing" "holding" nil :count 0)
    ("holositic" "holistic" nil :count 0)
    ("homeeland" "homeland" nil :count 0)
    ("homogenous" "homogeneous" nil :count 0)
    ("honorifcis" "honorifics" nil :count 0)
    ("hoome" "home" nil :count 0)
    ("hopeflu" "hopeful" nil :count 0)
    ("hopfully" "hopefully" nil :count 0)
    ("hornorifics" "honorifics" nil :count 0)
    ("hostiity" "hostility" nil :count 0)
    ("houghts" "thoughts" nil :count 0)
    ("hourse" "house" nil :count 1)
    ("howerver" "however" nil :count 0)
    ("howeveer" "however" nil :count 0)
    ("howevr" "however" nil :count 1)
    ("howowever" "However" nil :count 0)
    ("howver" "however" nil :count 2)
    ("hpyothesis" "hypothesis" nil :count 0)
    ("hpyothetical" "hypothetical" nil :count 0)
    ("hrystak" "Hrytsak" nil :count 0)
    ("hsa" "has" nil :count 1)
    ("hsi" "his" nil :count 3)
    ("hsitorian" "historian" nil :count 0)
    ("hsitorical" "historical" nil :count 0)
    ("hsitorically" "historically" nil :count 0)
    ("htat" "that" nil :count 3)
    ("hte" "hate" nil :count 15)
    ("huamn" "human" nil :count 2)
    ("huamns" "humans" nil :count 0)
    ("huamsn" "Hamsun" nil :count 2)
    ("huan" "Human" nil :count 0)
    ("hugh" "hue" nil :count 0)
    ("hume" "Hume" nil :count 19)
    ("humling" "Humbling" nil :count 0)
    ("humn" "human" nil :count 0)
    ("humna" "Human" nil :count 0)
    ("humunculus" "homunculus" nil :count 0)
    ("hungray" "Hungary" nil :count 0)
    ("husay" "Husayn" nil :count 0)
    ("husseins" "Hussein" nil :count 0)
    ("hutckins" "Hutchins" nil :count 0)
    ("hvae" "have" nil :count 1)
    ("hwne" "when" nil :count 0)
    ("hwo" "how" nil :count 4)
    ("hy" "my" nil :count 12)
    ("hyerbolic" "hyperbolic" nil :count 0)
    ("hypotheis" "hypothesis" nil :count 0)
    ("hypthens" "Hyphens" nil :count 0)
    ("iased" "based" nil :count 0)
    ("idae" "idea" nil :count 0)
    ("idaes" "ideas" nil :count 1)
    ("idealogical" "ideological" nil :count 0)
    ("idealogy" "ideology" nil :count 0)
    ("ideass" "ideas" nil :count 0)
    ("ideiologies" "ideologies" nil :count 0)
    ("idelogies" "ideologies" nil :count 0)
    ("ideneityt" "identity" nil :count 0)
    ("idenetity" "identity" nil :count 0)
    ("idenittiy" "identity" nil :count 0)
    ("idenitty" "identity" nil :count 1)
    ("idenity" "identity" nil :count 0)
    ("idenityt" "identity" nil :count 0)
    ("identaical" "identical" nil :count 0)
    ("idententiy" "identity" nil :count 0)
    ("identieis" "identities" nil :count 0)
    ("identifable" "identifiable" nil :count 0)
    ("identifiiable" "identifiable" nil :count 0)
    ("identitcal" "identical" nil :count 2)
    ("identitical" "identical" nil :count 0)
    ("identitty" "identity" nil :count 0)
    ("identityy" "identity" nil :count 0)
    ("identiy" "identify" nil :count 0)
    ("iderction" "direction" nil :count 0)
    ("idetntiy" "identity" nil :count 0)
    ("idintity" "Identity" nil :count 0)
    ("idiologies" "ideologies" nil :count 0)
    ("idnetity" "identity" nil :count 0)
    ("idologize" "idolize" nil :count 0)
    ("idomatic" "idiomatic" nil :count 0)
    ("idur" "Idun" nil :count 0)
    ("iedioloical" "ideological" nil :count 0)
    ("ieffable" "ineffable" nil :count 0)
    ("ientirely" "entirely" nil :count 0)
    ("ifnla" "final" nil :count 0)
    ("ifthey" "if they" nil :count 0)
    ("ifwe" "if we" nil :count 0)
    ("ignornance" "ignorance" nil :count 0)
    ("iimportant" "important" nil :count 0)
    ("iin" "in" nil :count 1)
    ("iknowledge" "knowledge" nil :count 0)
    ("illegitmate" "illegitimate" nil :count 0)
    ("illess" "illness" nil :count 0)
    ("illiad" "Iliad" nil :count 0)
    ("illinoius" "Illinois" nil :count 0)
    ("illitearte" "illiterate" nil :count 0)
    ("illlusions" "illusions" nil :count 0)
    ("imaginehow" "imagine how" nil :count 0)
    ("imaginoation" "imagination" nil :count 0)
    ("imagionation" "imagination" nil :count 0)
    ("imapcted" "impacted" nil :count 0)
    ("imatations" "imitations" nil :count 0)
    ("imediate" "immediate" nil :count 0)
    ("imeediate" "immediate" nil :count 0)
    ("imlications" "implications" nil :count 0)
    ("imlicit" "implicit" nil :count 0)
    ("imlies" "implies" nil :count 0)
    ("imlplement" "implement" nil :count 0)
    ("imlse" "impulse" nil :count 0)
    ("immateiral" "immaterial" nil :count 0)
    ("immates" "imitates" nil :count 0)
    ("immediateble" "immediately" nil :count 0)
    ("immediatelly" "immediately" nil :count 0)
    ("immediatley" "immediately" nil :count 0)
    ("immeiate" "immediate" nil :count 0)
    ("immeidate" "immediate" nil :count 0)
    ("immeidately" "immediately" nil :count 0)
    ("immitates" "imitates" nil :count 0)
    ("immortailty" "immortality" nil :count 0)
    ("immortility" "immortality" nil :count 0)
    ("immportailty" "immortality" nil :count 0)
    ("immportality" "immortality" nil :count 0)
    ("immutale" "immutable" nil :count 0)
    ("imopse" "impose" nil :count 0)
    ("impacct" "impact" nil :count 0)
    ("imperect" "imperfect" nil :count 0)
    ("imperiative" "imperative" nil :count 0)
    ("imperical" "imperial" nil :count 0)
    ("impications" "implications" nil :count 0)
    ("implementatin" "implementation" nil :count 0)
    ("implentation" "implantation" nil :count 0)
    ("imples" "implies" nil :count 0)
    ("implicaations" "implications" nil :count 0)
    ("implicaions" "implications" nil :count 0)
    ("implicatinos" "implications" nil :count 0)
    ("implicity" "implicitly" nil :count 2)
    ("impolitness" "impoliteness" nil :count 0)
    ("imporant" "important" nil :count 1)
    ("imporatnt" "important" nil :count 0)
    ("importnaat" "important" nil :count 0)
    ("importnat" "important" nil :count 10)
    ("importnatly" "importantly" nil :count 3)
    ("imposible" "impossible" nil :count 0)
    ("imposibng" "imposing" nil :count 0)
    ("impossile" "impossible" nil :count 0)
    ("impotentnce" "impotence" nil :count 0)
    ("imppossibilities" "impossibilities" nil :count 0)
    ("imprenitrability" "impenetrability" nil :count 0)
    ("impresions" "impressions" nil :count 0)
    ("impressin" "impressing" nil :count 0)
    ("impresssion" "impression" nil :count 0)
    ("improbabiities" "improbabilities" nil :count 0)
    ("improdudent" "imprudent" nil :count 0)
    ("improtanc" "importance" nil :count 0)
    ("improtant" "important" nil :count 0)
    ("impssible" "impassible" nil :count 0)
    ("impulsitivy" "impulsivity" nil :count 0)
    ("impy" "imply" nil :count 0)
    ("imulse" "Impulse" nil :count 0)
    ("ina" "Ina" nil :count 7)
    ("inablility" "inability" nil :count 0)
    ("inaccesible" "inaccessible" nil :count 0)
    ("inaccessibile" "inaccessible" nil :count 0)
    ("inaccessibilty" "inaccessibility" nil :count 0)
    ("inadaquacy" "inadequacy" nil :count 2)
    ("inanswerable" "Unanswerable" nil :count 0)
    ("inapproporiate" "inappropriate" nil :count 0)
    ("incapiable" "incapable" nil :count 0)
    ("incedulous" "incredulous" nil :count 0)
    ("incentivized" "incentivize" nil :count 1)
    ("incentivizsed" "incentivized" nil :count 0)
    ("incessesnt" "incessant" nil :count 0)
    ("incessiantly" "incessantly" nil :count 0)
    ("incholate" "inchoate" nil :count 0)
    ("incidate" "indicate" nil :count 0)
    ("incividual" "individual" nil :count 0)
    ("inclinatoin" "inclination" nil :count 5)
    ("inclinatoins" "inclinations" nil :count 0)
    ("inclinaton" "inclination" nil :count 0)
    ("inclincation" "inclination" nil :count 0)
    ("inclineed" "inclined" nil :count 0)
    ("inclintatin" "inclination" nil :count 0)
    ("inclnation" "inclination" nil :count 0)
    ("incloinlation" "inclination" nil :count 0)
    ("incluence" "influence" nil :count 0)
    ("incommprehensible" "incomprehensible" nil :count 0)
    ("inconcsitency" "inconsistency" nil :count 0)
    ("inconsisent" "inconsistent" nil :count 0)
    ("inconsistentcies" "inconsistencies" nil :count 1)
    ("inconsistentcy" "inconsistency" nil :count 2)
    ("inconssitency" "inconsistency" nil :count 0)
    ("incrartnation" "incarnation" nil :count 0)
    ("incrdible" "incredible" nil :count 0)
    ("incude" "include" nil :count 0)
    ("incusive" "inclusive" nil :count 0)
    ("indded" "Indeed" nil :count 0)
    ("indea" "idea" nil :count 0)
    ("indebed" "indebted" nil :count 0)
    ("indebedness" "indebtedness" nil :count 0)
    ("indebtness" "indebtedness" nil :count 0)
    ("inded" "Indeed" nil :count 0)
    ("indee" "Indeed" nil :count 0)
    ("indefinaable" "indefinable" nil :count 0)
    ("indefiniable" "indefinable" nil :count 0)
    ("indefinte" "indefinite" nil :count 0)
    ("indenpendent" "independent" nil :count 0)
    ("indepdendence" "Independence" nil :count 0)
    ("indepdenent" "independent" nil :count 0)
    ("indepdnecne" "independence" nil :count 0)
    ("indepdnence" "independence" nil :count 0)
    ("indepdnent" "independent" nil :count 2)
    ("indepedence" "Independence" nil :count 0)
    ("indepedenence" "independence" nil :count 1)
    ("indepedenet" "independent" nil :count 0)
    ("indepedente" "independent" nil :count 0)
    ("indepence" "indecency" nil :count 0)
    ("independdent" "independent" nil :count 0)
    ("independelty" "independent" nil :count 0)
    ("independencen" "Independence" nil :count 0)
    ("independnce" "Independence" nil :count 0)
    ("indepenednet" "independent" nil :count 0)
    ("indepenent" "independent" nil :count 1)
    ("indepently" "independently" nil :count 0)
    ("inderect" "indirect" nil :count 0)
    ("indescriabable" "indescribable" nil :count 0)
    ("indetermine" "indeterminate" nil :count 0)
    ("indfinite" "indefinite" nil :count 0)
    ("indiactive" "indicative" nil :count 0)
    ("indicentally" "incidentally" nil :count 0)
    ("indicents" "Indigents" nil :count 0)
    ("indiciating" "indicating" nil :count 0)
    ("indiciative" "indicative" nil :count 0)
    ("indiffeenrets" "indifferents" nil :count 0)
    ("indiffeerents" "indifferents" nil :count 0)
    ("indiffents" "Indifferents" nil :count 0)
    ("indifferens" "indifferents" nil :count 2)
    ("indifferets" "indifferents" nil :count 0)
    ("indifferns" "indifferents" nil :count 0)
    ("indiffernts" "indifferents" nil :count 3)
    ("indiffierent" "indifferent" nil :count 0)
    ("indigenouis" "indigenous" nil :count 0)
    ("indiosyncracies" "idiosyncrasies" nil :count 0)
    ("indiretly" "indirectly" nil :count 1)
    ("indisputablly" "indisputably" nil :count 0)
    ("indivdiual" "individual" nil :count 2)
    ("individals" "individuals" nil :count 0)
    ("individaul" "individual" nil :count 1)
    ("individla" "individual" nil :count 0)
    ("individuald" "individuals" nil :count 0)
    ("individualizstic" "individualistic" nil :count 0)
    ("indiviuals" "individuals" nil :count 0)
    ("indivual" "individual" nil :count 0)
    ("indivudals" "individuals" nil :count 1)
    ("indivudual" "individual" nil :count 0)
    ("indivuduals" "individuals" nil :count 0)
    ("indubitability" "indubitable" nil :count 0)
    ("indvidiauls" "individuals" nil :count 0)
    ("indviduals" "individuals" nil :count 0)
    ("indviidaul" "individual" nil :count 0)
    ("indviidual" "individual" nil :count 0)
    ("ineed" "Indeed" nil :count 3)
    ("ineffeciencies" "inefficiencies" nil :count 0)
    ("ineft" "inept" nil :count 0)
    ("inepdentce" "Independence" nil :count 0)
    ("ineracted" "interacted" nil :count 0)
    ("inerence" "inference" nil :count 0)
    ("inevitablity" "inevitability" nil :count 0)
    ("inevtiability" "inevitability" nil :count 0)
    ("inevtiable" "inevitable" nil :count 0)
    ("infactuated" "infatuated" nil :count 0)
    ("infantilized" "infantilize" nil :count 0)
    ("infeasibility" "in feasibility" nil :count 0)
    ("inferennce" "inference" nil :count 0)
    ("inferioirity" "inferiority" nil :count 0)
    ("inferiorversionof" "introversion" nil :count 0)
    ("infinatum" "infinitum" nil :count 3)
    ("infinitepossiblities" "invincibility’s" nil :count 0)
    ("infinitte" "infinite" nil :count 0)
    ("infintesimal" "infinitesimal" nil :count 0)
    ("infititely" "infinitely" nil :count 0)
    ("influcen" "influence" nil :count 1)
    ("influcence" "influence" nil :count 0)
    ("influcend" "influenced" nil :count 1)
    ("influeced" "influenced" nil :count 0)
    ("influencd" "influenced" nil :count 1)
    ("influenceing" "influencing" nil :count 0)
    ("influend" "influenced" nil :count 0)
    ("influended" "influenced" nil :count 0)
    ("influents" "influences" nil :count 0)
    ("informatino" "information" nil :count 6)
    ("informationeven" "information even" nil :count 0)
    ("informatl" "informal" nil :count 0)
    ("infosar" "insofar" nil :count 0)
    ("infrantrymen" "infantrymen" nil :count 1)
    ("infrings" "infringes" nil :count 0)
    ("infromation" "information" nil :count 0)
    ("infuencers" "influencers" nil :count 0)
    ("infulence" "influence" nil :count 0)
    ("infulenced" "influenced" nil :count 0)
    ("inherint" "inherent" nil :count 0)
    ("inheris" "inherits" nil :count 0)
    ("inheritence" "inheritance" nil :count 0)
    ("inifinatum" "infinitum" nil :count 0)
    ("inifnity" "infinity" nil :count 0)
    ("inintelligible" "unintelligible" nil :count 0)
    ("initail" "initial" nil :count 0)
    ("inital" "initial" nil :count 1)
    ("initiall" "initially" nil :count 0)
    ("initialy" "initially" nil :count 0)
    ("initiatve" "initiative" nil :count 0)
    ("initlal" "initial" nil :count 0)
    ("inividausl" "individuals" nil :count 0)
    ("injstice" "injustice" nil :count 0)
    ("injusstice" "injustice" nil :count 0)
    ("injust" "injustice" nil :count 0)
    ("injusticies" "injustices" nil :count 0)
    ("innateism" "innate-ism" nil :count 0)
    ("innclude" "include" nil :count 0)
    ("inndeed" "indeed" nil :count 0)
    ("innnocence" "innocence" nil :count 0)
    ("innput" "input" nil :count 0)
    ("innto" "into" nil :count 0)
    ("innured" "inured" nil :count 0)
    ("inpendent" "independent" nil :count 0)
    ("inpired" "inspired" nil :count 0)
    ("inquality" "inequality" nil :count 0)
    ("inquiery" "inquiry" nil :count 2)
    ("inquiiry" "inquiry" nil :count 0)
    ("inquireies" "inquiries" nil :count 0)
    ("inquiress" "inquires" nil :count 0)
    ("inquirying" "inquiring" nil :count 0)
    ("inquisitivve" "inquisitive" nil :count 0)
    ("inreasingly" "increasingly" nil :count 0)
    ("inrofmration" "information" nil :count 0)
    ("insance" "instance" nil :count 2)
    ("inscrutiable" "inscrutable" nil :count 0)
    ("inscrutible" "inscrutable" nil :count 0)
    ("insead" "instead" nil :count 1)
    ("inseparaable" "inseparable" nil :count 0)
    ("inseparateble" "inseparable" nil :count 0)
    ("inseperable" "inseparable" nil :count 0)
    ("inseperably" "inseparably" nil :count 0)
    ("insepraaable" "inseparable" nil :count 0)
    ("insignt" "insight" nil :count 0)
    ("insintight" "insight" nil :count 0)
    ("insipiring" "inspiring" nil :count 0)
    ("insisent" "insistent" nil :count 0)
    ("insnace" "instance" nil :count 0)
    ("insnpiried" "inspired" nil :count 0)
    ("insouciance" "Insouciance" nil :count 0)
    ("inspiried" "inspirited" nil :count 2)
    ("inspriing" "Inspiring" nil :count 0)
    ("insprised" "inspired" nil :count 0)
    ("instace" "instance" nil :count 0)
    ("instaed" "instead" nil :count 2)
    ("instagram" "Instagram" nil :count 12)
    ("instanc" "instance" nil :count 0)
    ("instane" "instance" nil :count 3)
    ("instanec" "instance" nil :count 0)
    ("instanes" "instances" nil :count 0)
    ("instantiatieed" "instantiated" nil :count 0)
    ("instects" "insects" nil :count 0)
    ("insticts" "instincts" nil :count 0)
    ("instnace" "instance" nil :count 2)
    ("instnaecs" "instances" nil :count 0)
    ("instrincts" "instincts" nil :count 0)
    ("instrinsically" "intrinsically" nil :count 3)
    ("instructore" "instructor" nil :count 0)
    ("instructrions" "instructions" nil :count 0)
    ("instruentally" "instrumentally" nil :count 0)
    ("instrumnetally" "instrumentally" nil :count 0)
    ("instrutable" "Inscrutable" nil :count 0)
    ("instrutions" "instructions" nil :count 0)
    ("insttrumenal" "instrumental" nil :count 0)
    ("insttutions" "institutions" nil :count 0)
    ("instution" "institution" nil :count 0)
    ("instutitions" "institutions" nil :count 0)
    ("insufficeint" "insufficient" nil :count 0)
    ("insufficent" "insufficient" nil :count 0)
    ("insufficiencies" "insufficiency’s" nil :count 0)
    ("insufficienies" "insufficiency" nil :count 0)
    ("insufficinet" "insufficient" nil :count 0)
    ("insuing" "ensuing" nil :count 0)
    ("inteded" "intended" nil :count 0)
    ("inteface" "interface" nil :count 0)
    ("intelectual" "intellectual" nil :count 1)
    ("intelleccfual" "intellectual" nil :count 0)
    ("intellectuailsm" "intellectualism" nil :count 0)
    ("intellectualims" "intellectualism" nil :count 0)
    ("intellectuion" "intellection" nil :count 0)
    ("intellecutal" "intellectual" nil :count 0)
    ("intellgibiilty" "intelligibility" nil :count 0)
    ("intellgible" "intelligible" nil :count 0)
    ("intellgience" "intelligence" nil :count 0)
    ("intellibility" "intelligibility" nil :count 0)
    ("intellible" "intelligible" nil :count 0)
    ("intelligble" "intelligible" nil :count 0)
    ("intelligibilty" "intelligibility" nil :count 0)
    ("intelligibliiity" "intelligibility" nil :count 0)
    ("intellliglible" "intelligible" nil :count 0)
    ("intensitfied" "intensified" nil :count 0)
    ("interacations" "interactions" nil :count 0)
    ("interally" "internally" nil :count 0)
    ("interdepencency" "interdependence" nil :count 0)
    ("interdiscilnary" "Interdisciplinary" nil :count 0)
    ("interdiscinplinary" "Interdisciplinary" nil :count 0)
    ("interdisciplilnary" "interdisciplinary" nil :count 0)
    ("interdiscplinailiy" "interdisciplinarily" nil :count 0)
    ("interdiscplinary" "interdisciplinary" nil :count 1)
    ("interdisplinarily" "interdisciplinary" nil :count 0)
    ("interdisplinary" "interdisciplinary" nil :count 1)
    ("interecting" "intersecting" nil :count 0)
    ("intereesting" "interesting" nil :count 0)
    ("interere" "interfere" nil :count 0)
    ("interesing" "interesting" nil :count 0)
    ("interestes" "interests" nil :count 0)
    ("interet" "interest" nil :count 0)
    ("intergration" "integration" nil :count 0)
    ("interloculator" "interlocutor" nil :count 1)
    ("interlocuter" "interlocutor" nil :count 2)
    ("intermidary" "intermediary" nil :count 0)
    ("internalism" "Internalism" nil :count 0)
    ("internalizatoin" "internalization" nil :count 1)
    ("internatial" "international" nil :count 0)
    ("internatilze" "internalize" nil :count 0)
    ("interneter" "internet" nil :count 0)
    ("interpeet" "interpret" nil :count 0)
    ("interperatoin" "interpretation" nil :count 0)
    ("interperet" "interpret" nil :count 0)
    ("interperosonal" "Interpersonal" nil :count 0)
    ("interpertation" "interpretation" nil :count 0)
    ("interpreation" "interpretation" nil :count 4)
    ("interpreations" "interpretations" nil :count 0)
    ("interpreattions" "interpretations" nil :count 0)
    ("interpretaiton" "interpretation" nil :count 2)
    ("interpretaive" "interpretative" nil :count 0)
    ("interpretated" "interpreted" nil :count 0)
    ("interpretatin" "interpretation" nil :count 1)
    ("interpretatiosn" "interpretations" nil :count 0)
    ("interpretatoins" "interpretations" nil :count 1)
    ("interprt" "interpret" nil :count 0)
    ("interrogatation" "interrogation" nil :count 0)
    ("interseting" "interesting" nil :count 0)
    ("intersetingly" "Interestingly" nil :count 0)
    ("intersets" "interests" nil :count 0)
    ("interst" "interest" nil :count 5)
    ("intersted" "interested" nil :count 0)
    ("intersting" "interesting" nil :count 2)
    ("interupting" "interrupting" nil :count 0)
    ("interveiewee" "Interviewee" nil :count 0)
    ("interviees" "interviewees" nil :count 0)
    ("intervieiwng" "interviewing" nil :count 0)
    ("interviewrs" "interviewers" nil :count 0)
    ("intesrets" "interests" nil :count 0)
    ("intested" "interested" nil :count 0)
    ("inteviewees" "interviewees" nil :count 0)
    ("inthe" "anther" nil :count 0)
    ("intial" "initial" nil :count 0)
    ("inticingly" "enticingly" nil :count 0)
    ("intiial" "initial" nil :count 0)
    ("intillegence" "intelligence" nil :count 0)
    ("intimindating" "intimidating" nil :count 0)
    ("intion" "intention" nil :count 0)
    ("intiotoins" "intuitions" nil :count 0)
    ("intiving" "inviting" nil :count 0)
    ("intoduction" "Introduction" nil :count 0)
    ("intolerabel" "intolerable" nil :count 0)
    ("intracacy" "intricacy" nil :count 0)
    ("intrapersoanlly" "intrapersonally" nil :count 0)
    ("intrenally" "internally" nil :count 0)
    ("intricated" "intricate" nil :count 0)
    ("intrinstic" "intrinsic" nil :count 1)
    ("intrinstically" "intrinsically" nil :count 0)
    ("intrisically" "intrinsically" nil :count 0)
    ("intrisitc" "inartistic" nil :count 0)
    ("intrnal" "internal" nil :count 0)
    ("intrnsic" "intrinsic" nil :count 0)
    ("introcuded" "introduced" nil :count 0)
    ("introdicton" "Introduction" nil :count 0)
    ("introductino" "introduction" nil :count 0)
    ("introductoin" "Introduction" nil :count 0)
    ("intsified" "intensified" nil :count 0)
    ("intuiotns" "intuits" nil :count 0)
    ("intuitin" "intuiting" nil :count 0)
    ("intuitino" "intuition" nil :count 0)
    ("intuitionsc" "intuitions" nil :count 0)
    ("intuitivelly" "intuitively" nil :count 0)
    ("intuitoin" "intuition" nil :count 0)
    ("intuitoins" "intuitions" nil :count 0)
    ("intuiton" "intuition" nil :count 0)
    ("intuitons" "intuitions" nil :count 0)
    ("intutiive" "Intuitive" nil :count 0)
    ("intution" "intuition" nil :count 0)
    ("intutions" "intuitions" nil :count 0)
    ("intutive" "intuitive" nil :count 0)
    ("inuition" "intuition" nil :count 1)
    ("invaluabe" "invaluable" nil :count 0)
    ("invation" "invasion" nil :count 0)
    ("inventiably" "inevitably" nil :count 0)
    ("inversily" "inversely" nil :count 0)
    ("investiage" "investigate" nil :count 0)
    ("investiages" "investigates" nil :count 0)
    ("investiagion" "investigation" nil :count 0)
    ("investigable" "investigate" nil :count 2)
    ("investigting" "investigating" nil :count 0)
    ("inveted" "inverted" nil :count 0)
    ("invidiaul" "individual" nil :count 0)
    ("invidiaulized" "individualized" nil :count 0)
    ("invidiausl" "invidiously" nil :count 1)
    ("invididuals" "individuals" nil :count 0)
    ("invidiousl" "individuals" nil :count 0)
    ("invidiuals" "individuals" nil :count 0)
    ("invidual" "individual" nil :count 0)
    ("invidual's" "individual's" nil :count 0)
    ("inviduals" "individuals" nil :count 0)
    ("inviidauls" "individuals" nil :count 0)
    ("invisage" "envisage" nil :count 0)
    ("invisioning" "envisioning" nil :count 0)
    ("invivacious" "in vivacious" nil :count 0)
    ("invlove" "involve" nil :count 0)
    ("invloved" "involved" nil :count 2)
    ("invloves" "involves" nil :count 0)
    ("invove" "involve" nil :count 0)
    ("invovement" "involvement" nil :count 0)
    ("invtiing" "inviting" nil :count 0)
    ("irl" "in real life" nil :count 1)
    ("ironcically" "ironically" nil :count 0)
    ("irraitated" "irritated" nil :count 0)
    ("irredicuble" "irreducible" nil :count 0)
    ("irreelevant" "irrelevant" nil :count 0)
    ("irrelvant" "irrelevant" nil :count 0)
    ("irresistably" "irresistibly" nil :count 0)
    ("irreversibiilty" "irreversibility" nil :count 0)
    ("isall" "is all" nil :count 0)
    ("islamid" "Islamic" nil :count 0)
    ("ismore" "isomer" nil :count 0)
    ("isnt" "isn't" nil :count 10)
    ("isntalled" "installed" nil :count 0)
    ("isntance" "instance" nil :count 7)
    ("isntead" "instead" nil :count 0)
    ("isntnace" "instance" nil :count 0)
    ("isolattion" "isolation" nil :count 0)
    ("isolted" "isolated" nil :count 0)
    ("ispathologically" "is pathologically" nil :count 0)
    ("israel" "Israel" nil :count 0)
    ("isreal" "Israel" nil :count 0)
    ("isrealis" "Israelis" nil :count 0)
    ("isself" "itself" nil :count 0)
    ("issu" "issue" nil :count 1)
    ("istabul" "Istanbul" nil :count 0)
    ("istelf" "itself" nil :count 0)
    ("istory" "history" nil :count 0)
    ("iterary" "literary" nil :count 0)
    ("iternalism" "Internalism" nil :count 0)
    ("iteslf" "itself" nil :count 0)
    ("itimacy" "intimacy" nil :count 0)
    ("itnerviewer" "interviewer" nil :count 0)
    ("itnerviews" "interviews" nil :count 0)
    ("itsefl" "itself" nil :count 0)
    ("iwll" "will" nil :count 1)
    ("iwnter" "winter" nil :count 0)
    ("ixperimental" "experimental" nil :count 0)
    ("janissaries" "Jannissaries" nil :count 0)
    ("javascript" "JavaScript" nil :count 0)
    ("jduged" "judged" nil :count 0)
    ("jeruselem" "Jerusalem" nil :count 0)
    ("jeruselum" "Jerusalem" nil :count 0)
    ("jetison" "Jettison" nil :count 0)
    ("jibberish" "gibberish" nil :count 0)
    ("joinng" "joining" nil :count 0)
    ("joniing" "joining" nil :count 0)
    ("jorney" "journey" nil :count 0)
    ("journanlist" "journalist" nil :count 0)
    ("jsut" "just" nil :count 2)
    ("jsutice" "justice" nil :count 0)
    ("jsutifications" "justifications" nil :count 0)
    ("jsutify" "justify" nil :count 1)
    ("jucgment" "judgement" nil :count 0)
    ("judeo" "Judaeo" nil :count 0)
    ("judgement" "judgement" nil :count 6)
    ("junture" "juncture" nil :count 0)
    ("jusdge" "judge" nil :count 0)
    ("jusfication" "justification" nil :count 0)
    ("jusice" "justice" nil :count 0)
    ("justfied" "justified" nil :count 0)
    ("justifacatory" "justificatory" nil :count 0)
    ("justifactory" "justificatory" nil :count 0)
    ("justificaations" "justifications" nil :count 0)
    ("justificaion" "justification" nil :count 0)
    ("justificatoin" "justification" nil :count 1)
    ("justificction" "justification" nil :count 0)
    ("justifyable" "justifiable" nil :count 0)
    ("jutice" "justice" nil :count 0)
    ("kaballah" "Kabbalah" nil :count 0)
    ("kadynce" "cadence" nil :count 0)
    ("kahneman's" "Lineman's" nil :count 0)
    ("kant" "Kant" nil :count 456)
    ("karenina" "Karenina" nil :count 0)
    ("keybidns" "keybinds" nil :count 0)
    ("keybindgs" "keybinds" nil :count 0)
    ("kindergaten" "kindergarten" nil :count 0)
    ("knarled" "gnarled" nil :count 0)
    ("knat" "Kant" nil :count 0)
    ("knoowledge" "knowledge" nil :count 0)
    ("knoweldge" "knowledge" nil :count 0)
    ("knowledeg" "knowledge" nil :count 0)
    ("knowledg" "knowledge" nil :count 1)
    ("knowledgable" "knowledgeable" nil :count 0)
    ("knowledger" "knowledge" nil :count 0)
    ("knowleedge" "knowledge" nil :count 0)
    ("knowlege" "knowledge" nil :count 0)
    ("kodman" "Goodman" nil :count 0)
    ("korean" "Korean" nil :count 1)
    ("koselelck" "Koselleck" nil :count 0)
    ("kosellec" "Koselleck" nil :count 0)
    ("koselleck's" "Koselleck" nil :count 0)
    ("koslleck" "Koselleck" nil :count 1)
    ("kosseleck" "Koselleck" nil :count 1)
    ("kosselleck" "Koselleck" nil :count 1)
    ("kosselleck's" "Koselleck's" nil :count 0)
    ("kristofffer" "Kristoffer" nil :count 0)
    ("labelled" "labeled" nil :count 3)
    ("lagnauge" "language" nil :count 0)
    ("lal" "all" nil :count 0)
    ("landscapfe" "landscape" nil :count 0)
    ("langauage" "language" nil :count 0)
    ("langauge" "language" nil :count 2)
    ("langauges" "languages" nil :count 0)
    ("languagg" "language" nil :count 0)
    ("languauge" "language" nil :count 1)
    ("lanscape" "landscape" nil :count 0)
    ("latchined" "latched" nil :count 0)
    ("latex" "LaTeX" nil :count 9)
    ("laudible" "laudable" nil :count 0)
    ("laundy" "laundry" nil :count 0)
    ("laung" "laugh" nil :count 0)
    ("lavant" "Levant" nil :count 0)
    ("lawgiging" "lawgiving" nil :count 0)
    ("layed" "laid" nil :count 0)
    ("laziy" "lazily" nil :count 1)
    ("leadship" "leadership" nil :count 0)
    ("leaglists" "Legalists" nil :count 0)
    ("leanred" "learned" nil :count 1)
    ("learders" "leaders" nil :count 0)
    ("learnt" "learned" nil :count 1)
    ("leaset" "least" nil :count 0)
    ("lectuer" "lecture" nil :count 0)
    ("lecutre" "lecture" nil :count 2)
    ("legaleist" "Legalist" nil :count 0)
    ("legalism" "Legalism" nil :count 44)
    ("legalist" "Legalist" nil :count 7)
    ("legalists" "Legalists" nil :count 8)
    ("legitmacy" "legitimacy" nil :count 0)
    ("legnth" "length" nil :count 0)
    ("lerned" "learned" nil :count 0)
    ("lesat" "least" nil :count 0)
    ("lesse" "Lesser" nil :count 0)
    ("lettin" "letting" nil :count 0)
    ("leui" "lieu" nil :count 0)
    ("lght" "light" nil :count 0)
    ("lgitamacy" "Legitimacy" nil :count 0)
    ("lguilt" "guilt" nil :count 0)
    ("liek" "like" nil :count 1)
    ("liekly" "Likely" nil :count 0)
    ("lierr" "Lieer" nil :count 0)
    ("liesthe" "lies the" nil :count 0)
    ("liev" "live" nil :count 0)
    ("lifesyle" "lifestyle" nil :count 0)
    ("liguistic" "linguistic" nil :count 0)
    ("lik" "like" nil :count 5)
    ("likelyl" "likely" nil :count 0)
    ("likeminded" "like-minded" nil :count 0)
    ("likly" "likely" nil :count 0)
    ("lilfe" "life" nil :count 0)
    ("limtless" "limitless" nil :count 0)
    ("lingeage" "lineage" nil :count 0)
    ("lingiuistic" "linguistic" nil :count 0)
    ("lingusitic" "linguistic" nil :count 1)
    ("lingusitically" "linguistically" nil :count 0)
    ("lingusitics" "linguistics" nil :count 0)
    ("lingustic" "linguistic" nil :count 1)
    ("listner" "listener" nil :count 0)
    ("listted" "listed" nil :count 0)
    ("litearlly" "literally" nil :count 0)
    ("literatuer" "literature" nil :count 0)
    ("litle" "little" nil :count 0)
    ("littel" "little" nil :count 0)
    ("liue" "lieu" nil :count 0)
    ("liunx" "Linux" nil :count 0)
    ("livign" "living" nil :count 0)
    ("llife" "Life" nil :count 0)
    ("llive" "live" nil :count 0)
    ("llooking" "looking" nil :count 0)
    ("lnaguage" "language" nil :count 0)
    ("localwords" "Local Words" nil :count 0)
    ("locken" "Lockean" nil :count 0)
    ("logican" "logician" nil :count 0)
    ("logicl" "logical" nil :count 1)
    ("lok" "look" nil :count 2)
    ("londan" "London" nil :count 0)
    ("lonelieness" "loneliness" nil :count 0)
    ("longform" "long-form" nil :count 1)
    ("longlasting" "long lasting" nil :count 0)
    ("longstanidng" "longstanding" nil :count 0)
    ("longterm" "long term" nil :count 0)
    ("longwinded" "long-winded" nil :count 0)
    ("lonourse" "long course" nil :count 0)
    ("lookahead" "Look-ahead" nil :count 0)
    ("lookinng" "looking" nil :count 0)
    ("losen" "loosen" nil :count 0)
    ("lrge" "large" nil :count 0)
    ("lucretious" "Lucretius" nil :count 1)
    ("lucretiuos" "Lucretius" nil :count 0)
    ("luei" "lieu" nil :count 0)
    ("luhann" "Luhmann" nil :count 0)
    ("luxirating" "Luxuriating" nil :count 0)
    ("lw" "law" nil :count 1)
    ("maake" "make" nil :count 0)
    ("maanger" "manager" nil :count 0)
    ("mabe" "Maybe" nil :count 0)
    ("machiavellianism" "Machiavellian ism" nil :count 0)
    ("macroeconimics" "Macroeconomics" nil :count 0)
    ("maddness" "madness" nil :count 0)
    ("madenning" "maddening" nil :count 0)
    ("maek" "make" nil :count 0)
    ("magnitic" "magnetic" nil :count 0)
    ("magnitudinous" "multitudinous" nil :count 0)
    ("magntidues" "magnitudes" nil :count 0)
    ("maimize" "maximize" nil :count 0)
    ("maintaenence" "maintenance" nil :count 0)
    ("maintian" "maintain" nil :count 0)
    ("mainting" "maintain" nil :count 0)
    ("maintream" "mainstream" nil :count 0)
    ("makig" "making" nil :count 1)
    ("malace" "malice" nil :count 0)
    ("maladaptive" "adaptive" nil :count 0)
    ("maling" "malign" nil :count 0)
    ("mamuk" "Mamluk" nil :count 0)
    ("managable" "manageable" nil :count 0)
    ("managably" "manageable" nil :count 0)
    ("managemement" "management" nil :count 0)
    ("managerment" "management" nil :count 0)
    ("mandages" "Mandates" nil :count 0)
    ("maneauver" "maneuver" nil :count 0)
    ("mangement" "management" nil :count 1)
    ("manifessts" "manifests" nil :count 0)
    ("manipulted" "manipulated" nil :count 0)
    ("manuevered" "maneuvered" nil :count 0)
    ("manully" "manually" nil :count 0)
    ("marh" "March" nil :count 3)
    ("martydom" "martyrdom" nil :count 0)
    ("marx" "Marx" nil :count 2)
    ("marxism" "Marxism" nil :count 9)
    ("materail" "material" nil :count 0)
    ("mathamatical" "Mathematical" nil :count 0)
    ("mathatical" "mathematical" nil :count 0)
    ("mathematicl" "Mathematical" nil :count 0)
    ("matieral" "material" nil :count 1)
    ("mave" "have" nil :count 0)
    ("mavin" "Marvin" nil :count 1)
    ("maxize" "maximize" nil :count 0)
    ("meanign" "meaning" nil :count 0)
    ("meaninful" "meaningful" nil :count 0)
    ("meaninig" "meaning" nil :count 0)
    ("measerued" "measured" nil :count 0)
    ("measuarble" "measurable" nil :count 0)
    ("mecahnics" "mechanics" nil :count 0)
    ("mecahnistic" "mechanistic" nil :count 0)
    ("mechanicism" "mechanic ism" nil :count 0)
    ("mechanicisms" "mechanisms" nil :count 0)
    ("mechanicsms" "mechanisms" nil :count 0)
    ("mechaniisms" "mechanisms" nil :count 0)
    ("meditarranean" "Mediterranean" nil :count 0)
    ("mediterraniean" "Mediterranean" nil :count 0)
    ("meeetings" "meetings" nil :count 0)
    ("meethod" "method" nil :count 1)
    ("meethodology" "methodology" nil :count 0)
    ("megzi" "Mengzi" nil :count 1)
    ("mehod" "method" nil :count 0)
    ("mehodologies" "methodologies" nil :count 0)
    ("meliisa" "Melissa" nil :count 0)
    ("memebr" "member" nil :count 0)
    ("memebrs" "members" nil :count 4)
    ("mempry" "memory" nil :count 0)
    ("memroy" "memory" nil :count 0)
    ("mena" "Men" nil :count 1)
    ("menaing" "meaning" nil :count 0)
    ("mendinging" "mending" nil :count 0)
    ("mendling" "meddling" nil :count 0)
    ("mening" "meaning" nil :count 0)
    ("mensions" "mansions" nil :count 0)
    ("mentioend" "mentioned" nil :count 0)
    ("mentiond" "mentioned" nil :count 1)
    ("mentionoing" "mentioning" nil :count 0)
    ("meopotamia" "Mesopotamia" nil :count 0)
    ("mercery" "mercenary" nil :count 0)
    ("mereperception" "mere perception" nil :count 0)
    ("messaianic" "messianic" nil :count 0)
    ("metacognition" "Meta-cognition" nil :count 0)
    ("metaethical" "metaethical" nil :count 0)
    ("metaphoricaly" "metaphorically" nil :count 0)
    ("metaphosics" "metaphysics" nil :count 0)
    ("metaphsical" "metaphysical" nil :count 0)
    ("metaphsically" "metaphysically" nil :count 0)
    ("metaphsics" "metaphysics" nil :count 0)
    ("metaphycis" "Metaphysics" nil :count 0)
    ("metaphyic" "metaphysical" nil :count 0)
    ("metaphyical" "metaphysical" nil :count 0)
    ("metaphyiscal" "metaphysical" nil :count 1)
    ("metaphyiscs" "Metaphysics" nil :count 0)
    ("metaphyscal" "metaphysical" nil :count 0)
    ("metaphysial" "metaphysical" nil :count 0)
    ("metaphysic" "metaphysics" nil :count 0)
    ("meterial" "material" nil :count 0)
    ("methodlogy" "methodology" nil :count 2)
    ("methodoloigies" "methodologies" nil :count 0)
    ("metnions" "mentions" nil :count 0)
    ("metpahysical" "metaphysical" nil :count 0)
    ("mettamessages" "Metamessages" nil :count 0)
    ("mianly" "mainly" nil :count 1)
    ("micfrosoft" "Microsoft" nil :count 0)
    ("microeconimics" "Microeconomics" nil :count 0)
    ("middleground" "middle-ground" nil :count 2)
    ("miderm" "Midterm" nil :count 0)
    ("midle" "Middle" nil :count 0)
    ("midtern" "Midterm" nil :count 0)
    ("midwiery" "midwifery" nil :count 0)
    ("miitarily" "militarily" nil :count 0)
    ("miitary" "military" nil :count 0)
    ("milet" "Millet" nil :count 0)
    ("millenia" "millennia" nil :count 2)
    ("millitary" "military" nil :count 0)
    ("mily" "milky" nil :count 0)
    ("minecraft" "serene" nil :count 0)
    ("minimalistic" "minimalist" nil :count 0)
    ("mintuse" "minutes" nil :count 0)
    ("mirriam" "Miriam" nil :count 0)
    ("misanalysis" "mis-analysis" nil :count 0)
    ("misassess" "mis-assess" nil :count 0)
    ("misasssess" "missuses" nil :count 0)
    ("miscelaneous" "Miscellaneous" nil :count 0)
    ("mised" "missed" nil :count 0)
    ("miskempt" "unkempt" nil :count 0)
    ("misrepresentitive" "misrepresented" nil :count 0)
    ("missned" "missed" nil :count 0)
    ("missue" "mission" nil :count 0)
    ("mkae" "Make" nil :count 1)
    ("mmoral" "moral" nil :count 0)
    ("mmostly" "Mostly" nil :count 0)
    ("moaving" "moving" nil :count 0)
    ("modelled" "modeled" nil :count 0)
    ("modelling" "Modeling" nil :count 0)
    ("moderatoin" "moderation" nil :count 0)
    ("modernsciene" "modern science" nil :count 0)
    ("moduls" "modus" nil :count 0)
    ("moes" "moves" nil :count 0)
    ("mogao" "MEGO" nil :count 0)
    ("moivation" "motivation" nil :count 0)
    ("moledules" "molecules" nil :count 0)
    ("momentarilly" "momentarily" nil :count 0)
    ("momery" "memory" nil :count 0)
    ("momral" "moral" nil :count 0)
    ("momumental" "monumental" nil :count 0)
    ("monik" "Monirk" nil :count 0)
    ("monolingualism" "monolingual ism" nil :count 0)
    ("monolinguistic" "mono linguistic" nil :count 0)
    ("monstrocity" "monstrosity" nil :count 1)
    ("mor" "Mir" nil :count 12)
    ("moraity" "morality" nil :count 0)
    ("moralit" "morality" nil :count 4)
    ("moraliyt" "morality" nil :count 0)
    ("mordern" "modern" nil :count 0)
    ("mordernization" "modernization" nil :count 0)
    ("moreoever" "Moreover" nil :count 0)
    ("moreover" "Moreover" nil :count 51)
    ("morevoer" "Moreover" nil :count 1)
    ("mortalit" "mortality" nil :count 0)
    ("mortmer" "Mortimer" nil :count 0)
    ("mosst" "most" nil :count 0)
    ("motivaated" "Motivated" nil :count 1)
    ("motivaion" "motivation" nil :count 0)
    ("motivatation" "motivation" nil :count 0)
    ("motivatino" "motivation" nil :count 0)
    ("motivatioal" "motivational" nil :count 0)
    ("motivatioinally" "motivationally" nil :count 0)
    ("motivationaly" "motivationally" nil :count 0)
    ("motivatoin" "motivation" nil :count 1)
    ("motived" "motivated" nil :count 0)
    ("motiviation" "Motivation" nil :count 0)
    ("motivted" "motivated" nil :count 0)
    ("motviational" "motivational" nil :count 0)
    ("movemenet" "movement" nil :count 0)
    ("mozzila" "Mozilla" nil :count 0)
    ("mroe" "more" nil :count 1)
    ("msician" "musician" nil :count 0)
    ("msitake" "mistake" nil :count 0)
    ("msot" "most" nil :count 0)
    ("mtric" "metric" nil :count 0)
    ("muhan" "Wuhan" nil :count 0)
    ("muhc" "much" nil :count 0)
    ("muliple" "multiple" nil :count 0)
    ("multilinguals" "multilingual" nil :count 0)
    ("multipple" "multiple" nil :count 0)
    ("multivariable" "multi-variable" nil :count 0)
    ("muslic" "Muslim" nil :count 0)
    ("muslisms" "Muslims" nil :count 0)
    ("musst" "musts" nil :count 1)
    ("mutulal" "mutual" nil :count 0)
    ("mysef" "myself" nil :count 0)
    ("mysefl" "myself" nil :count 0)
    ("myselfl" "myself" nil :count 0)
    ("mysogonistic" "misogynistic" nil :count 0)
    ("mywriting" "my writing" nil :count 0)
    ("nack" "knack" nil :count 0)
    ("namly" "namely" nil :count 0)
    ("napolean" "Napoleon" nil :count 4)
    ("narritives" "narratives" nil :count 0)
    ("narrowsightedness" "nearsightedness" nil :count 1)
    ("narrtives" "Narratives" nil :count 0)
    ("natinal" "national" nil :count 0)
    ("natino" "nation" nil :count 0)
    ("natinoalism" "nationalism" nil :count 0)
    ("nationa" "national" nil :count 0)
    ("nationalisty" "nationalist" nil :count 0)
    ("nationrlaism" "nationalism" nil :count 0)
    ("natonalist" "nationalist" nil :count 0)
    ("natons" "batons" nil :count 0)
    ("natrally" "naturally" nil :count 0)
    ("natrual" "natural" nil :count 0)
    ("natual" "natural" nil :count 0)
    ("natuaristic" "naturalistic" nil :count 0)
    ("naturalisic" "naturalistic" nil :count 0)
    ("naturalistc" "naturalistic" nil :count 0)
    ("naturall" "naturally" nil :count 0)
    ("naturlaistic" "naturalistic" nil :count 0)
    ("naturlistic" "naturalistic" nil :count 0)
    ("naturual" "natural" nil :count 0)
    ("ncrease" "increase" nil :count 0)
    ("nd" "ND" nil :count 64)
    ("neative" "negative" nil :count 0)
    ("neccessary" "necessary" nil :count 0)
    ("neccessities" "Necessities" nil :count 0)
    ("neccsary" "necessary" nil :count 0)
    ("neceearily" "necessarily" nil :count 0)
    ("neceesary" "necessary" nil :count 1)
    ("neceessary" "necessary" nil :count 0)
    ("necessar" "necessary" nil :count 1)
    ("necessaril" "necessarily" nil :count 0)
    ("necessarilly" "necessarily" nil :count 2)
    ("necessearily" "necessarily" nil :count 0)
    ("necessiarily" "necessarily" nil :count 1)
    ("necessiarly" "newsgirl" nil :count 0)
    ("necessiary" "necessary" nil :count 0)
    ("necessitiess" "necessities" nil :count 0)
    ("necessitis" "necessities" nil :count 0)
    ("necesssary" "necessary" nil :count 3)
    ("neclace" "necklace" nil :count 0)
    ("necssarily" "necessarily" nil :count 0)
    ("negataive" "Negative" nil :count 0)
    ("negativity" "Negativity" nil :count 0)
    ("negelct" "neglect" nil :count 0)
    ("neglecct" "neglect" nil :count 0)
    ("negleted" "neglected" nil :count 1)
    ("negotation" "negotiation" nil :count 0)
    ("negotioation" "negotiation" nil :count 0)
    ("negration" "negation" nil :count 0)
    ("neitehr" "neither" nil :count 0)
    ("neitzche" "Nietzsche" nil :count 0)
    ("netfliw" "Netflix" nil :count 0)
    ("neutrailized" "Neutralized" nil :count 0)
    ("neverthe" "Never the" nil :count 0)
    ("neverthelelss" "nevertheless" nil :count 0)
    ("neverthesless" "Nevertheless" nil :count 0)
    ("nevvertheless" "Nevertheless" nil :count 0)
    ("newscoverage" "news coverage" nil :count 0)
    ("newslette" "newsletter" nil :count 0)
    ("niegther" "neither" nil :count 0)
    ("nietczhe" "Nietzsche" nil :count 0)
    ("niether" "neither" nil :count 1)
    ("nietszche" "Nietzsche" nil :count 2)
    ("nietzche" "Nietzsche" nil :count 5)
    ("nietzchean" "Nietzschean" nil :count 0)
    ("nietzschea" "Nietzschean" nil :count 0)
    ("nietzscshe" "Nietzsche" nil :count 1)
    ("nihlism" "nihilism" nil :count 1)
    ("nikko" "Nikki" nil :count 0)
    ("ninetheenth" "nineteenth" nil :count 0)
    ("nintety" "ninety" nil :count 0)
    ("nither" "neither" nil :count 0)
    ("njoyment" "enjoyment" nil :count 0)
    ("nkow" "know" nil :count 0)
    ("nmuch" "much" nil :count 0)
    ("nnot" "not" nil :count 2)
    ("noational" "national" nil :count 0)
    ("nockname" "nickname" nil :count 0)
    ("noctural" "nocturnal" nil :count 0)
    ("nof" "not" nil :count 5)
    ("noncontradictory" "non-contradictory" nil :count 0)
    ("nonconventional" "non-conventional" nil :count 0)
    ("nonplused" "Nonplussed" nil :count 0)
    ("nonreductive" "non-reductive" nil :count 0)
    ("nonsesne" "nonsense" nil :count 0)
    ("nonteleiological" "nonteleological" nil :count 0)
    ("noone" "no one" nil :count 1)
    ("noramtive" "normative" nil :count 0)
    ("normall" "normally" nil :count 0)
    ("norse" "Norse" nil :count 0)
    ("notabley" "Notably" nil :count 0)
    ("notese" "notes" nil :count 0)
    ("notetaking" "note-taking" nil :count 1)
    ("nothign" "nothing" nil :count 1)
    ("notie" "Notice" nil :count 1)
    ("notifcations" "notifications" nil :count 0)
    ("notino" "notion" nil :count 1)
    ("notinos" "notions" nil :count 0)
    ("noumeal" "noumenal" nil :count 0)
    ("noumean" "noumenal" nil :count 0)
    ("novelity" "novelty" nil :count 0)
    ("novely" "novelty" nil :count 0)
    ("nowledge" "knowledge" nil :count 0)
    ("nspirit" "spirit" nil :count 0)
    ("ntaional" "national" nil :count 0)
    ("nto" "not" nil :count 3)
    ("nubers" "numbers" nil :count 1)
    ("nuetral" "neutral" nil :count 0)
    ("numberes" "numbered" nil :count 0)
    ("numberically" "numerically" nil :count 0)
    ("numebr" "number" nil :count 3)
    ("numer" "number" nil :count 0)
    ("obection" "Objection" nil :count 0)
    ("obections" "objections" nil :count 0)
    ("obective" "Objective" nil :count 0)
    ("obects" "objects" nil :count 2)
    ("obediance" "obedience" nil :count 2)
    ("obesrvatin" "observation" nil :count 0)
    ("obetaining" "obtaining" nil :count 0)
    ("obige" "oblige" nil :count 0)
    ("objcet" "object" nil :count 0)
    ("objcets" "objects" nil :count 0)
    ("objdctions" "objections" nil :count 0)
    ("objecive" "objective" nil :count 0)
    ("objecs" "objects" nil :count 0)
    ("objectinon" "objection" nil :count 0)
    ("objectivelymore" "objectively more" nil :count 0)
    ("objectviity" "objectivity" nil :count 0)
    ("objetion" "Objection" nil :count 0)
    ("objets" "objects" nil :count 2)
    ("oblibations" "Obligations" nil :count 0)
    ("obligatoin" "Obligation" nil :count 0)
    ("obligatoins" "obligations" nil :count 0)
    ("obseravation" "observation" nil :count 0)
    ("observaton" "observation" nil :count 0)
    ("obseve" "observe" nil :count 0)
    ("obsolence" "obsolesce" nil :count 0)
    ("obssess" "obsess" nil :count 0)
    ("obssessed" "obsessed" nil :count 0)
    ("obssessive" "Obsessive" nil :count 0)
    ("obtainedfrom" "obtained from" nil :count 0)
    ("occasoinal" "occasional" nil :count 0)
    ("occassion" "occasion" nil :count 3)
    ("occassional" "occasional" nil :count 0)
    ("occassionally" "occasionally" nil :count 1)
    ("occassoinal" "occasional" nil :count 0)
    ("occular" "ocular" nil :count 0)
    ("occuping" "occupying" nil :count 0)
    ("occuppying" "Occupying" nil :count 0)
    ("occuptations" "occupations" nil :count 0)
    ("occurence" "occurrence" nil :count 0)
    ("occurences" "occurrences" nil :count 0)
    ("occuring" "occurring" nil :count 0)
    ("occurresnces" "Occurrences" nil :count 0)
    ("occurrred" "occurred" nil :count 0)
    ("occurrsences" "occurrences" nil :count 0)
    ("occursense" "occurrences" nil :count 0)
    ("oconsidered" "considered" nil :count 0)
    ("odesst" "modest" nil :count 0)
    ("oedipidus" "Oedipus" nil :count 0)
    ("oen" "one" nil :count 7)
    ("oeur" "our" nil :count 0)
    ("ofa" "oaf" nil :count 4)
    ("ofcauses" "of causes" nil :count 0)
    ("ofdesire" "of desire" nil :count 0)
    ("offences" "offenses" nil :count 0)
    ("offerred" "offered" nil :count 3)
    ("offerring" "offering" nil :count 0)
    ("offerrings" "offerings" nil :count 0)
    ("offical" "official" nil :count 0)
    ("offormidable" "of formidable" nil :count 0)
    ("ofhappiness" "of happiness" nil :count 0)
    ("ofmoral" "of moral" nil :count 0)
    ("ofparts" "of parts" nil :count 0)
    ("ofpoliteness" "of politeness" nil :count 0)
    ("ofpure" "of pure" nil :count 0)
    ("ofr" "for" nil :count 1)
    ("ofte" "often" nil :count 0)
    ("ofthe" "of the" nil :count 4)
    ("oftn" "often" nil :count 0)
    ("oftten" "often" nil :count 0)
    ("ofvarious" "of various" nil :count 0)
    ("ofvirtue" "of virtue" nil :count 0)
    ("ofvolition" "of volition" nil :count 0)
    ("ogranized" "organized" nil :count 0)
    ("oheion" "cohesion" nil :count 0)
    ("ohers" "others" nil :count 1)
    ("oing" "going" nil :count 0)
    ("ojbective" "Objective" nil :count 0)
    ("ojectively" "objectively" nil :count 0)
    ("olds" "old's" nil :count 0)
    ("ommission" "omission" nil :count 2)
    ("omniscent" "omniscient" nil :count 0)
    ("omnisent" "omniscient" nil :count 0)
    ("omral" "moral" nil :count 0)
    ("omrality" "morality" nil :count 0)
    ("omre" "more" nil :count 1)
    ("ongiong" "ongoing" nil :count 0)
    ("onl" "only" nil :count 13)
    ("onlly" "only" nil :count 5)
    ("onlny" "only" nil :count 0)
    ("onlyl" "only" nil :count 0)
    ("onlyone" "Only one" nil :count 0)
    ("onnly" "only" nil :count 0)
    ("onomonopeic" " onomatopoeic" nil :count 0)
    ("onorms" "norms" nil :count 0)
    ("ons" "ones" nil :count 0)
    ("onstrain" "constrain" nil :count 0)
    ("ontext" "context" nil :count 0)
    ("ontract" "contract" nil :count 0)
    ("onverview" "overview" nil :count 0)
    ("ony" "only" nil :count 3)
    ("oother" "other" nil :count 0)
    ("oour" "our" nil :count 1)
    ("oout" "out" nil :count 0)
    ("operatin" "operation" nil :count 0)
    ("opinionins" "opinions" nil :count 0)
    ("opinios" "opinions" nil :count 0)
    ("opinoin" "opinion" nil :count 1)
    ("opinoins" "opinions" nil :count 2)
    ("opinon" "opinion" nil :count 1)
    ("opion" "opinion" nil :count 0)
    ("opoen" "open" nil :count 0)
    ("oposed" "opposed" nil :count 0)
    ("opositional" "positional" nil :count 0)
    ("opportieties" "opportunities" nil :count 0)
    ("opporunity" "opportunity" nil :count 1)
    ("opposte" "oppose" nil :count 0)
    ("oppresion" "oppression" nil :count 0)
    ("opprtunity" "opportunity" nil :count 0)
    ("optimallly" "optimally" nil :count 0)
    ("optino" "Option" nil :count 2)
    ("optoinal" "optional" nil :count 0)
    ("oragnization" "organization" nil :count 0)
    ("oratroy" "oratory" nil :count 0)
    ("orcale" "oracle" nil :count 0)
    ("orderd" "ordered" nil :count 0)
    ("organisations" "organizations" nil :count 0)
    ("orgnization" "organization" nil :count 0)
    ("oriendation" "orientation" nil :count 0)
    ("oriignally" "originally" nil :count 0)
    ("ormulation" "formulation" nil :count 0)
    ("ortator" "orator" nil :count 1)
    ("oru" "our" nil :count 2)
    ("osmething" "something" nil :count 0)
    ("osscilate" "Oscillate" nil :count 0)
    ("ot" "to" nil :count 78)
    ("otehr" "other" nil :count 2)
    ("otfen" "often" nil :count 0)
    ("othalon" "Othalon" nil :count 2)
    ("othe" "other" nil :count 11)
    ("otherfise" "otherwise" nil :count 0)
    ("otherwaise" "otherwise" nil :count 0)
    ("otherwsise" "otherwise" nil :count 0)
    ("othing" "thing" nil :count 0)
    ("otoman" "Ottoman" nil :count 1)
    ("ottomon" "Ottoman" nil :count 0)
    ("ou" "you" nil :count 33)
    ("oucome" "outcome" nil :count 0)
    ("ouir" "our" nil :count 0)
    ("our's" "ours" nil :count 0)
    ("ourselvees" "ourselves" nil :count 0)
    ("ourseslves" "ourselves" nil :count 0)
    ("ourseves" "ourselves" nil :count 0)
    ("oursselves" "ourselves" nil :count 0)
    ("ouselves" "ourselves" nil :count 0)
    ("outewighted" "outweighed" nil :count 0)
    ("outine" "outline" nil :count 0)
    ("outlinedd" "outlined" nil :count 0)
    ("outlne" "outline" nil :count 0)
    ("outsanding" "outstanding" nil :count 1)
    ("outsite" "outside" nil :count 0)
    ("outweights" "outweighs" nil :count 2)
    ("overaching" "overarching" nil :count 0)
    ("overal" "overall" nil :count 0)
    ("overcommunicate" "over-communicate" nil :count 1)
    ("overeview" "overview" nil :count 0)
    ("overprepare" "Over-prepare" nil :count 0)
    ("overriden" "overridden" nil :count 0)
    ("oversimplyfing" "oversimplifying" nil :count 0)
    ("oversleeper" "over-sleeper" nil :count 0)
    ("ownershpi" "ownership" nil :count 0)
    ("owrds" "words" nil :count 0)
    ("owrld" "world" nil :count 0)
    ("owuld" "would" nil :count 2)
    ("oyu" "you" nil :count 3)
    ("oyur" "your" nil :count 2)
    ("paast" "past" nil :count 0)
    ("pacakge" "package" nil :count 0)
    ("pacakges" "packages" nil :count 0)
    ("padneic" "pandemic" nil :count 0)
    ("pag" "Page" nil :count 1)
    ("pagte" "Page" nil :count 0)
    ("pait" "paid" nil :count 0)
    ("paksennarion" "Paksenarrion" nil :count 1)
    ("palatble" "palatable" nil :count 0)
    ("palce" "place" nil :count 1)
    ("paleistein" "Palestine" nil :count 0)
    ("paleistine" "Palestine" nil :count 0)
    ("palenquin" "Palanquin" nil :count 0)
    ("palestain" "Palestine" nil :count 0)
    ("pallaceds" "Palisades" nil :count 0)
    ("panful" "painful" nil :count 0)
    ("papinless" "painless" nil :count 0)
    ("papre" "paper" nil :count 0)
    ("paradgims" "paradigms" nil :count 0)
    ("paradigmatically" "paradigmatic ally" nil :count 0)
    ("paradigs" "paradigms" nil :count 0)
    ("paragaph" "paragraph" nil :count 0)
    ("paragidm" "paradigm" nil :count 1)
    ("paragrpah" "paragraph" nil :count 1)
    ("paralel" "Parallel" nil :count 0)
    ("paramters" "Parameters" nil :count 0)
    ("paraticular" "particular" nil :count 0)
    ("parducci's" "Parducci" nil :count 0)
    ("parehtneticals" "parentheticals" nil :count 0)
    ("parially" "partially" nil :count 0)
    ("paricularly" "particularly" nil :count 1)
    ("paritcular" "particular" nil :count 0)
    ("parr" "part" nil :count 0)
    ("parralels" "parallels" nil :count 0)
    ("parsiomious" "paramours" nil :count 0)
    ("partcular" "particular" nil :count 0)
    ("particate" "particulate" nil :count 0)
    ("particianpt" "participant" nil :count 0)
    ("participantsto" "participants to" nil :count 0)
    ("participatino" "participation" nil :count 0)
    ("particualr" "particular" nil :count 0)
    ("particuar" "particular" nil :count 0)
    ("particuarly" "particularly" nil :count 0)
    ("particularlyl" "particularly" nil :count 0)
    ("particularuly" "particularly" nil :count 0)
    ("partisasn" "Partisan" nil :count 0)
    ("partiular" "particular" nil :count 0)
    ("passioante" "passionate" nil :count 0)
    ("passsing" "passing" nil :count 0)
    ("passward" "password" nil :count 0)
    ("pasttime" "pastime" nil :count 0)
    ("paterns" "Patterns" nil :count 0)
    ("pathfinding" "Path-finding" nil :count 0)
    ("pathoogical" "pathological" nil :count 0)
    ("paticular" "particular" nil :count 0)
    ("patiens" "patients" nil :count 0)
    ("patriarchical" "Patriarchal" nil :count 0)
    ("patterened" "patterned" nil :count 0)
    ("pecuilar" "Peculiar" nil :count 0)
    ("pecular" "peculiar" nil :count 0)
    ("peculiair" "peculiar" nil :count 0)
    ("pedastal" "pedestal" nil :count 0)
    ("pedegogical" "pedagogical" nil :count 0)
    ("peieces" "pieces" nil :count 0)
    ("peiople" "people" nil :count 2)
    ("pelasure" "pleasure" nil :count 0)
    ("peoiple" "people" nil :count 1)
    ("peope" "people" nil :count 3)
    ("perceidve" "perceive" nil :count 0)
    ("perceieve" "perceive" nil :count 0)
    ("perceieved" "perceived" nil :count 0)
    ("perceiption" "perception" nil :count 0)
    ("perceptoin" "perception" nil :count 0)
    ("perceptsion" "perception" nil :count 0)
    ("percetpsion" "perception" nil :count 0)
    ("percetual" "Perceptual" nil :count 0)
    ("pereson" "person" nil :count 1)
    ("perharps" "perhaps" nil :count 0)
    ("perhas" "perhaps" nil :count 1)
    ("perhasps" "perhaps" nil :count 0)
    ("periatins" "Operations" nil :count 0)
    ("peripatatic" "Peripatetic" nil :count 0)
    ("peripetatic" "Peripatetic" nil :count 0)
    ("perma" "PERMS" nil :count 0)
    ("permaps" "perhaps" nil :count 0)
    ("permenant" "permanent" nil :count 1)
    ("permissble" "permissible" nil :count 1)
    ("perogative" "prerogative" nil :count 0)
    ("peronal" "personal" nil :count 0)
    ("perosnal" "personal" nil :count 2)
    ("perpatrators" "perpetrators" nil :count 0)
    ("perpsecitve" "perspective" nil :count 0)
    ("perrate" "perorate" nil :count 0)
    ("persepctives" "perspectives" nil :count 0)
    ("perserve" "preserve" nil :count 0)
    ("perseverence" "Perseverance" nil :count 0)
    ("persevererence" "Perseverance" nil :count 0)
    ("persoanl" "personal" nil :count 0)
    ("personall" "personally" nil :count 1)
    ("personaly" "personally" nil :count 2)
    ("perspecive" "perspective" nil :count 0)
    ("perspectivve" "perspective" nil :count 0)
    ("perspetival" "perspectival" nil :count 0)
    ("perspetive" "Perspective" nil :count 0)
    ("persuasoin" "persuasion" nil :count 0)
    ("persuastion" "persuasion" nil :count 0)
    ("persuation" "persuasion" nil :count 2)
    ("perticular" "particular" nil :count 0)
    ("pespective" "perspective" nil :count 0)
    ("pespectives" "perspectives" nil :count 0)
    ("pgrasping" "grasping" nil :count 0)
    ("phease" "phrase" nil :count 1)
    ("phenemenal" "phenomenal" nil :count 0)
    ("phenomenlology" "phenomenology" nil :count 0)
    ("phenomoenal" "phenomenal" nil :count 0)
    ("phenomological" "phenomenological" nil :count 0)
    ("phenomona" "phenomena" nil :count 0)
    ("phenomonology" "phenomenology" nil :count 0)
    ("phenomonon" "phenomenon" nil :count 0)
    ("pheonix" "Phoenix" nil :count 0)
    ("pheopel" "people" nil :count 0)
    ("phile" "file" nil :count 0)
    ("philipines" "Philippines" nil :count 0)
    ("philipino" "Philippine" nil :count 0)
    ("philippines" "Philippines" nil :count 2)
    ("philippino" "Philippine" nil :count 0)
    ("philisoophy" "philosophy" nil :count 0)
    ("philoosophers" "philosophers" nil :count 0)
    ("philoosophical" "Philosophical" nil :count 0)
    ("philoosphers" "philosophers" nil :count 0)
    ("philoosphy" "Philosophy" nil :count 0)
    ("philopher" "philosopher" nil :count 0)
    ("philophers" "philosophers" nil :count 0)
    ("philopophers" "Philosophers" nil :count 0)
    ("philoposhy" "Philosophy" nil :count 0)
    ("philosoher" "philosopher" nil :count 0)
    ("philosohpy" "philosophy" nil :count 2)
    ("philosohy" "philosophy" nil :count 0)
    ("philosophes" "philosophies" nil :count 0)
    ("philosophiscal" "philosophical" nil :count 0)
    ("philosophsers" "philosophers" nil :count 0)
    ("philosophycal" "philosophical" nil :count 0)
    ("philosophyical" "philosophical" nil :count 0)
    ("philosophylike" "philosophy like" nil :count 0)
    ("philosopshers" "philosophers" nil :count 0)
    ("philososphical" "philosophical" nil :count 0)
    ("philosphers" "philosophers" nil :count 1)
    ("philosphy" "Philosophy" nil :count 2)
    ("philospohy" "philosophy" nil :count 1)
    ("philpippines" "Philippines" nil :count 0)
    ("philsoopher" "philosopher" nil :count 0)
    ("philsoophy" "philosophy" nil :count 1)
    ("philsophical" "philosophical" nil :count 0)
    ("phiosophical" "philosophical" nil :count 1)
    ("phiosophy" "philosophy" nil :count 1)
    ("phlosophy" "Philosophy" nil :count 0)
    ("phrease" "phrase" nil :count 1)
    ("phreases" "phrases" nil :count 1)
    ("phrsae" "phrase" nil :count 0)
    ("phrse" "phrase" nil :count 0)
    ("phyricacl" "physical" nil :count 0)
    ("physcally" "physically" nil :count 0)
    ("pictoral" "Pictorial" nil :count 0)
    ("pieacemeal" "piecemeal" nil :count 0)
    ("piecewise" "piece-wise" nil :count 2)
    ("piee" "piece" nil :count 3)
    ("pietry" "poetry" nil :count 0)
    ("pigeonhold" "pigeonholed" nil :count 0)
    ("pihlosophical" "philosophical" nil :count 0)
    ("piiece" "piece" nil :count 0)
    ("piont" "point" nil :count 4)
    ("pionting" "pointing" nil :count 0)
    ("pionts" "points" nil :count 0)
    ("pirnciples" "principles" nil :count 0)
    ("plagiriams" "Plagiarism" nil :count 0)
    ("plannign" "Planning" nil :count 0)
    ("plaot" "Plato" nil :count 0)
    ("plaotinic" "Platonic" nil :count 0)
    ("plausable" "plausible" nil :count 0)
    ("plausiible" "plausible" nil :count 0)
    ("pleasent" "pleasant" nil :count 0)
    ("pleasrable" "pleasurable" nil :count 0)
    ("pleasre" "Pleasure" nil :count 0)
    ("pleasruable" "pleasurable" nil :count 0)
    ("pleasuable" "pleasurable" nil :count 0)
    ("pleasuablebeak" "plausible" nil :count 0)
    ("pleasuae" "pleasure" nil :count 0)
    ("pleasuarable" "pleasurable" nil :count 0)
    ("pleasuer" "pleasure" nil :count 0)
    ("pleateau" "plateau" nil :count 0)
    ("plesaruable" "pleasurable" nil :count 0)
    ("plhilosophical" "philosophical" nil :count 0)
    ("plulg" "plug" nil :count 0)
    ("pluraity" "plurality" nil :count 0)
    ("poety" "poetry" nil :count 1)
    ("poewr" "power" nil :count 1)
    ("poewrfullly" "powerfully" nil :count 0)
    ("poilteness" "politeness" nil :count 0)
    ("poins" "points" nil :count 0)
    ("pointesrs" "pointers" nil :count 0)
    ("poist" "Post" nil :count 0)
    ("poitical" "political" nil :count 2)
    ("poitics" "politics" nil :count 0)
    ("poitn" "point" nil :count 1)
    ("poitns" "points" nil :count 2)
    ("poitry" "poetry" nil :count 0)
    ("policits" "policies" nil :count 0)
    ("policty" "polity" nil :count 0)
    ("poliicies" "policies" nil :count 0)
    ("poliltics" "politics" nil :count 0)
    ("polis" "Polish" nil :count 0)
    ("politcies" "policies" nil :count 0)
    ("politcs" "politics" nil :count 0)
    ("politeneness" "politeness" nil :count 0)
    ("politenss" "politeness" nil :count 0)
    ("politican" "politician" nil :count 0)
    ("politicans" "politicians" nil :count 0)
    ("politices" "policies" nil :count 0)
    ("politicsl" "Political" nil :count 0)
    ("politness" "politeness" nil :count 0)
    ("pollow" "follow" nil :count 0)
    ("ponti" "point" nil :count 0)
    ("poper" "Popper" nil :count 0)
    ("poposal" "proposal" nil :count 0)
    ("porfessor" "Professor" nil :count 0)
    ("porfolio" "Portfolio" nil :count 0)
    ("porject" "project" nil :count 0)
    ("porjections" "projections" nil :count 0)
    ("pormised" "promised" nil :count 0)
    ("pormises" "promises" nil :count 0)
    ("portaryed" "portrayed" nil :count 0)
    ("posibiity" "possibility" nil :count 0)
    ("posibvey" "positively" nil :count 0)
    ("positev" "Positive" nil :count 0)
    ("positievly" "positively" nil :count 0)
    ("positiion" "position" nil :count 0)
    ("positiive" "positive" nil :count 1)
    ("positin" "position" nil :count 2)
    ("positino" "position" nil :count 1)
    ("positionong" "positioning" nil :count 0)
    ("positiveily" "positively" nil :count 0)
    ("positivty" "positivity" nil :count 0)
    ("positoin" "position" nil :count 0)
    ("possbility" "possibility" nil :count 0)
    ("possesion" "possession" nil :count 0)
    ("possesison" "possession" nil :count 0)
    ("possessiosn" "possessions" nil :count 0)
    ("possesssions" "possessions" nil :count 0)
    ("possibiilty" "possibility" nil :count 0)
    ("possibiities" "possibilities" nil :count 0)
    ("possibiity" "possibility" nil :count 0)
    ("possibile" "possible" nil :count 0)
    ("possibilie" "possibility" nil :count 0)
    ("possibilies" "possibilities" nil :count 1)
    ("possibilitiy" "possibility" nil :count 0)
    ("possibilties" "possibilities" nil :count 0)
    ("possibilty" "possibility" nil :count 2)
    ("possibity" "possibility" nil :count 0)
    ("possiblities" "possibilities" nil :count 0)
    ("possiblitliy" "possibility" nil :count 0)
    ("posssible" "possible" nil :count 0)
    ("posteiori" "posteriori" nil :count 0)
    ("postiive" "positive" nil :count 0)
    ("postion" "position" nil :count 0)
    ("postitive" "positive" nil :count 0)
    ("postive" "positive" nil :count 2)
    ("posulation" "postulation" nil :count 0)
    ("potentail" "potential" nil :count 0)
    ("potentiall" "potentially" nil :count 2)
    ("potivitevly" "positively" nil :count 0)
    ("powerpoint" "PowerPoint" nil :count 0)
    ("powrers" "Powers" nil :count 0)
    ("ppropriate" "appropriate" nil :count 0)
    ("praaical" "practical" nil :count 0)
    ("praaically" "practically" nil :count 0)
    ("prace" "practice" nil :count 0)
    ("pracical" "practical" nil :count 0)
    ("pracice" "practice" nil :count 1)
    ("pracitaal" "practical" nil :count 0)
    ("pracitec" "practice" nil :count 1)
    ("practcial" "practical" nil :count 0)
    ("practial" "practical" nil :count 0)
    ("practially" "practically" nil :count 0)
    ("practicaly" "practical" nil :count 0)
    ("practicesd" "practiced" nil :count 0)
    ("practicuum" "practicum" nil :count 0)
    ("practie" "practice" nil :count 0)
    ("practises" "practices" nil :count 0)
    ("practitoiner" "practitioner" nil :count 0)
    ("practse" "practice" nil :count 0)
    ("pratical" "practical" nil :count 0)
    ("prblem" "problem" nil :count 2)
    ("prcesses" "processes" nil :count 0)
    ("prcoessing" "processing" nil :count 0)
    ("prctical" "practical" nil :count 0)
    ("preceds" "precedes" nil :count 0)
    ("preceedes" "precedes" nil :count 0)
    ("precide" "precise" nil :count 0)
    ("precisin" "precision" nil :count 0)
    ("preclde" "preclude" nil :count 0)
    ("preconcceived" "preconceived" nil :count 0)
    ("predics" "predicts" nil :count 0)
    ("predictby" "predict by" nil :count 0)
    ("predictoin" "prediction" nil :count 0)
    ("predispotisions" "predispositions" nil :count 0)
    ("prefactory" "Prefatory" nil :count 0)
    ("prefectly" "perfectly" nil :count 0)
    ("prefered" "preferred" nil :count 3)
    ("preferencal" "preferential" nil :count 0)
    ("preferrable" "preferable" nil :count 26)
    ("preferreed" "preferred" nil :count 1)
    ("preferrences" "preferences" nil :count 0)
    ("preffered" "preferred" nil :count 0)
    ("prefferred" "preferred" nil :count 0)
    ("prefosser" "Professor" nil :count 0)
    ("preicisely" "precisely" nil :count 0)
    ("preimse" "premise" nil :count 0)
    ("preises" "Premises" nil :count 0)
    ("preivously" "previously" nil :count 0)
    ("prejudicces" "prejudices" nil :count 0)
    ("premediated" "premeditated" nil :count 0)
    ("premptively" "preemptively" nil :count 1)
    ("preogression" "progression" nil :count 0)
    ("preparaation" "preparation" nil :count 0)
    ("preperable" "preferable" nil :count 0)
    ("prerequistite" "prerequisite" nil :count 0)
    ("prerequistive" "prerequisite" nil :count 0)
    ("prerogotive" "Prerogative" nil :count 0)
    ("prescence" "presence" nil :count 0)
    ("prescisely" "precisely" nil :count 0)
    ("preseents" "presents" nil :count 0)
    ("presentd" "presented" nil :count 0)
    ("presere" "preserve" nil :count 0)
    ("preservataion" "preservation" nil :count 0)
    ("presevd" "preserved" nil :count 0)
    ("presicence" "prescience" nil :count 0)
    ("presitge" "prestige" nil :count 0)
    ("preson" "person" nil :count 0)
    ("pressent" "present" nil :count 0)
    ("pressue" "pressure" nil :count 0)
    ("prestend" "pretend" nil :count 0)
    ("presupposinng" "presupposing" nil :count 0)
    ("presuppositin" "presupposition" nil :count 1)
    ("pretence" "pretense" nil :count 0)
    ("pretige" "prestige" nil :count 0)
    ("prevelence" "Prevalence" nil :count 0)
    ("preventatively" "preventative" nil :count 0)
    ("prevoiusly" "previously" nil :count 0)
    ("prhophecy" "Prophecy" nil :count 0)
    ("primariy" "primarily" nil :count 0)
    ("primasy" "primacy" nil :count 0)
    ("princible" "principle" nil :count 0)
    ("princibles" "principles" nil :count 0)
    ("princileps" "Principles" nil :count 0)
    ("principe" "principle" nil :count 0)
    ("principels" "principles" nil :count 0)
    ("principes" "principles" nil :count 0)
    ("prinpicles" "principles" nil :count 0)
    ("prinpiple" "Principle" nil :count 0)
    ("prinsoners" "prisoners" nil :count 0)
    ("prioiri" "priori" nil :count 0)
    ("prioriies" "priorities" nil :count 0)
    ("priortizes" "prioritizes" nil :count 0)
    ("prive" "prove" nil :count 0)
    ("privelege" "privilege" nil :count 0)
    ("priveleged" "privileged" nil :count 1)
    ("privelegeding" "privileging" nil :count 0)
    ("priveleging" "privileging" nil :count 0)
    ("priveleginng" "priveleging" nil :count 0)
    ("privelging" "privileging" nil :count 0)
    ("privilieged" "privileged" nil :count 0)
    ("privitatization" "Privatization" nil :count 0)
    ("proasic" "prosaic" nil :count 0)
    ("probabiity" "probability" nil :count 0)
    ("probabilitic" "probabilistic" nil :count 0)
    ("probablisitic" "probabilistic" nil :count 0)
    ("probablly" "probably" nil :count 0)
    ("probelm" "problem" nil :count 0)
    ("problamtiezes" "problematizes" nil :count 0)
    ("problatic" "problematic" nil :count 0)
    ("proble" "problem" nil :count 2)
    ("problematicze" "Problematize" nil :count 0)
    ("proccess" "process" nil :count 0)
    ("proccesses" "processes" nil :count 0)
    ("proccessing" "processing" nil :count 1)
    ("proccupation" "preoccupation" nil :count 0)
    ("proceedin" "proceeding" nil :count 0)
    ("procees" "processes" nil :count 1)
    ("proceossor" "processor" nil :count 0)
    ("proces" "process" nil :count 1)
    ("processs" "process" nil :count 0)
    ("processses" "processes" nil :count 0)
    ("proceudre" "procedure" nil :count 0)
    ("procrastinatoin" "Procrastination" nil :count 0)
    ("procratination" "Procrastination" nil :count 1)
    ("procrsatination" "Procrastination" nil :count 0)
    ("producitivity" "productivity" nil :count 0)
    ("producive" "productive" nil :count 0)
    ("proeprty" "property" nil :count 3)
    ("proficecy" "proficiency" nil :count 0)
    ("proficeincy" "proficiency" nil :count 0)
    ("proficiencies" "proficiency's" nil :count 0)
    ("profie" "profile" nil :count 0)
    ("profiency" "proficiency" nil :count 0)
    ("profient" "proficient" nil :count 0)
    ("profund" "profound" nil :count 0)
    ("progam" "program" nil :count 0)
    ("progess" "progress" nil :count 0)
    ("proglem" "Problem" nil :count 0)
    ("progres" "progress" nil :count 0)
    ("prohibted" "Prohibited" nil :count 0)
    ("proising" "promising" nil :count 0)
    ("prolegomena" "Regimen" nil :count 0)
    ("proletariant" "proletarian" nil :count 0)
    ("proletariate" "proletariat" nil :count 0)
    ("prominant" "prominent" nil :count 0)
    ("promoed" "promoted" nil :count 0)
    ("promopt" "Prompt" nil :count 1)
    ("promosing" "promising" nil :count 0)
    ("promsiing" "promising" nil :count 0)
    ("prooposed" "proposed" nil :count 0)
    ("propery" "property" nil :count 1)
    ("propeties" "properties" nil :count 0)
    ("propety" "property" nil :count 0)
    ("propheciszing" "prophesizing" nil :count 0)
    ("propiosition" "proposition" nil :count 0)
    ("propisitions" "propositions" nil :count 0)
    ("propoelled" "propelled" nil :count 0)
    ("propoelling" "propelling" nil :count 0)
    ("propogate" "propagate" nil :count 0)
    ("proposiion" "proposition" nil :count 0)
    ("propositio" "proposition" nil :count 0)
    ("propositoin" "proposition" nil :count 0)
    ("propostion" "proposition" nil :count 0)
    ("propostions" "propositions" nil :count 0)
    ("propposed" "proposed" nil :count 0)
    ("proppositions" "propositions" nil :count 0)
    ("proprietyary" "proprietary" nil :count 0)
    ("proprity" "property" nil :count 0)
    ("proprtiy" "propriety" nil :count 0)
    ("proprty" "property" nil :count 2)
    ("propsal" "proposal" nil :count 0)
    ("prosition" "position" nil :count 0)
    ("prosotion" "proposition" nil :count 0)
    ("prossessed" "possessed" nil :count 0)
    ("prot" "Protesilaos" nil :count 2)
    ("protectorage" "Protectorate" nil :count 0)
    ("protestors" "protesters" nil :count 0)
    ("protet" "protest" nil :count 0)
    ("protets" "protest" nil :count 0)
    ("protrayed" "portrayed" nil :count 0)
    ("prouce" "produce" nil :count 0)
    ("proviiosnally" "provisionally" nil :count 0)
    ("provincec" "province" nil :count 0)
    ("provirional" "provisional" nil :count 0)
    ("provites" "provides" nil :count 0)
    ("prpblems" "problems" nil :count 0)
    ("prsent" "present" nil :count 0)
    ("prsents" "presents" nil :count 0)
    ("prsiteg" "prestige" nil :count 0)
    ("prternatural" "Preternatural" nil :count 0)
    ("prudcent" "prudent" nil :count 0)
    ("prudtential" "prudential" nil :count 0)
    ("prviously" "previously" nil :count 0)
    ("prévert" "Pervert" nil :count 0)
    ("psat" "past" nil :count 0)
    ("pschylogically" "psychologically" nil :count 0)
    ("pscyholgocai" "psychological" nil :count 0)
    ("pscyholgocail" "psychological" nil :count 0)
    ("pscyhological" "psychological" nil :count 0)
    ("pscyhology" "Psychology" nil :count 2)
    ("pssages" "passages" nil :count 0)
    ("psserbys" "passersby" nil :count 0)
    ("psychoanalotical" "psychoanalytical" nil :count 0)
    ("psycholgy" "psychology" nil :count 0)
    ("psychologicial" "psychological" nil :count 0)
    ("psycholoigcal" "psychological" nil :count 0)
    ("psycholoigcally" "psychologically" nil :count 0)
    ("psycholoigical" "psychological" nil :count 0)
    ("publc" "Public" nil :count 0)
    ("publicatoins" "publications" nil :count 0)
    ("publiclly" "publicly" nil :count 0)
    ("publisehd" "published" nil :count 0)
    ("puglic" "public" nil :count 1)
    ("puishment" "punishment" nil :count 0)
    ("punche" "puncher" nil :count 0)
    ("punishemnt" "punishment" nil :count 0)
    ("punury" "penury" nil :count 0)
    ("purereason" "pure reason" nil :count 0)
    ("purpsoe" "purpose" nil :count 0)
    ("pursopes" "purposes" nil :count 0)
    ("pursuade" "persuade" nil :count 0)
    ("pursuie" "pursue" nil :count 0)
    ("pursuite" "pursuit" nil :count 0)
    ("purue" "pursue" nil :count 0)
    ("puruising" "pursuing" nil :count 0)
    ("puruit" "pursuit" nil :count 0)
    ("purvue" "purview" nil :count 0)
    ("pusrue" "pursue" nil :count 0)
    ("pusuit" "pursuit" nil :count 0)
    ("puting" "putting" nil :count 0)
    ("putlication" "publication" nil :count 0)
    ("puzzlingly" "puzzling" nil :count 0)
    ("pyschiongly" "psychology" nil :count 0)
    ("pysiologicacl" "physiological" nil :count 0)
    ("pysiologically" "physiologically" nil :count 0)
    ("quada" "Qaeda" nil :count 0)
    ("quadreped" "quadruped" nil :count 0)
    ("quaity" "quality" nil :count 0)
    ("qualies" "quails" nil :count 0)
    ("qualifyong" "qualifying" nil :count 0)
    ("qualitiative" "qualitative" nil :count 0)
    ("qualitiatively" "qualitatively" nil :count 1)
    ("qualitication" "qualification" nil :count 0)
    ("qualitie" "qualities" nil :count 0)
    ("qualitiess" "qualities" nil :count 0)
    ("qualitites" "qualities" nil :count 0)
    ("qualtiative" "qualitative" nil :count 0)
    ("qualties" "qualities" nil :count 0)
    ("qualtiies" "qualities" nil :count 0)
    ("qualtitative" "Qualitative" nil :count 0)
    ("quantifiaitonal" "quantificational" nil :count 0)
    ("quantificaiotnal" "quantificational" nil :count 0)
    ("quantitiative" "Quantitative" nil :count 0)
    ("qudruple" "Quadruple" nil :count 0)
    ("queestion" "question" nil :count 0)
    ("quering" "querying" nil :count 0)
    ("quesion" "question" nil :count 0)
    ("quesions" "Questions" nil :count 2)
    ("quesiosn" "questions" nil :count 0)
    ("quesiton" "question" nil :count 1)
    ("quessiness" "queasiness" nil :count 0)
    ("quesstion" "question" nil :count 0)
    ("quesstions" "questions" nil :count 1)
    ("questeion" "question" nil :count 0)
    ("questining" "questioning" nil :count 0)
    ("questino" "question" nil :count 0)
    ("questinos" "Questions" nil :count 0)
    ("questiong" "Question" nil :count 0)
    ("questiongin" "Questioning" nil :count 0)
    ("questionign" "questioning" nil :count 0)
    ("questioon" "question" nil :count 0)
    ("questiosn" "questions" nil :count 1)
    ("questoin" "Question" nil :count 0)
    ("questoins" "questions" nil :count 0)
    ("queston" "question" nil :count 0)
    ("quetion" "question" nil :count 0)
    ("quetions" "Questions" nil :count 1)
    ("quitessential" "quintessential" nil :count 0)
    ("qulalities" "qualities" nil :count 0)
    ("qulatiies" "qualities" nil :count 0)
    ("quuestion" "question" nil :count 0)
    ("rabbithole" "rabbit-hole" nil :count 0)
    ("raed" "read" nil :count 0)
    ("raeding" "reading" nil :count 0)
    ("rael" "real" nil :count 0)
    ("raelity" "reality" nil :count 0)
    ("raelly" "really" nil :count 1)
    ("rality" "reality" nil :count 0)
    ("rangs" "ranges" nil :count 0)
    ("rascist" "racist" nil :count 0)
    ("rasied" "raised" nil :count 0)
    ("rason" "reason" nil :count 7)
    ("ratioal" "rational" nil :count 0)
    ("rationailsm" "Rationalism" nil :count 0)
    ("rationailty" "rationality" nil :count 0)
    ("rationalbeings" "rational beings" nil :count 0)
    ("ratoinality" "rationality" nil :count 0)
    ("ratther" "rather" nil :count 0)
    ("rbaod" "broad" nil :count 0)
    ("reaady" "ready" nil :count 0)
    ("readinsg" "Readings" nil :count 0)
    ("readnig" "Reading" nil :count 0)
    ("reaely" "really" nil :count 0)
    ("reaireality" "reality" nil :count 0)
    ("realise" "realize" nil :count 0)
    ("realisitcally" "realistically" nil :count 0)
    ("realisitic" "realistic" nil :count 0)
    ("realisitically" "realistically" nil :count 0)
    ("realiyt" "reality" nil :count 0)
    ("reallistici" "realistic" nil :count 0)
    ("reallity" "reality" nil :count 0)
    ("reallized" "realized" nil :count 0)
    ("reallly" "really" nil :count 2)
    ("realtion" "relation" nil :count 0)
    ("realusage" "real usage" nil :count 0)
    ("realy" "really" nil :count 3)
    ("reannotated" "re-annotated" nil :count 0)
    ("reaosn" "reason" nil :count 7)
    ("reaosnable" "reasonable" nil :count 0)
    ("reards" "regards" nil :count 0)
    ("rearson" "reason" nil :count 0)
    ("reasoing" "reasoning" nil :count 0)
    ("reasonabe" "reasonable" nil :count 0)
    ("reasonble" "reasonable" nil :count 0)
    ("reasonin" "reasoning" nil :count 0)
    ("reasoniong" "Reasoning" nil :count 0)
    ("rebliion" "rebellion" nil :count 0)
    ("rebtutted" "rebutted" nil :count 0)
    ("rebuilld" "rebuild" nil :count 0)
    ("rebukeks" "rebukes" nil :count 0)
    ("rebuliding" "rebuilding" nil :count 0)
    ("rebuting" "rebutting" nil :count 0)
    ("recaputliation" "recapitulation" nil :count 0)
    ("recaputulation" "recapitulation" nil :count 0)
    ("receievd" "received" nil :count 0)
    ("receieve" "receive" nil :count 1)
    ("receieved" "received" nil :count 0)
    ("receipient" "recipient" nil :count 0)
    ("recepticle" "receptacle" nil :count 2)
    ("recieves" "receives" nil :count 0)
    ("recognied" "recognized" nil :count 0)
    ("recognised" "recognized" nil :count 0)
    ("reconize" "recognize" nil :count 0)
    ("reconsile" "reconcile" nil :count 0)
    ("recpetivity" "receptivity" nil :count 0)
    ("reddit" "Reddit" nil :count 44)
    ("redeifned" "redefined" nil :count 0)
    ("redfined" "redefined" nil :count 0)
    ("redical" "radical" nil :count 0)
    ("rediculous" "ridiculous" nil :count 1)
    ("redistributoin" "redistribution" nil :count 0)
    ("reduciale" "reducible" nil :count 0)
    ("reducibility" "reducible" nil :count 2)
    ("reduciceble" "reducible" nil :count 0)
    ("redudancies" "redundancies" nil :count 0)
    ("reected" "rejected" nil :count 0)
    ("reenforcing" "reinforcing" nil :count 0)
    ("reengineer" "re-engineer" nil :count 0)
    ("reengineering" "Re-engineering" nil :count 0)
    ("reeptivity" "receptivity" nil :count 0)
    ("reesentiment" "ressentiment" nil :count 0)
    ("reest" "rest" nil :count 0)
    ("reevaulate" "reevaluate" nil :count 0)
    ("refelction" "Reflection" nil :count 0)
    ("referen" "referent" nil :count 0)
    ("referencial" "referential" nil :count 0)
    ("referenct" "referent" nil :count 0)
    ("referenence" "reference" nil :count 0)
    ("referenge" "reference" nil :count 0)
    ("referenves" "references" nil :count 0)
    ("referet" "referent" nil :count 0)
    ("refernce" "reference" nil :count 0)
    ("refernt" "referent" nil :count 0)
    ("refernts" "referents" nil :count 0)
    ("referringn" "referring" nil :count 0)
    ("referrring" "referring" nil :count 0)
    ("reflct" "reflect" nil :count 0)
    ("reflectdiverse" "reflect diverse" nil :count 0)
    ("reflectin" "Reflecting" nil :count 1)
    ("reflectins" "Reflections" nil :count 0)
    ("refliction" "reflection" nil :count 0)
    ("reflxivity" "reflexivity" nil :count 0)
    ("refutatino" "refutation" nil :count 0)
    ("regadless" "regardless" nil :count 0)
    ("regar" "regard" nil :count 0)
    ("regardles" "regardless" nil :count 0)
    ("regardng" "regarding" nil :count 1)
    ("regareding" "Regarding" nil :count 0)
    ("regess" "regress" nil :count 0)
    ("reget" "regret" nil :count 0)
    ("regin" "reign" nil :count 0)
    ("reginonal" "regional" nil :count 0)
    ("regocgnized" "recognized" nil :count 0)
    ("regradless" "regardless" nil :count 0)
    ("regualrly" "regularly" nil :count 0)
    ("regurtitate" "regurgitate" nil :count 0)
    ("regurtitating" "regurgitating" nil :count 0)
    ("reimaginins" "reimaginings" nil :count 0)
    ("reincaration" "reincarnation" nil :count 0)
    ("reisstance" "resistance" nil :count 1)
    ("reitribution" "retribution" nil :count 0)
    ("rejcet" "reject" nil :count 0)
    ("rejoinding" "rejoining" nil :count 0)
    ("rela" "real" nil :count 1)
    ("relaince" "reliance" nil :count 0)
    ("relaion" "relation" nil :count 0)
    ("relaity" "reality" nil :count 0)
    ("relaize" "realize" nil :count 0)
    ("relatbable" "relatable" nil :count 0)
    ("relateievly" "relatively" nil :count 0)
    ("relatinoship" "relationship" nil :count 0)
    ("relatinship" "relationship" nil :count 0)
    ("relatiohship" "relationship" nil :count 0)
    ("relationb" "relation" nil :count 0)
    ("relationphi" "relation phi" nil :count 0)
    ("relationshipo" "relationship" nil :count 1)
    ("relationshpi" "relationship" nil :count 0)
    ("relatiopnships" "relationships" nil :count 0)
    ("relavtive" "relative" nil :count 0)
    ("releasaed" "released" nil :count 0)
    ("releive" "relieve" nil :count 0)
    ("relevan" "relevant" nil :count 2)
    ("relevane" "relevance" nil :count 0)
    ("relgiously" "religiously" nil :count 0)
    ("reliabilty" "reliability" nil :count 0)
    ("relient" "reliant" nil :count 0)
    ("religiou" "religious" nil :count 1)
    ("religoius" "religious" nil :count 1)
    ("relipgious" "religious" nil :count 0)
    ("reliquished" "relinquished" nil :count 0)
    ("relized" "Realized" nil :count 0)
    ("relluctance" "reluctance" nil :count 0)
    ("relvant" "relevant" nil :count 0)
    ("remaain" "remain" nil :count 0)
    ("remaidner" "remainder" nil :count 0)
    ("remainig" "remaining" nil :count 0)
    ("remeber" "remember" nil :count 0)
    ("remebers" "remembers" nil :count 0)
    ("remebmer" "remember" nil :count 0)
    ("remembe" "remember" nil :count 0)
    ("rememebr" "Remember" nil :count 2)
    ("renounciation" "renunciation" nil :count 0)
    ("reobust" "robust" nil :count 0)
    ("reocgnizes" "recognizes" nil :count 0)
    ("reocrded" "recorded" nil :count 0)
    ("reorded" "reorder" nil :count 0)
    ("reource" "resource" nil :count 0)
    ("repayed" "repaid" nil :count 0)
    ("repect" "respect" nil :count 1)
    ("repeitive" "repetitive" nil :count 0)
    ("repeittion" "repetition" nil :count 0)
    ("reperoire" "repertoire" nil :count 0)
    ("repetitoin" "repetition" nil :count 0)
    ("repitition" "repetition" nil :count 0)
    ("repititously" "repetitiously" nil :count 0)
    ("replicable" "replaceable" nil :count 0)
    ("repoire" "rapport" nil :count 0)
    ("reponse" "response" nil :count 2)
    ("reponses" "responses" nil :count 1)
    ("reponsibilities" "responsibilities" nil :count 0)
    ("reporated" "reported" nil :count 0)
    ("repraisals" "reprisals" nil :count 0)
    ("reprecussions" "repercussions" nil :count 0)
    ("repreented" "represented" nil :count 0)
    ("represetnatioin" "representation" nil :count 0)
    ("represetnative" "representative" nil :count 0)
    ("represnetation" "representation" nil :count 0)
    ("represntation" "representation" nil :count 0)
    ("represntative" "representative" nil :count 1)
    ("repsonses" "responses" nil :count 0)
    ("reptition" "repetition" nil :count 0)
    ("repubilic" "Republic" nil :count 0)
    ("requies" "requires" nil :count 0)
    ("requried" "required" nil :count 0)
    ("rereding" "rereading" nil :count 0)
    ("resaerching" "researching" nil :count 0)
    ("reseach" "research" nil :count 1)
    ("researchs" "research's" nil :count 0)
    ("reseliecne" "resiliance" nil :count 0)
    ("resemblence" "Resemblance" nil :count 0)
    ("reseponse" "Response" nil :count 0)
    ("reserach" "Research" nil :count 4)
    ("reserached" "researched" nil :count 0)
    ("resiliance" "resilience" nil :count 0)
    ("resiliencec" "resilience" nil :count 0)
    ("resistence" "Resistance" nil :count 0)
    ("resoltuion" "resolution" nil :count 0)
    ("resolutoin" "resolution" nil :count 0)
    ("resolvig" "resolving" nil :count 0)
    ("resonante" "resonate" nil :count 0)
    ("resonatn" "resonant" nil :count 0)
    ("resonse" "response" nil :count 0)
    ("resontaes" "resonates" nil :count 0)
    ("resontated" "resonated" nil :count 0)
    ("resopnd" "respond" nil :count 1)
    ("resopnse" "Response" nil :count 0)
    ("resopnsible" "responsible" nil :count 0)
    ("resoures" "Resources" nil :count 0)
    ("respding" "responding" nil :count 0)
    ("respet" "respect" nil :count 0)
    ("respnses" "responses" nil :count 0)
    ("respnsible" "responsible" nil :count 0)
    ("respoect" "respect" nil :count 0)
    ("responsbile" "responsible" nil :count 0)
    ("responsibel" "responsible" nil :count 0)
    ("responsibiltiies" "Responsibilities" nil :count 0)
    ("responsibilty" "responsibility" nil :count 0)
    ("responsibliity" "responsibility" nil :count 0)
    ("responsiblility" "responsibility" nil :count 0)
    ("responsve" "responsive" nil :count 0)
    ("resposibility" "responsibility" nil :count 0)
    ("resposnes" "responses" nil :count 0)
    ("respsectively" "respectively" nil :count 0)
    ("resrouces" "Resources" nil :count 0)
    ("resseniment" "ressentiment" nil :count 0)
    ("ressenitment" "ressentiment" nil :count 0)
    ("resuable" "reusable" nil :count 0)
    ("resulets" "Results" nil :count 0)
    ("resultion" "resolution" nil :count 0)
    ("retrame" "Reframe" nil :count 0)
    ("retreival" "retrieval" nil :count 1)
    ("retreive" "retrieve" nil :count 6)
    ("retreived" "retrieved" nil :count 0)
    ("retreiving" "retrieving" nil :count 1)
    ("retributoin" "retribution" nil :count 0)
    ("retriving" "Retrieving" nil :count 0)
    ("retrning" "returning" nil :count 0)
    ("retruend" "returned" nil :count 0)
    ("retunring" "returning" nil :count 0)
    ("returend" "returned" nil :count 0)
    ("returh" "return" nil :count 0)
    ("revael" "reveal" nil :count 0)
    ("revealling" "revealing" nil :count 0)
    ("reveral" "reversal" nil :count 0)
    ("reverance" "reverence" nil :count 0)
    ("reverberberate" "reverberate" nil :count 0)
    ("revisiion" "Revision" nil :count 0)
    ("revisint" "revisit" nil :count 0)
    ("revisitied" "revisited" nil :count 0)
    ("revist" "Revisit" nil :count 0)
    ("revitalizized" "revitalized" nil :count 0)
    ("revolugion" "Revolution" nil :count 0)
    ("revolultion" "revolution" nil :count 1)
    ("revoulution" "revolution" nil :count 0)
    ("rhuythm" "rhythm" nil :count 0)
    ("rhythem" "Rhythm" nil :count 0)
    ("riech" "Reich" nil :count 0)
    ("righthand" "right-hand" nil :count 0)
    ("rigo" "rigor" nil :count 0)
    ("rigot" "rigor" nil :count 1)
    ("rigotous" "rigorous" nil :count 0)
    ("rigous" "rigors" nil :count 0)
    ("rigously" "rigorously" nil :count 0)
    ("rigousously" "rigorously" nil :count 0)
    ("ritualizing" "vitalizing" nil :count 0)
    ("rituatl" "ritual" nil :count 0)
    ("rknowledge" "knowledge" nil :count 0)
    ("rmoally" "morally" nil :count 0)
    ("roasa" "Rosa" nil :count 0)
    ("rocedure" "procedure" nil :count 0)
    ("roel" "role" nil :count 0)
    ("rogan's" "Organ's" nil :count 0)
    ("roganized" "organized" nil :count 0)
    ("roleplaying" "Role-playing" nil :count 0)
    ("rom" "from" nil :count 9)
    ("ronouns" "pronouns" nil :count 0)
    ("roottop" "rooftop" nil :count 0)
    ("rottaion" "rotation" nil :count 0)
    ("rouce" "course" nil :count 0)
    ("rought" "rough" nil :count 0)
    ("roughtly" "roughly" nil :count 2)
    ("rouines" "routines" nil :count 0)
    ("rpesent" "represent" nil :count 0)
    ("rpprosed" "proposed" nil :count 0)
    ("rror" "error" nil :count 0)
    ("rrrather" "Rather" nil :count 0)
    ("rstages" "stages" nil :count 0)
    ("ruel" "rule" nil :count 1)
    ("rulser" "ruler" nil :count 0)
    ("runenr" "runner" nil :count 0)
    ("ruprure" "rupture" nil :count 0)
    ("russia" "Russia" nil :count 12)
    ("rwarding" "rewarding" nil :count 0)
    ("ryoal" "royal" nil :count 0)
    ("sacre" "sacred" nil :count 0)
    ("safisfactory" "satisfactory" nil :count 0)
    ("salutory" "salutary" nil :count 0)
    ("sankoff" "Sank off" nil :count 0)
    ("saome" "same" nil :count 0)
    ("satiatied" "satiated" nil :count 0)
    ("satifcation" "satisfaction" nil :count 0)
    ("satiffaction" "satisfaction" nil :count 0)
    ("satiscation" "satisfaction" nil :count 0)
    ("satisfactionviews" "satisfaction views" nil :count 0)
    ("satisfction" "Satisfaction" nil :count 0)
    ("satsfaction" "satisfaction" nil :count 0)
    ("sattellite" "satellite" nil :count 0)
    ("satuarated" "saturated" nil :count 0)
    ("saturday" "Saturday" nil :count 0)
    ("saudia" "Saudi" nil :count 0)
    ("sayins" "sayings" nil :count 0)
    ("saysthe" "says the" nil :count 0)
    ("sbehavior" "behavior" nil :count 0)
    ("sbjective" "subjective" nil :count 0)
    ("scarecly" "scarcely" nil :count 0)
    ("sccene" "scene" nil :count 0)
    ("sceptical" "skeptical" nil :count 3)
    ("scepticism" "Skepticism" nil :count 0)
    ("sceptics" "skeptics" nil :count 0)
    ("schaulrs" "scholars" nil :count 0)
    ("schaupenheur" "Schopenhauer" nil :count 0)
    ("schecter" "Schechter" nil :count 2)
    ("schoalrs" "scholars" nil :count 0)
    ("schol" "school" nil :count 0)
    ("schols" "schools" nil :count 1)
    ("schoool" "school" nil :count 0)
    ("schoools" "schools" nil :count 0)
    ("schopeanhaur" "Schopenhauer" nil :count 0)
    ("schopeanhaur's" "Schopenhauer's" nil :count 0)
    ("schopenhaur" "Schopenhauer" nil :count 4)
    ("schoupenhaur" "Schopenhauer" nil :count 0)
    ("schpenhauer" "Schopenhauer" nil :count 0)
    ("scialization" "Socialization" nil :count 0)
    ("sciecne" "science" nil :count 0)
    ("sciene" "Science" nil :count 0)
    ("sciens" "scions" nil :count 0)
    ("sciense" "science" nil :count 0)
    ("scientfici" "scientific" nil :count 0)
    ("scientici" "scientific" nil :count 0)
    ("scientificc" "scientific" nil :count 0)
    ("scientisists" "scientists" nil :count 0)
    ("scietnfici" "scientific" nil :count 0)
    ("scinece" "science" nil :count 0)
    ("scinecs" "sciences" nil :count 0)
    ("scli" "SciLi" nil :count 0)
    ("scoeity" "society" nil :count 0)
    ("scoiety" "society" nil :count 0)
    ("scompleely" "completely" nil :count 0)
    ("scond" "second" nil :count 1)
    ("sconstitute" "constitute" nil :count 0)
    ("scratchd" "scratched" nil :count 0)
    ("screetch" "screech" nil :count 0)
    ("scruity" "security" nil :count 0)
    ("scrutity" "scrutiny" nil :count 0)
    ("scrutizing" "scrutinizing" nil :count 0)
    ("sction" "section" nil :count 0)
    ("seach" "Search" nil :count 0)
    ("seame" "same" nil :count 0)
    ("seaparately" "separately" nil :count 0)
    ("seaparation" "separation" nil :count 0)
    ("searate" "separate" nil :count 0)
    ("secion" "section" nil :count 2)
    ("secod" "Second" nil :count 0)
    ("secondar" "secondary" nil :count 0)
    ("seconldy" "Secondly" nil :count 0)
    ("seconod" "second" nil :count 0)
    ("seconrd" "second" nil :count 0)
    ("sectin" "Section" nil :count 0)
    ("sectionally" "sectional" nil :count 0)
    ("sectionss" "sections" nil :count 0)
    ("sectoin" "Section" nil :count 0)
    ("secturiy" "sectary" nil :count 0)
    ("seducive" "seductive" nil :count 0)
    ("seemd" "seemed" nil :count 1)
    ("seeminglly" "seemingly" nil :count 0)
    ("seeminlgly" "seemingly" nil :count 0)
    ("seeminlyg" "seemingly" nil :count 1)
    ("seemj" "seem" nil :count 0)
    ("seemless" "seamless" nil :count 1)
    ("seemlessly" "seamlessly" nil :count 0)
    ("seemsters" "semesters" nil :count 0)
    ("sef" "self" nil :count 0)
    ("sel" "self" nil :count 0)
    ("selction" "selection" nil :count 0)
    ("selectiity" "selectivity" nil :count 0)
    ("selfesteem" "self esteem" nil :count 0)
    ("selfexpressive" "self expressive" nil :count 0)
    ("selfsovereignty" "self-sovereignty" nil :count 0)
    ("seligman" "Suleiman" nil :count 0)
    ("semseter" "semester" nil :count 0)
    ("senca" "Seneca" nil :count 3)
    ("sence" "sense" nil :count 2)
    ("sencses" "senses" nil :count 0)
    ("senence" "sentence" nil :count 2)
    ("seneses" "senses" nil :count 0)
    ("senetence" "sentence" nil :count 0)
    ("seniments" "sentiments" nil :count 0)
    ("sensaation" "sensation" nil :count 0)
    ("sensatinos" "sensations" nil :count 0)
    ("sensatioon" "sensation" nil :count 0)
    ("senseations" "sensations" nil :count 0)
    ("sensibilties" "sensibilities" nil :count 0)
    ("sensibilty" "sensibility" nil :count 0)
    ("sensiblity" "Sensibility" nil :count 0)
    ("sensiory" "sensory" nil :count 0)
    ("sensorysystem" "sensory system" nil :count 0)
    ("senstaion" "sensation" nil :count 0)
    ("senstations" "sensations" nil :count 0)
    ("senstive" "sensitive" nil :count 0)
    ("senteicen" "sentience" nil :count 0)
    ("senteices" "sentences" nil :count 0)
    ("sententences" "sentences" nil :count 0)
    ("seomthing" "something" nil :count 0)
    ("seoncdary" "secondary" nil :count 0)
    ("sepak" "speak" nil :count 0)
    ("separaately" "separately" nil :count 0)
    ("separeat" "separate" nil :count 0)
    ("separte" "separate" nil :count 0)
    ("separted" "separated" nil :count 0)
    ("sepculating" "speculating" nil :count 0)
    ("sepearte" "separate" nil :count 0)
    ("sepember" "September" nil :count 0)
    ("seperated" "separated" nil :count 0)
    ("seppartae" "separate" nil :count 0)
    ("seprate" "separate" nil :count 0)
    ("sequenc" "sequence" nil :count 0)
    ("seren" "serene" nil :count 0)
    ("sereval" "several" nil :count 0)
    ("seriosuly" "seriously" nil :count 0)
    ("serioues" "serious" nil :count 0)
    ("serrendipitous" "serendipitous" nil :count 1)
    ("serrendipity" "serendipity" nil :count 1)
    ("serrendiputious" "Serendipitous" nil :count 0)
    ("servent" "servant" nil :count 0)
    ("servia" "Serbia" nil :count 0)
    ("sesion" "session" nil :count 1)
    ("sesne" "sense" nil :count 1)
    ("sesnes" "senses" nil :count 0)
    ("sesnse" "sense" nil :count 1)
    ("sevearl" "several" nil :count 1)
    ("sharess" "shares" nil :count 0)
    ("sharfi" "Sharif" nil :count 0)
    ("sharif" "Sharif" nil :count 8)
    ("shing" "shining" nil :count 0)
    ("shofts" "shifts" nil :count 0)
    ("shold" "should" nil :count 0)
    ("shoould" "should" nil :count 0)
    ("shortert" "shorter" nil :count 0)
    ("shoud" "should" nil :count 4)
    ("shoudl" "should" nil :count 3)
    ("shoudn't" "shouldn't" nil :count 0)
    ("shouild" "should" nil :count 2)
    ("shoul" "should" nil :count 14)
    ("shouldd" "should" nil :count 1)
    ("shouldnt" "shouldn't" nil :count 0)
    ("shoulid" "should" nil :count 0)
    ("shounld" "should" nil :count 0)
    ("shoutout" "shout-out" nil :count 1)
    ("showscacses" "showcases" nil :count 0)
    ("shuld" "should" nil :count 1)
    ("shulid" "should" nil :count 0)
    ("shuold" "should" nil :count 0)
    ("si" "is" nil :count 26)
    ("sideines" "sidelines" nil :count 0)
    ("siex" "six" nil :count 0)
    ("signalled" "signaled" nil :count 0)
    ("signficaince" "significance" nil :count 0)
    ("signifant" "significant" nil :count 1)
    ("signifcant" "significant" nil :count 0)
    ("signifiacnce" "significance" nil :count 0)
    ("signifiance" "significance" nil :count 6)
    ("signifiying" "signifying" nil :count 0)
    ("signiticance" "significance" nil :count 1)
    ("signts" "signs" nil :count 0)
    ("siilar" "similar" nil :count 0)
    ("silient" "silent" nil :count 0)
    ("simialr" "similar" nil :count 1)
    ("simiiar" "similar" nil :count 0)
    ("similart" "similar" nil :count 0)
    ("similary" "Similarly" nil :count 0)
    ("similiarly" "Similarly" nil :count 0)
    ("simillarity" "similarity" nil :count 0)
    ("simly" "simply" nil :count 0)
    ("simmply" "simply" nil :count 0)
    ("simpe" "simple" nil :count 0)
    ("simpl" "simple" nil :count 4)
    ("simplly" "simply" nil :count 0)
    ("simplydenies" "simply denies" nil :count 0)
    ("simulatenously" "simultaneously" nil :count 0)
    ("simulatneouslly" "simultaneously" nil :count 0)
    ("simultaenously" "simultaneously" nil :count 0)
    ("simultanously" "simultaneously" nil :count 0)
    ("simultenously" "simultaneously" nil :count 2)
    ("sinaporean" "Singaporean" nil :count 0)
    ("sincle" "single" nil :count 0)
    ("singluar" "singular" nil :count 0)
    ("singularness" "singleness" nil :count 0)
    ("singule" "single" nil :count 0)
    ("sinple" "simple" nil :count 0)
    ("siplicity" "simplicity" nil :count 0)
    ("sitation" "situation" nil :count 0)
    ("situaation" "situation" nil :count 0)
    ("situatino" "situation" nil :count 0)
    ("situaton" "situation" nil :count 0)
    ("situottioist" "Situationist" nil :count 0)
    ("sizeable" "sizable" nil :count 0)
    ("skeetching" "sketching" nil :count 0)
    ("skepticidm" "skepticism" nil :count 0)
    ("skepticisim" "skepticism" nil :count 0)
    ("sketical" "Skeptical" nil :count 0)
    ("sketicism" "skepticism" nil :count 0)
    ("sketpiticsm" "skepticism" nil :count 0)
    ("skilfully" "skillfully" nil :count 0)
    ("sleeples" "sleepless" nil :count 0)
    ("sleves" "slaves" nil :count 0)
    ("slighly" "slightly" nil :count 0)
    ("slighty" "slightly" nil :count 0)
    ("smae" "same" nil :count 1)
    ("smal" "small" nil :count 1)
    ("smar" "smart" nil :count 0)
    ("smiply" "simply" nil :count 0)
    ("smith" "Smith" nil :count 27)
    ("snce" "since" nil :count 0)
    ("snchronic" "synchronic" nil :count 0)
    ("snese" "sense" nil :count 0)
    ("socail" "social" nil :count 0)
    ("socializatino" "socialization" nil :count 0)
    ("sociel" "social" nil :count 0)
    ("societ" "society" nil :count 1)
    ("societey" "society" nil :count 0)
    ("socila" "social" nil :count 0)
    ("socio" "scion" nil :count 0)
    ("sociolect" "Sociology" nil :count 0)
    ("sociolinguistic" "Sociolinguistics" nil :count 0)
    ("sociolinguisticts" "Sociolinguistics" nil :count 0)
    ("sociolinguists" "sociologists" nil :count 0)
    ("socreates" "Socrates" nil :count 2)
    ("soe" "some" nil :count 9)
    ("soemthing" "something" nil :count 2)
    ("soemtimes" "sometimes" nil :count 0)
    ("soething" "something" nil :count 1)
    ("softwhere" "software" nil :count 0)
    ("softwrae" "Software" nil :count 0)
    ("softwre" "software" nil :count 0)
    ("solidary" "solidarity" nil :count 0)
    ("soliders" "soldiers" nil :count 0)
    ("solidifed" "solidified" nil :count 0)
    ("solipcism" "solipsism" nil :count 1)
    ("sollace" "solace" nil :count 0)
    ("sollipcist" "solipsist" nil :count 0)
    ("solutinos" "solutions" nil :count 0)
    ("solutiosn" "solutions" nil :count 1)
    ("solvings" "solving" nil :count 0)
    ("someething" "something" nil :count 0)
    ("somehing" "something" nil :count 0)
    ("somehwat" "somewhat" nil :count 0)
    ("somehwo" "somehow" nil :count 0)
    ("someonef" "someone" nil :count 0)
    ("somestimes" "sometimes" nil :count 0)
    ("somethig" "something" nil :count 1)
    ("somethign" "something" nil :count 1)
    ("sometihng" "something" nil :count 0)
    ("sometimed" "sometimes" nil :count 0)
    ("someting" "something" nil :count 4)
    ("sometming" "SOMETHING" nil :count 0)
    ("somone" "someone" nil :count 0)
    ("somtehing" "something" nil :count 1)
    ("somteimes" "sometimes" nil :count 0)
    ("somtimes" "sometimes" nil :count 0)
    ("soome" "some" nil :count 0)
    ("sophirtry" "Sophistry" nil :count 0)
    ("sopt" "spot" nil :count 0)
    ("sotyr" "story" nil :count 0)
    ("sould" "should" nil :count 2)
    ("southest" "southeast" nil :count 0)
    ("southrn" "Southern" nil :count 0)
    ("soution" "solution" nil :count 0)
    ("sovereingty" "sovereignty" nil :count 0)
    ("soveriegn" "sovereign" nil :count 0)
    ("soveriengty" "sovereignty" nil :count 0)
    ("spaec" "space" nil :count 0)
    ("sparesly" "sparsely" nil :count 0)
    ("speacies" "species" nil :count 0)
    ("speackers" "speakers" nil :count 0)
    ("spearkes" "speakers" nil :count 0)
    ("specail" "special" nil :count 0)
    ("specialisation" "specialization" nil :count 0)
    ("specifcally" "specifically" nil :count 1)
    ("specificly" "specifically" nil :count 0)
    ("specilized" "specialized" nil :count 0)
    ("specizliation" "specialization" nil :count 0)
    ("spectrums" "spectra" nil :count 0)
    ("speeck" "speck" nil :count 0)
    ("speedfriending" "Speed-friending" nil :count 0)
    ("speek" "speak" nil :count 0)
    ("speicalizes" "specializes" nil :count 0)
    ("spherer" "sphere" nil :count 0)
    ("spings" "springs" nil :count 1)
    ("spiried" "spirited" nil :count 0)
    ("spiring" "spiraling" nil :count 0)
    ("spoaken" "spoken" nil :count 0)
    ("sponor" "sponsor" nil :count 0)
    ("sponosr" "sponsor" nil :count 0)
    ("sponteneously" "spontaneously" nil :count 0)
    ("spontenous" "spontaneous" nil :count 0)
    ("spotight" "spotlight" nil :count 0)
    ("sprinked" "sprinkled" nil :count 0)
    ("spritiaulism" "spiritualism" nil :count 0)
    ("squence" "sequence" nil :count 0)
    ("srings" "Springs" nil :count 0)
    ("ssttructure" "structure" nil :count 0)
    ("sstudent" "student" nil :count 0)
    ("sstudies" "studies" nil :count 0)
    ("sstupor" "stupor" nil :count 0)
    ("ssytem" "system" nil :count 0)
    ("stacatto" "staccato" nil :count 0)
    ("stagerring" "staggering" nil :count 0)
    ("stallar" "stellar" nil :count 0)
    ("standardizaed" "standardized" nil :count 0)
    ("standstilss" "standstills" nil :count 0)
    ("stanpoint" "standpoint" nil :count 0)
    ("starategy" "strategy" nil :count 0)
    ("starnge" "strange" nil :count 0)
    ("statae" "state" nil :count 0)
    ("statemetns" "statements" nil :count 0)
    ("statenets" "statements" nil :count 0)
    ("statges" "stages" nil :count 0)
    ("statigraphy" "stratigraphy" nil :count 0)
    ("stength" "strength" nil :count 0)
    ("stepweise" "step-wise" nil :count 0)
    ("stepwise" "step-wise" nil :count 3)
    ("steret" "street" nil :count 0)
    ("stictest" "strictest" nil :count 0)
    ("stiffling" "stifling" nil :count 0)
    ("stiill" "still" nil :count 0)
    ("stil" "Still" nil :count 3)
    ("stimulur" "stimuli" nil :count 0)
    ("stioics" "Stoics" nil :count 0)
    ("stiuplation" "stipulation" nil :count 1)
    ("stll" "still" nil :count 0)
    ("stnadard" "standard" nil :count 0)
    ("stnading" "standing" nil :count 0)
    ("stoicly" "Stoically" nil :count 0)
    ("storoy" "story" nil :count 0)
    ("storpping" "stopping" nil :count 0)
    ("stradle" "straddle" nil :count 0)
    ("straegy" "strategy" nil :count 0)
    ("stragegies" "strategies" nil :count 0)
    ("strategem" "stratagem" nil :count 0)
    ("stratificatin" "stratification" nil :count 0)
    ("stratifications" "Stratification's" nil :count 0)
    ("stree" "stress" nil :count 0)
    ("strenghts" "strengths" nil :count 2)
    ("strengthts" "strengths" nil :count 0)
    ("stresssed" "stressed" nil :count 0)
    ("striaghtforawrd" "straightforward" nil :count 0)
    ("striaghtforward" "straightforward" nil :count 0)
    ("stringly" "strikingly" nil :count 0)
    ("strongsuit" "strong-suit" nil :count 0)
    ("stronlgy" "strongly" nil :count 0)
    ("stroy" "story" nil :count 0)
    ("structruses" "structures" nil :count 0)
    ("strudents" "students" nil :count 0)
    ("sttruggle" "struggle" nil :count 0)
    ("stubbornlly" "Stubbornly" nil :count 0)
    ("stucture" "structure" nil :count 0)
    ("studens" "students" nil :count 0)
    ("studnet" "student" nil :count 0)
    ("stuecutres" "structures" nil :count 0)
    ("stuggle" "struggle" nil :count 0)
    ("stuggles" "struggles" nil :count 1)
    ("stupified" "stupefied" nil :count 0)
    ("stuyding" "studying" nil :count 1)
    ("stuying" "studying" nil :count 0)
    ("styding" "studying" nil :count 0)
    ("suadi" "Saudi" nil :count 0)
    ("subdividied" "subdivided" nil :count 0)
    ("subect" "subject" nil :count 2)
    ("subejctive" "subjective" nil :count 0)
    ("subfield" "sub-field" nil :count 0)
    ("subjecct" "subject" nil :count 0)
    ("subjecive" "subjective" nil :count 0)
    ("subjectivitiy" "subjectivity" nil :count 0)
    ("subjuects" "subjects" nil :count 0)
    ("suble" "subtle" nil :count 2)
    ("sublte" "subtle" nil :count 0)
    ("subordiate" "subordinate" nil :count 0)
    ("subsectly" "subsequently" nil :count 0)
    ("subsequentlly" "subsequently" nil :count 0)
    ("subsitent" "subsistent" nil :count 0)
    ("subsituting" "substituting" nil :count 0)
    ("subsptances" "substances" nil :count 0)
    ("subsstances" "substances" nil :count 0)
    ("subsstitute" "substitute" nil :count 0)
    ("substancially" "substantially" nil :count 0)
    ("substitued" "substituted" nil :count 0)
    ("substnace" "substance" nil :count 0)
    ("substnatial" "substantial" nil :count 0)
    ("subtance" "substance" nil :count 0)
    ("subteties" "subtleties" nil :count 0)
    ("subtlely" "subtly" nil :count 0)
    ("subtley" "subtlety" nil :count 0)
    ("subtype" "sub-type" nil :count 0)
    ("succes" "success" nil :count 2)
    ("succeses" "successes" nil :count 0)
    ("succesess" "successes" nil :count 0)
    ("succesfully" "successfully" nil :count 0)
    ("successed" "succeeding" nil :count 0)
    ("successfuly" "successfully" nil :count 2)
    ("successn" "success" nil :count 0)
    ("sucessful" "successful" nil :count 0)
    ("sucessors" "successors" nil :count 0)
    ("suddenlly" "suddenly" nil :count 0)
    ("sudent" "student" nil :count 0)
    ("sudi" "Saudi" nil :count 1)
    ("sufferng" "suffering" nil :count 0)
    ("sufferring" "suffering" nil :count 3)
    ("sufficeint" "sufficient" nil :count 0)
    ("sufficeintly" "sufficiently" nil :count 0)
    ("sufficent" "sufficient" nil :count 0)
    ("sufficiant" "sufficient" nil :count 0)
    ("suffienctly" "sufficiently" nil :count 0)
    ("suficiently" "sufficiently" nil :count 0)
    ("sufis" "Sufi's" nil :count 0)
    ("sufist" "Sufism" nil :count 0)
    ("sugestion" "suggestion" nil :count 0)
    ("sugges" "suggests" nil :count 0)
    ("suggesiton" "Suggestion" nil :count 0)
    ("suggestsions" "suggestions" nil :count 0)
    ("suggets" "suggest" nil :count 0)
    ("suidice" "suicide" nil :count 0)
    ("sumarily" "Summarily" nil :count 0)
    ("sumary" "Summary" nil :count 0)
    ("summarizses" "summarizes" nil :count 0)
    ("summry" "Summary" nil :count 0)
    ("supercede" "supersede" nil :count 0)
    ("superceded" "superseded" nil :count 3)
    ("supercedes" "supersedes" nil :count 3)
    ("superceding" "Superseding" nil :count 0)
    ("supernatual" "supernatural" nil :count 0)
    ("supersensiblity" "supersensible" nil :count 0)
    ("supersesible" "suppressible" nil :count 0)
    ("superstitution" "superstition" nil :count 1)
    ("superstrutcure" "superstructure" nil :count 0)
    ("suport" "support" nil :count 0)
    ("suporting" "supporting" nil :count 0)
    ("suposed" "supposed" nil :count 0)
    ("suppresing" "suppressing" nil :count 0)
    ("supprot" "support" nil :count 0)
    ("supress" "suppress" nil :count 0)
    ("supressed" "Suppressed" nil :count 0)
    ("suprisingly" "surprisingly" nil :count 0)
    ("suprorted" "supported" nil :count 0)
    ("supserstition" "superstition" nil :count 0)
    ("surprinsg" "surprising" nil :count 0)
    ("surprinsgly" "surprisingly" nil :count 0)
    ("surprisngly" "surprisingly" nil :count 0)
    ("surprsied" "surprised" nil :count 0)
    ("surprsingly" "surprisingly" nil :count 0)
    ("surrendipitoius" "serendipitous" nil :count 0)
    ("surrendipity" "serendipity" nil :count 0)
    ("surreptious" "surreptitious" nil :count 0)
    ("surreptiously" "surreptitiously" nil :count 0)
    ("survuillance" "Surveillance" nil :count 0)
    ("sustainabilty" "sustainability" nil :count 0)
    ("sutble" "subtle" nil :count 0)
    ("suvey" "Survey" nil :count 0)
    ("switchingn" "switching" nil :count 0)
    ("switft" "Swift" nil :count 0)
    ("swithing" "switching" nil :count 0)
    ("swtich" "switch" nil :count 0)
    ("swtiching" "switching" nil :count 0)
    ("swtitching" "stitching" nil :count 0)
    ("syllogisims" "syllogisms" nil :count 0)
    ("symboles" "symbols" nil :count 0)
    ("symmatry" "symmetry" nil :count 0)
    ("symmetic" "Symmetric" nil :count 0)
    ("symmmetry" "symmetry" nil :count 0)
    ("sympatheizers" "sympathizers" nil :count 0)
    ("symptotography" "symptomatology" nil :count 0)
    ("synder" "Snyder" nil :count 0)
    ("synethci" "synthetic" nil :count 1)
    ("synethetic" "synthetic" nil :count 0)
    ("synonmyous" "synonymous" nil :count 0)
    ("synonymously" "anonymously" nil :count 0)
    ("synposis" "Synopsis" nil :count 0)
    ("syntehtic" "synthetic" nil :count 0)
    ("synthaesized" "synthesized" nil :count 0)
    ("syntheic" "synthetic" nil :count 0)
    ("synthetical" "synthetic" nil :count 0)
    ("syntheticizing" "synthesizing" nil :count 0)
    ("synthetitc" "synthetic" nil :count 0)
    ("syra" "Syria" nil :count 0)
    ("syrai" "Syria" nil :count 0)
    ("systematiclly" "systematically" nil :count 0)
    ("systme" "system" nil :count 0)
    ("sytle" "style" nil :count 0)
    ("tae" "take" nil :count 1)
    ("taht" "that" nil :count 20)
    ("tained" "tainted" nil :count 1)
    ("tajfel" "TEFL" nil :count 0)
    ("taks" "tacks" nil :count 0)
    ("talkign" "talking" nil :count 0)
    ("talksa" "talks" nil :count 0)
    ("tamez" "Tames" nil :count 0)
    ("tangentilaly" "tangentially" nil :count 0)
    ("tangile" "tangible" nil :count 0)
    ("tantalazing" "tantalizing" nil :count 0)
    ("tanzimat" "Tanzimat" nil :count 7)
    ("targetetd" "targeted" nil :count 0)
    ("targetting" "targeting" nil :count 2)
    ("tauhgt" "taught" nil :count 0)
    ("tble" "table" nil :count 0)
    ("te" "to" nil :count 59)
    ("teatises" "treatises" nil :count 0)
    ("techinically" "technically" nil :count 0)
    ("technogloy" "technology" nil :count 0)
    ("technoloogy" "technology" nil :count 0)
    ("teh" "the" nil :count 32)
    ("teimless" "timeless" nil :count 0)
    ("teleogical" "teleological" nil :count 0)
    ("teleoglical" "teleological" nil :count 0)
    ("teleoglocal" "teleological" nil :count 0)
    ("teleogloy" "teleology" nil :count 0)
    ("teleogogy" "teleology" nil :count 0)
    ("teleogy" "teleology" nil :count 0)
    ("teleologic" "teleology" nil :count 0)
    ("teloglocial" "teleological" nil :count 0)
    ("telological" "teleological" nil :count 0)
    ("temperment" "temperament" nil :count 1)
    ("tempermentally" "temperamentally" nil :count 0)
    ("templaes" "templates" nil :count 0)
    ("temtations" "temptations" nil :count 0)
    ("teneable" "tenable" nil :count 2)
    ("teneble" "tenable" nil :count 1)
    ("tenion" "tension" nil :count 0)
    ("tennet" "tenet" nil :count 0)
    ("tentaive" "Tentative" nil :count 0)
    ("terible" "terrible" nil :count 0)
    ("terriroty" "territory" nil :count 0)
    ("territoriy" "territory" nil :count 0)
    ("tese" "these" nil :count 2)
    ("testiment" "testament" nil :count 0)
    ("texas" "Texas" nil :count 0)
    ("textrure" "Texture" nil :count 0)
    ("th" "Th" nil :count 201)
    ("tha" "that" nil :count 67)
    ("thanme" "than me" nil :count 0)
    ("thappiness" "happiness" nil :count 0)
    ("thatkant" "that Kant" nil :count 0)
    ("thatt" "that" nil :count 7)
    ("thcm" "them" nil :count 0)
    ("thec" "the" nil :count 0)
    ("theeeey" "thee" nil :count 0)
    ("theer" "there" nil :count 0)
    ("theere" "there" nil :count 0)
    ("thehedonistic" "the hedonistic" nil :count 0)
    ("theimportance" "the importance" nil :count 0)
    ("theivery" "thievery" nil :count 0)
    ("themometer" "thermometer" nil :count 0)
    ("themself" "themselves" nil :count 9)
    ("themselfves" "themselves" nil :count 0)
    ("themselvse" "themselves" nil :count 0)
    ("theologists" "theology" nil :count 0)
    ("theoretcally" "theoretically" nil :count 0)
    ("theoreticaly" "theoretically" nil :count 0)
    ("theoriems" "theorems" nil :count 0)
    ("theoriical" "theoretical" nil :count 0)
    ("theoryes" "theories" nil :count 0)
    ("theparticlar" "particular" nil :count 0)
    ("thepossibiity" "possibility" nil :count 0)
    ("thepower" "the power" nil :count 0)
    ("thepray" "Therapy" nil :count 0)
    ("ther" "their" nil :count 21)
    ("theraeutic" "therapeutic" nil :count 0)
    ("therapeautic" "therapeutic" nil :count 1)
    ("thereapeutic" "Therapeutic" nil :count 0)
    ("thereform" "therefrom" nil :count 0)
    ("therefre" "therefore" nil :count 0)
    ("therei" "therein" nil :count 0)
    ("therertical" "theoretical" nil :count 0)
    ("therest" "the rest" nil :count 0)
    ("thermoemter" "thermometer" nil :count 1)
    ("theroem" "Theorem" nil :count 0)
    ("theroes" "theories" nil :count 0)
    ("theroy" "theory" nil :count 1)
    ("therpay" "therapy" nil :count 0)
    ("thes" "This" nil :count 7)
    ("thesetypes" "these types" nil :count 0)
    ("thethings" "the things" nil :count 0)
    ("theworld" "the world" nil :count 2)
    ("they'ld" "they'd" nil :count 0)
    ("theybe" "they be" nil :count 0)
    ("theyhave" "they have" nil :count 0)
    ("thhan" "than" nil :count 1)
    ("thhinking" "thinking" nil :count 0)
    ("thi" "The" nil :count 88)
    ("thier" "their" nil :count 5)
    ("thigns" "things" nil :count 9)
    ("thigs" "thugs" nil :count 1)
    ("thiking" "thinking" nil :count 0)
    ("thiness" "thinness" nil :count 0)
    ("thinghood" "thing hood" nil :count 0)
    ("thingkers" "thinkers" nil :count 0)
    ("thinin" "thinking" nil :count 0)
    ("thinka" "think" nil :count 0)
    ("thinkin" "thinking" nil :count 7)
    ("thioer" "their" nil :count 0)
    ("thiscould" "this could" nil :count 1)
    ("thise" "this" nil :count 2)
    ("thiss" "this" nil :count 1)
    ("thisstatement" "this statement" nil :count 0)
    ("thjird" "third" nil :count 0)
    ("thls" "this" nil :count 0)
    ("thnk" "think" nil :count 0)
    ("thnking" "thinking" nil :count 0)
    ("thoery" "theory" nil :count 2)
    ("thogh" "though" nil :count 2)
    ("thorgh" "though" nil :count 0)
    ("thoroughy" "thoroughly" nil :count 0)
    ("thorouglhy" "thoroughly" nil :count 0)
    ("thorugh" "through" nil :count 2)
    ("thoueggh" "though" nil :count 0)
    ("thoug" "though" nil :count 1)
    ("thougths" "thoughts" nil :count 2)
    ("thouight" "thought" nil :count 0)
    ("threatend" "threatened" nil :count 0)
    ("threathen" "threaten" nil :count 0)
    ("througha" "through" nil :count 0)
    ("throughotut" "throughout" nil :count 0)
    ("ths" "This" nil :count 7)
    ("thse" "these" nil :count 1)
    ("thsi" "This" nil :count 6)
    ("tht" "that" nil :count 6)
    ("thta" "that" nil :count 1)
    ("thtat" "that" nil :count 0)
    ("thumas" "Thomas" nil :count 0)
    ("thumg" "thug" nil :count 0)
    ("thundertorm" "thunderstorm" nil :count 0)
    ("thyey" "they" nil :count 0)
    ("tiem" "time" nil :count 5)
    ("tiems" "times" nil :count 0)
    ("tiescales" "timescales" nil :count 0)
    ("timar" "Timar" nil :count 0)
    ("tis" "Ti's" nil :count 23)
    ("titeles" "titles" nil :count 0)
    ("tkae" "Take" nil :count 0)
    ("tme" "time" nil :count 5)
    ("toal" "total" nil :count 0)
    ("toegther" "together" nil :count 0)
    ("toexact" "to exact" nil :count 0)
    ("tohe" "toe" nil :count 2)
    ("tohers" "others" nil :count 0)
    ("tolstooy" "Tolstoy" nil :count 0)
    ("tolstoys" "Tolstoy's" nil :count 0)
    ("tom" "Tom" nil :count 1)
    ("tooltips" "tool-tips" nil :count 0)
    ("topc" "topic" nil :count 0)
    ("topoics" "topics" nil :count 0)
    ("torwards" "towards" nil :count 0)
    ("tos" "toes" nil :count 1)
    ("totalitarianims" "totalitarianism" nil :count 0)
    ("totalitariansim" "totalitarianism" nil :count 0)
    ("toubling" "troubling" nil :count 0)
    ("touchpoint" "touch-point" nil :count 1)
    ("touchpoints" "touch-points" nil :count 0)
    ("tought" "thought" nil :count 6)
    ("towartd" "toward" nil :count 0)
    ("towerswhich" "towers which" nil :count 0)
    ("traditios" "traditions" nil :count 0)
    ("tradtiaional" "Traditional" nil :count 0)
    ("tradtioin" "tradition" nil :count 0)
    ("traet" "treat" nil :count 0)
    ("traeted" "treated" nil :count 0)
    ("traeting" "treating" nil :count 0)
    ("traigt" "trait" nil :count 0)
    ("tranquiltiy" "tranquility" nil :count 0)
    ("tranquitliy" "tranquility" nil :count 0)
    ("tranqulity" "tranquility" nil :count 0)
    ("transceldental" "Transcendental" nil :count 0)
    ("transcendal" "transcendental" nil :count 0)
    ("transcendetal" "transcendental" nil :count 0)
    ("transcendtal" "Transcendental" nil :count 0)
    ("transcendts" "transcends" nil :count 0)
    ("transcental" "Transiently" nil :count 4)
    ("transcentdenal" "Transcendental" nil :count 0)
    ("transcentental" "Transcendental" nil :count 0)
    ("transciprt" "transcript" nil :count 0)
    ("transcirtiopn" "transcription" nil :count 0)
    ("transendental" "transcendental" nil :count 0)
    ("transfered" "transferred" nil :count 0)
    ("transfereed" "transferred" nil :count 0)
    ("transferrence" "transference" nil :count 0)
    ("transicnece" "transience" nil :count 0)
    ("transistions" "transitions" nil :count 0)
    ("transofmration" "transformation" nil :count 0)
    ("transofmred" "transformed" nil :count 0)
    ("transofrmative" "transformative" nil :count 0)
    ("trascribe" "transcribe" nil :count 0)
    ("trasitivity" "transitivity" nil :count 0)
    ("trasncentdental" "Transcendental" nil :count 0)
    ("trasncript" "Transcript" nil :count 0)
    ("travelled" "traveled" nil :count 0)
    ("travelling" "traveling" nil :count 1)
    ("trdemark" "trademark" nil :count 0)
    ("tream" "treat" nil :count 1)
    ("treament" "treatment" nil :count 0)
    ("trecherous" "treacherous" nil :count 1)
    ("trechery" "treachery" nil :count 1)
    ("treet" "treat" nil :count 0)
    ("trendin" "trending" nil :count 0)
    ("trespeass" "trespass" nil :count 0)
    ("tresure" "treasure" nil :count 0)
    ("trianble" "trainable" nil :count 0)
    ("triastise" "trusties" nil :count 0)
    ("triblets" "triplets" nil :count 0)
    ("tringale" "triangle" nil :count 0)
    ("triump" "triumph" nil :count 1)
    ("triumverate" "Triumvirate" nil :count 0)
    ("triusms" "truisms" nil :count 1)
    ("truesst" "truest" nil :count 0)
    ("trul" "truly" nil :count 1)
    ("trully" "truly" nil :count 0)
    ("trunk" "Trunk" nil :count 1)
    ("tryig" "trying" nil :count 0)
    ("tryign" "trying" nil :count 0)
    ("tsensibility" "sensibility" nil :count 0)
    ("tsurt" "Stuart" nil :count 0)
    ("tthe" "the" nil :count 1)
    ("ttudents" "students" nil :count 0)
    ("tudy" "study" nil :count 1)
    ("tulljtrask" "Tuljtrask" nil :count 0)
    ("tultrask" "Tuljtrask" nil :count 0)
    ("tunultuous" "tumultuous" nil :count 0)
    ("turth" "truth" nil :count 0)
    ("twentietch" "twentieth" nil :count 0)
    ("twnety" "Twenty" nil :count 0)
    ("twoard" "toward" nil :count 0)
    ("twoquestions" "two questions" nil :count 0)
    ("typesript" "TypeScript" nil :count 0)
    ("ubpringing" "upbringing" nil :count 0)
    ("udnerstand" "understand" nil :count 0)
    ("udnerstandigns" "understandings" nil :count 0)
    ("uggly" "ugly" nil :count 0)
    ("ukrain" "Ukraine" nil :count 0)
    ("ulity" "utility" nil :count 0)
    ("unanalysed" "analyzed" nil :count 0)
    ("unanlyzable" "Unanalyzable" nil :count 0)
    ("unbenknownst" "unbeknownst" nil :count 0)
    ("unbiasedly" "unbiased" nil :count 0)
    ("uncheckd" "unchecked" nil :count 0)
    ("unchkecked" "unchecked" nil :count 0)
    ("unconrollable" "uncontrollable" nil :count 0)
    ("unconscoius" "Unconscious" nil :count 0)
    ("unde" "under" nil :count 2)
    ("undeed" "Undead" nil :count 0)
    ("undegraduate" "undergraduate" nil :count 0)
    ("undeneably" "undeniably" nil :count 0)
    ("underestand" "understand" nil :count 0)
    ("underestanding" "understanding" nil :count 1)
    ("undergiong" "undergoing" nil :count 0)
    ("underrecognized" "under-recognized" nil :count 0)
    ("undersanding" "understanding" nil :count 0)
    ("undersatnd" "understand" nil :count 0)
    ("undersetanding" "understanding" nil :count 0)
    ("undersiability" "undesirability" nil :count 0)
    ("undersood" "understood" nil :count 0)
    ("understake" "undertake" nil :count 0)
    ("understaniding" "understanding" nil :count 0)
    ("understanidng" "Understanding" nil :count 1)
    ("understnad" "understand" nil :count 3)
    ("understnading" "understanding" nil :count 3)
    ("understnaidng" "understanding" nil :count 0)
    ("understnaind" "understand" nil :count 0)
    ("understnaindg" "understanding" nil :count 0)
    ("understnand" "understand" nil :count 0)
    ("understnding" "understanding" nil :count 0)
    ("undesireable" "undesirable" nil :count 0)
    ("undestand" "understand" nil :count 0)
    ("undestanding" "understanding" nil :count 0)
    ("undisicplined" "undisciplined" nil :count 0)
    ("undisputability" "indisputably" nil :count 0)
    ("undnrsteading" "understating" nil :count 0)
    ("undnruable" "unendurable" nil :count 0)
    ("undoubtable" "indubitable" nil :count 0)
    ("undoubtably" "indubitably" nil :count 0)
    ("undoutable" "undoubtable" nil :count 0)
    ("undresand" "understand" nil :count 0)
    ("undubitable" "indubitable" nil :count 0)
    ("unduring" "enduring" nil :count 0)
    ("unelss" "unless" nil :count 0)
    ("unequiovocally" "unequivocally" nil :count 0)
    ("unequivicollay" "unequivocally" nil :count 0)
    ("unequivocaly" "unequivocally" nil :count 0)
    ("uneqxpectedly" "unexpectedly" nil :count 0)
    ("uneventul" "uneventful" nil :count 0)
    ("unexaamined" "unexamined" nil :count 0)
    ("unexamined" "unquestioned" nil :count 1)
    ("unexpeceed" "unexpected" nil :count 0)
    ("unexpored" "unexplored" nil :count 0)
    ("unfods" "unfolds" nil :count 0)
    ("ungergraduate" "Undergraduate" nil :count 0)
    ("unglamrous" "unglamorous" nil :count 0)
    ("ungry" "hungry" nil :count 0)
    ("unhistorial" "unhistorical" nil :count 0)
    ("unifiying" "unifying" nil :count 0)
    ("unilingualism" "bilingualism" nil :count 0)
    ("unilke" "Unlike" nil :count 0)
    ("unintential" "unintentional" nil :count 0)
    ("unintersting" "uninteresting" nil :count 0)
    ("unintuitive" "counterintuitive" nil :count 0)
    ("uniquenes" "uniqueness" nil :count 0)
    ("uniquivocally" "Unequivocally" nil :count 0)
    ("unitiated" "initiated" nil :count 0)
    ("unitl" "until" nil :count 0)
    ("unituitive" "intuitive" nil :count 0)
    ("unitution" "intuition" nil :count 0)
    ("univerally" "universally" nil :count 0)
    ("univere" "universe" nil :count 0)
    ("univeristy" "university" nil :count 0)
    ("univerisyt" "University" nil :count 0)
    ("univocally" "unequivocally" nil :count 0)
    ("univres" "univ res" nil :count 0)
    ("univresal" "universal" nil :count 0)
    ("unjuect" "unjust" nil :count 0)
    ("unjustice" "injustice" nil :count 0)
    ("unjustificed" "unjustified" nil :count 0)
    ("unloyal" "un-loyal" nil :count 0)
    ("unnecesary" "unnecessary" nil :count 0)
    ("unorderly" "disorderly" nil :count 0)
    ("unosrted" "Unsorted" nil :count 0)
    ("unperceied" "unperceived" nil :count 0)
    ("unprecedentend" "unprecedented" nil :count 0)
    ("unprecedententd" "unprecedented" nil :count 0)
    ("unprecendent" "Unprecedented" nil :count 0)
    ("unprovable" "improvable" nil :count 0)
    ("unresolvable" "unsolvable" nil :count 0)
    ("unrestaighted" "unrestrained" nil :count 0)
    ("unrestraigned" "unrestrained" nil :count 0)
    ("unsearched" "unsaved" nil :count 0)
    ("unsimilar" "dissimilar" nil :count 0)
    ("unsolveable" "unsolvable" nil :count 0)
    ("unsorrted" "Unsorted" nil :count 0)
    ("unsufficieny" "insufficiency" nil :count 0)
    ("unsurprisngly" "Unsurprisingly" nil :count 0)
    ("unted" "united" nil :count 0)
    ("untimly" "Untimely" nil :count 0)
    ("untouced" "untouched" nil :count 0)
    ("untrustowrhty" "untrustworthy" nil :count 0)
    ("unusd" "Unused" nil :count 0)
    ("unust" "unjust" nil :count 0)
    ("unustly" "unjustly" nil :count 0)
    ("unusuable" "unusable" nil :count 0)
    ("unvelief" "unbelief" nil :count 0)
    ("unviolible" "inviolable" nil :count 0)
    ("unwitten" "unwritten" nil :count 0)
    ("updtae" "Update" nil :count 2)
    ("uprigins" "uprisings" nil :count 0)
    ("uptias" "utopias" nil :count 0)
    ("urseleves" "ourselves" nil :count 0)
    ("usbtely" "subtely" nil :count 0)
    ("useages" "usages" nil :count 0)
    ("useeul" "useful" nil :count 0)
    ("usmay" "us may" nil :count 0)
    ("usstainable" "sustainable" nil :count 0)
    ("ustice" "justice" nil :count 0)
    ("ut" "but" nil :count 1)
    ("utiities" "utilities" nil :count 0)
    ("utiity" "utility" nil :count 1)
    ("utilites" "utilities" nil :count 0)
    ("utiliyt" "utility" nil :count 0)
    ("utilizi" "utilize" nil :count 0)
    ("utilty" "utility" nil :count 0)
    ("utimate" "ultimate" nil :count 0)
    ("utlitarian" "utilitarian" nil :count 0)
    ("uture" "future" nil :count 0)
    ("vaibility" "viability" nil :count 0)
    ("vaid" "valid" nil :count 0)
    ("vaious" "various" nil :count 0)
    ("valeus" "values" nil :count 0)
    ("valiidty" "validity" nil :count 0)
    ("vallue" "value" nil :count 2)
    ("vallues" "values" nil :count 0)
    ("valuble" "valuable" nil :count 0)
    ("valueable" "valuable" nil :count 0)
    ("vanishngly" "vanishingly" nil :count 0)
    ("vayasha" "Vaysha" nil :count 2)
    ("vehiles" "vehicles" nil :count 0)
    ("veiw" "view" nil :count 0)
    ("vera" "versa" nil :count 0)
    ("verabatim" "verbatim" nil :count 0)
    ("vereything" "everything" nil :count 0)
    ("veruss" "versus" nil :count 0)
    ("vew" "view" nil :count 0)
    ("vgravity" "gravity" nil :count 0)
    ("victorie" "victories" nil :count 0)
    ("videois" "videos" nil :count 0)
    ("vioalted" "violated" nil :count 0)
    ("vioelcen" "violence" nil :count 1)
    ("viruosity" "virtuosity" nil :count 0)
    ("viruous" "Virtuous" nil :count 0)
    ("virutosity" "virtuosity" nil :count 0)
    ("virutous" "virtuous" nil :count 0)
    ("virutuousity" "virutousity" nil :count 0)
    ("viw" "vie" nil :count 1)
    ("viwe" "view" nil :count 0)
    ("vlaues" "values" nil :count 0)
    ("vocabular" "vocabulary" nil :count 0)
    ("vocaulary" "vocabulary" nil :count 0)
    ("volntary" "voluntary" nil :count 0)
    ("volunter" "voluntary" nil :count 0)
    ("vr" "BUI" nil :count 0)
    ("vui" "BUI" nil :count 0)
    ("vulerable" "vulnerable" nil :count 0)
    ("vvaried" "varied" nil :count 0)
    ("waht" "what" nil :count 6)
    ("walkthrough" "walk-through" nil :count 0)
    ("wallace" "Wallace" nil :count 9)
    ("walley" "wallet" nil :count 0)
    ("wantns" "wants" nil :count 0)
    ("warant" "warrant" nil :count 0)
    ("warrring" "Warring" nil :count 0)
    ("wasnt" "wasn't" nil :count 0)
    ("wat" "what" nil :count 0)
    ("wath" "what" nil :count 0)
    ("waysin" "ways in" nil :count 0)
    ("wcaverley" "Waverley" nil :count 0)
    ("weakpoint" "weak point" nil :count 0)
    ("weaping" "weeping" nil :count 0)
    ("websie" "website" nil :count 0)
    ("weeklly" "weekly" nil :count 0)
    ("weekss" "weeks" nil :count 0)
    ("wehether" "whether" nil :count 0)
    ("weighet" "weight" nil :count 0)
    ("weighig" "weighing" nil :count 0)
    ("wel" "well" nil :count 4)
    ("wepaon" "weapon" nil :count 0)
    ("wereturn" "we return" nil :count 0)
    ("wesite" "Website" nil :count 0)
    ("wetern" "Western" nil :count 0)
    ("weving" "weaving" nil :count 0)
    ("wha" "what" nil :count 39)
    ("whad" "What" nil :count 0)
    ("whaetever" "whatever" nil :count 0)
    ("whataever" "whatever" nil :count 0)
    ("whatt" "What" nil :count 2)
    ("whcih" "which" nil :count 1)
    ("whhich" "which" nil :count 0)
    ("whic" "which" nil :count 7)
    ("whichreason" "which reason" nil :count 0)
    ("whichrests" "which rests" nil :count 0)
    ("whichwe" "which we" nil :count 0)
    ("whichyou" "which you" nil :count 0)
    ("whick" "wick" nil :count 0)
    ("whiel" "while" nil :count 3)
    ("whille" "while" nil :count 0)
    ("whoe" "whole" nil :count 4)
    ("wholeosome" "wholesome" nil :count 0)
    ("wholesole" "wholesome" nil :count 0)
    ("whteher" "whether" nil :count 0)
    ("wideneing" "widening" nil :count 0)
    ("widnow" "window" nil :count 0)
    ("wiest" "wisest" nil :count 0)
    ("wiht" "with" nil :count 4)
    ("wiill" "will" nil :count 0)
    ("wil" "will" nil :count 13)
    ("wildernes" "wilderness" nil :count 0)
    ("wilil" "Will" nil :count 0)
    ("willmust" "will must" nil :count 0)
    ("winderness" "wilderness" nil :count 0)
    ("winsotn" "Winston" nil :count 0)
    ("wirgh" "right" nil :count 0)
    ("wirtten" "written" nil :count 0)
    ("witholding" "withholding" nil :count 0)
    ("witholds" "withholds" nil :count 0)
    ("withou" "without" nil :count 1)
    ("withousome" "without some" nil :count 0)
    ("withsrawn" "withdrawn" nil :count 0)
    ("wittegenstein" "Wittgenstein" nil :count 0)
    ("wll" "will" nil :count 2)
    ("wnat" "want" nil :count 1)
    ("wnated" "wanted" nil :count 0)
    ("wnats" "Wants" nil :count 0)
    ("wods" "words" nil :count 0)
    ("wolrd" "world" nil :count 0)
    ("woma" "woman" nil :count 0)
    ("wondeered" "wondered" nil :count 0)
    ("wong" "wrong" nil :count 3)
    ("wordla" "world and" nil :count 0)
    ("wordpress" "WordPress" nil :count 0)
    ("worhty" "worthy" nil :count 0)
    ("workaounds" "workarounds" nil :count 0)
    ("worklod" "workload" nil :count 0)
    ("worlc" "world" nil :count 0)
    ("worring" "Worrying" nil :count 0)
    ("worsed" "worsened" nil :count 0)
    ("worthwile" "worthwhile" nil :count 0)
    ("woud" "would" nil :count 2)
    ("woudl" "would" nil :count 5)
    ("wouild" "would" nil :count 4)
    ("wrech" "wrench" nil :count 0)
    ("wries" "wires" nil :count 4)
    ("wriing" "writing" nil :count 1)
    ("writen" "written" nil :count 2)
    ("writetn" "written" nil :count 0)
    ("writig" "writing" nil :count 0)
    ("writse" "writes" nil :count 0)
    ("writting" "writing" nil :count 1)
    ("writtng" "writing" nil :count 0)
    ("wrld" "world" nil :count 0)
    ("wrogn" "wrong" nil :count 0)
    ("wrokflow" "Workflow" nil :count 0)
    ("wrondoer" "wrongdoer" nil :count 0)
    ("wrothwhile" "worthwhile" nil :count 0)
    ("wrting" "writing" nil :count 0)
    ("wseekly" "Weekly" nil :count 0)
    ("wtha" "with a" nil :count 0)
    ("wthout" "without" nil :count 0)
    ("wtih" "with" nil :count 1)
    ("wtverley" "Waverley" nil :count 0)
    ("wuwei" "wu-wei" nil :count 1)
    ("xepriencese" "princes" nil :count 0)
    ("xionn" "Xionan" nil :count 0)
    ("xists" "exists" nil :count 1)
    ("xperieince" "Prince" nil :count 0)
    ("xposded" "exposed" nil :count 0)
    ("yaer" "year" nil :count 0)
    ("yeared" "yearned" nil :count 0)
    ("yeields" "yields" nil :count 0)
    ("yeras" "years" nil :count 0)
    ("yor" "your" nil :count 3)
    ("yoruself" "yourself" nil :count 0)
    ("youo" "you" nil :count 1)
    ("yourslf" "yourself" nil :count 0)
    ("youself" "yourself" nil :count 0)
    ("youtube" "YouTube" nil :count 13)
    ("yto" "to" nil :count 0)
    ("yu" "you" nil :count 5)
    ("yuo" "you" nil :count 0)
    ("zeitgeight" "zeitgeist" nil :count 0)
    ("zetelkasten" "Zettelkasten" nil :count 0)
    ("zettekasten" "Zettelkasten" nil :count 2)
    ("zettelaksen" "Zettelkasten" nil :count 1)
    ("zettelasten" "Zettelkasten" nil :count 0)
    ("zettelkaksten" "Zettelkasten" nil :count 0)
    ("zettelkasen" "Zettelkasten" nil :count 4)
    ("zettelkasens" "Zettelkastens" nil :count 0)
    ("zettelkasetn" "Zettelkasten" nil :count 2)
    ("zettelkasten" "Zettelkasten" nil :count 36)
    ("zettelkaten" "Zettelkasten" nil :count 0)
    ("zettelkatsten" "Zettelkasten" nil :count 0)
    ("zettelklasten" "Zettelkasten" nil :count 0)
    ("zettelknaste" "Zettelkasten" nil :count 0)
    ("zhuangzi" "Zhuangzi" nil :count 5)
    ("zinoism" "Zionism" nil :count 0)
    ("zunnoticed" "Unnoticed" nil :count 0)
    ("zwe" "We" nil :count 0)
   ))

(define-abbrev-table 'org-msg-edit-mode-abbrev-table
  '(
    ("beforehannd" "beforehand" nil :count 0)
    ("consitency" "consistency" nil :count 0)
    ("eexpect" "expect" nil :count 0)
    ("mesmerizin" "mesmerizing" nil :count 1)
    ("pararaph" "paragraph" nil :count 0)
    ("presumamably" "presumably" nil :count 0)
    ("schedulign" "scheduling" nil :count 0)
   ))

(define-abbrev-table 'python-mode-abbrev-table
  '(
    ("collors" "colors" nil :count 0)
   ))

(define-abbrev-table 'racket-mode-abbrev-table
  '(
    ("consolidat" "consolidate" nil :count 0)
    ("consqequent" "consequent" nil :count 0)
    ("creaed" "created" nil :count 0)
    ("definiton" "definition" nil :count 0)
    ("expresions" "expressions" nil :count 0)
    ("follwing" "following" nil :count 0)
    ("impelment" "Implement" nil :count 0)
    ("methid" "method" nil :count 0)
    ("mutatios" "mutations" nil :count 0)
    ("nmumber" "number" nil :count 0)
    ("paramters" "parameters" nil :count 0)
    ("reprsentstions" "representations" nil :count 0)
    ("retern" "return" nil :count 0)
    ("sevaral" "several" nil :count 0)
    ("syntatic" "Syntactic" nil :count 0)
    ("toher" "other" nil :count 0)
    ("varible" "variable" nil :count 0)
   ))

(define-abbrev-table 'scss-mode-abbrev-table
  '(
    ("conssitent" "consistent" nil :count 0)
    ("enlargen" "Enlarge" nil :count 0)
   ))

(define-abbrev-table 'text-mode-abbrev-table
  '(
    ("clearner" "cleaner" nil :count 0)
    ("conveniet" "convenient" nil :count 0)
    ("doesnt" "doesn't" nil :count 9)
    ("functionlaity" "functionality" nil :count 0)
    ("occassionall" "Occasionally" nil :count 0)
   ))

(define-abbrev-table 'vimrc-mode-abbrev-table
  '(
    ("thnk" "think" nil :count 0)
   ))

